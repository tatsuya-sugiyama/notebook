{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"vgg darts ga.ipynb","provenance":[],"collapsed_sections":["LWsydO_m0MtN","fM8zsEyXcWuk","DPWZJIgIcfAg","SUQfCKp2cnFq","OUQoaMlybaLE","TtrTvApwmZ-g","13lGiBWpco6I","gii9_gAMkEyV","pmMw2Fhi2gdl","HTOVV3pkhHuL","YvJ4TmideTvA"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"eEoEfZteii7G","executionInfo":{"status":"ok","timestamp":1609826254085,"user_tz":-540,"elapsed":1260,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["import os\n","import sys\n","import time\n","import glob\n","import json\n","import pytz\n","import numpy as np\n","import logging\n","import seaborn as sns\n","import argparse\n","import datetime\n","import networkx as nx\n","import matplotlib.pyplot as plt\n","\n","import torch #基本モジュール\n","from torch.autograd import Variable #自動微分用\n","import torch.nn as nn #ネットワーク構築用\n","import torch.optim as optim #最適化関数\n","import torch.nn.functional as F #ネットワーク用の様々な関数\n","import torch.utils.data #データセット読み込み関連\n","import torchvision #画像関連\n","from torchvision import datasets, models, transforms #画像用データセット諸々\n","import torch.backends.cudnn as cudnn"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"lr6-75BfilLZ","executionInfo":{"status":"ok","timestamp":1609826254693,"user_tz":-540,"elapsed":1853,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["SERVER = False"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"EnR-notnjo3H","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1609826256735,"user_tz":-540,"elapsed":3880,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}},"outputId":"b89f4473-c281-407a-a7c3-ee80855e2fe0"},"source":["if SERVER:\n","  from tqdm import tqdm\n","  import shutil\n","  import graphviz\n","\n","  import deap\n","  from deap import base, creator, tools\n","  import random\n","\n","else:\n","  from google.colab import output\n","  from tqdm.notebook import tqdm\n","  import graphviz\n","  \n","  !pip install deap\n","  output.clear()\n","  \n","  import deap\n","  from deap import base, creator, tools\n","  import random\n","\n","  \n","  from google.colab import drive\n","  drive.mount('/content/drive')"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"LWsydO_m0MtN"},"source":["# utils"]},{"cell_type":"markdown","metadata":{"id":"fM8zsEyXcWuk"},"source":["## other"]},{"cell_type":"code","metadata":{"id":"ZCJioEPw2esA","executionInfo":{"status":"ok","timestamp":1609826256736,"user_tz":-540,"elapsed":3867,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def argspace(*funcs, **kwds):\n","  def deco(f):\n","    def inner(**ikwds):\n","      for g in funcs:\n","        kwds.update(g())\n","      kwds.update(ikwds)\n","      return f(argparse.Namespace(**kwds))\n","    return inner\n","  return deco"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"6ml84YYEzZ_4","executionInfo":{"status":"ok","timestamp":1609826256737,"user_tz":-540,"elapsed":3858,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def set_seed(seed):\n","  np.random.seed(seed)\n","  torch.manual_seed(seed)\n","  torch.cuda.manual_seed(seed)"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"vPVS7mOfYboW","executionInfo":{"status":"ok","timestamp":1609826256737,"user_tz":-540,"elapsed":3848,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class Singleton(object):\n","  def __new__(cls, *args, **kargs):\n","    if not hasattr(cls, \"_instance\"):\n","      cls._instance = super(Singleton, cls).__new__(cls)\n","    return cls._instance"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"NiwPvH9hBAqs","executionInfo":{"status":"ok","timestamp":1609826256738,"user_tz":-540,"elapsed":3839,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class Experiment(Singleton):\n","  def __init__(self):\n","    if not hasattr(self, 'func'):\n","      self.func = {}\n","  \n","  def _store(self, key, f, order):\n","    self.func.setdefault(key, {})\n","    self.func[key].update({f.__name__:(order, f)})\n","\n","  def __call__(self, key):\n","    def f(*args, **kwds):\n","      if key not in self.func: return None\n","\n","      funcs = sorted(self.func[key].values(), key=lambda x: x[0])\n","      return [g(*args, **kwds) for _, g in funcs]\n","    return f\n","\n","  def event(*key, order=0):\n","    def d(f):\n","      for k in key:\n","        Experiment()._store(k, f, order)\n","      def inner(*args, **kwds):\n","        return f(*args, **kwds)\n","      return inner\n","    return d\n","  \n","  def reset():\n","    Experiment().func = {}"],"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DPWZJIgIcfAg"},"source":["## metrics"]},{"cell_type":"code","metadata":{"id":"CJ28A29Kjm_4","executionInfo":{"status":"ok","timestamp":1609826256739,"user_tz":-540,"elapsed":3832,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def accuracy(output, target, topk=(1,)):\n","  maxk = max(topk)\n","  batch_size = target.size(0)\n","\n","  _, pred = output.topk(maxk, 1, True, True)\n","  pred = pred.t()\n","  correct = pred.eq(target.view(1, -1).expand_as(pred))\n","\n","  res = []\n","  for k in topk:\n","    correct_k = correct[:k].reshape(-1).float().sum(0)\n","    res.append(correct_k.mul_(100.0/batch_size))\n","  return res"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZZUgjfdokzq8","executionInfo":{"status":"ok","timestamp":1609826256740,"user_tz":-540,"elapsed":3824,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class AvgrageMeter(object):\n","\n","  def __init__(self):\n","    self.reset()\n","\n","  def reset(self):\n","    self.avg = 0\n","    self.sum = 0\n","    self.cnt = 0\n","\n","  def update(self, val, n=1):\n","    self.sum += val * n\n","    self.cnt += n\n","    self.avg = self.sum / self.cnt"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"5HIFrNph_P8t","executionInfo":{"status":"ok","timestamp":1609826256740,"user_tz":-540,"elapsed":3814,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class Metrics():\n","  def __init__(self, model, dataloader):\n","    self._run(model, dataloader)\n","    self.epsilon = 1e-7\n","  \n","  @torch.no_grad()\n","  def _run(self, model, dataloader):\n","    data, target = next(iter(dataloader))\n","    device =  next(model.parameters()).device\n","    print(device)\n","    num = target.max().long() + 1\n","    cm = torch.zeros(num, num).to(device)\n","\n","    for i, (data, target) in enumerate(dataloader):\n","      data = data.to(device)\n","      target = target.to(device)\n","      outputs = model(data)\n","      _, preds = torch.max(outputs, 1)\n","      for t, p in zip(target.view(-1), preds.view(-1)):\n","        cm[t.long(), p.long()] += 1\n","\n","    self.matrix = cm\n","    self.dim = num\n","    self.sum0 = self.matrix.sum(0)\n","    self.sum1 = self.matrix.sum(1)\n","    self.sum = self.matrix.sum()\n","\n","  def confusion_matrix(self):\n","    return self.matrix\n","\n","  def TP(self, index):\n","    return self.matrix[index][index]\n","\n","  def FN(self, index):\n","    return self.sum1[index] - self.TP(index)\n","\n","  def FP(self, index):\n","    return self.sum0[index] - self.TP(index)\n","\n","  def TN(self, index):\n","    return self.sum - self.TP(index) - self.FN(index) - self.FP(index)\n","\n","  def _sum(self, F):\n","    return sum(F(i) for i in range(self.dim))\n","    \n","  def _micro(self, F, G):\n","    return self._sum(F) / (self._sum(F) + self._sum(G) + self.epsilon)\n","\n","  def _macro(self, F, G):\n","    return sum(F(i) / (F(i) + G(i) + self.epsilon) for i in range(self.dim)) / self.dim\n","\n","  def _switch(self, F, G, micro):\n","    return (self._micro(F, G) if micro else self._macro(F, G))\n","\n","  def accuracy(self, micro=True):\n","    return (self._sum(self.TP) / self.sum if micro else \n","            (sum(self.TP(i) / self.sum1 for i in range(self.dim)) / self.dim).mean())\n","\n","  def precision(self, micro=True):\n","    return self._switch(self.TP, self.FP, micro)\n","\n","  def recall(self, micro=True):\n","    return self._switch(self.TP, self.FN, micro)\n","\n","  def specificity(self, micro=True):\n","    return self._switch(self.TN, self.FP, micro)\n","\n","  def f_measure(self, micro=True):\n","    p, r = self.precision(micro), self.recall(micro)\n","    return 2 * p * r / (p + r + self.epsilon)\n","\n","  def print(self):\n","    print(self.confusion_matrix())\n","    print(\"accuracy \", self.accuracy(), self.accuracy(micro=False))\n","    print(\"precision \", self.precision(), self.precision(micro=False))\n","    print(\"recall \", self.recall(), self.recall(micro=False))\n","    print(\"specificity \", self.specificity(), self.specificity(micro=False))\n","    print(\"f_measure \", self.f_measure(), self.f_measure(micro=False))"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"8IpEF6BHK7oK","executionInfo":{"status":"ok","timestamp":1609826256741,"user_tz":-540,"elapsed":3806,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def count_param(model : nn.Module):\n","  param = model.named_parameters()\n","  itr = [np.prod(v.size()) for name, v in param if \"auxiliary\" not in name]\n","  return np.sum(itr)"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"SVGYAnCPPEma","executionInfo":{"status":"ok","timestamp":1609826256742,"user_tz":-540,"elapsed":3798,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["from typing import Union\n","from collections import OrderedDict\n","@torch.no_grad()\n","def square_error(m : Union[nn.Module, OrderedDict], n : Union[nn.Module, OrderedDict]):\n","  m = m.parameters() if isinstance(m, nn.Module) else m.values()\n","  n = n.parameters() if isinstance(n, nn.Module) else n.values()\n","  s = [torch.sum((x - y) * (x - y)) for x, y in zip(m, n)]\n","  return sum(s)"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"37lfEVr3xxSN","executionInfo":{"status":"ok","timestamp":1609826256742,"user_tz":-540,"elapsed":3789,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def init_module(target, source):\n","  with torch.no_grad():\n","    for bp, ap in zip(target.parameters(), source.parameters()):\n","      bp.add_(ap - bp)"],"execution_count":13,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"SUQfCKp2cnFq"},"source":["## save"]},{"cell_type":"code","metadata":{"id":"zjbwvKN0qRtM","executionInfo":{"status":"ok","timestamp":1609826256743,"user_tz":-540,"elapsed":3780,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def path_with_time(path : str) -> str:\n","  dt_now = datetime.datetime.now(pytz.timezone('Asia/Tokyo'))\n","  return '{}-{}'.format(path, dt_now.strftime('%Y-%m-%d_%H-%M-%S'))"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"lbL3qJOIomWe","executionInfo":{"status":"ok","timestamp":1609826256744,"user_tz":-540,"elapsed":3770,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def create_exp_dir(path, scripts_to_save=None):\n","  if not os.path.exists(path):\n","    os.mkdir(path)\n","  print('Experiment dir : {}'.format(path))\n","\n","  if scripts_to_save is not None:\n","    os.mkdir(os.path.join(path, 'scripts'))\n","    for script in scripts_to_save:\n","      dst_file = os.path.join(path, 'scripts', os.path.basename(script))\n","      shutil.copyfile(script, dst_file)"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"-1UaF37zpTFY","executionInfo":{"status":"ok","timestamp":1609826256744,"user_tz":-540,"elapsed":3758,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def init_logging(save_path):\n","  class Formatter(logging.Formatter):\n","      \"\"\"override logging.Formatter to use an aware datetime object\"\"\"\n","      def converter(self, timestamp):\n","          dt = datetime.datetime.fromtimestamp(timestamp)\n","          tzinfo = pytz.timezone('Asia/Tokyo')\n","          return tzinfo.localize(dt)\n","          \n","      def formatTime(self, record, datefmt=None):\n","          dt = self.converter(record.created)\n","          if datefmt:\n","              s = dt.strftime(datefmt)\n","          else:\n","              try:\n","                  s = dt.isoformat(timespec='milliseconds')\n","              except TypeError:\n","                  s = dt.isoformat()\n","          return s\n","\n","  log_format = '%(asctime)s %(message)s'\n","  logging.basicConfig(stream=sys.stdout, level=logging.INFO,\n","      format=log_format, datefmt='%m/%d %I:%M:%S %p')\n","  fh = logging.FileHandler(os.path.join(save_path, 'log.txt'))\n","  fh.setFormatter(Formatter(log_format))\n","  logging.getLogger().addHandler(fh)"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"bVnLFIMristi","executionInfo":{"status":"ok","timestamp":1609826257063,"user_tz":-540,"elapsed":4065,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def save_dir(dir : str, drivepath = './drive/My Drive/ml'):\n","  if SERVER: return\n","  if not dir: return\n","\n","  import subprocess\n","  res = subprocess.run([\"cp\", \"-r\", \"./\" + dir, drivepath], stdout=subprocess.PIPE)\n","  sys.stdout.write(res.stdout)"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"fdtpwLbLudLR","executionInfo":{"status":"ok","timestamp":1609826257064,"user_tz":-540,"elapsed":4056,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class Store():\n","  def __init__(self, dir=\"result\", name=\"log\", fig=[]):\n","    self.dict = {}\n","    self.dir = dir\n","    self.name = name\n","    self.fig = fig\n","  \n","  def add(self, name, value):\n","    if not name in self.dict:\n","      self.dict[name] = []\n","    self.dict[name].append(value)\n","  \n","  def apply(self, name, func):\n","    if not name in self.dict:\n","      self.dict[name] = []\n","    return func(self.dict[name])\n","\n","  def update(self, store : 'Store'):\n","    self.dict.update(store.dict)\n","\n","  def save(self):\n","    self.save_log()\n","    for metrix, x, y in self.fig:\n","      self.save_fig(metrix, x, y)\n","\n","  def save_log(self, name=None):\n","    name = name if name else self.name\n","    path = os.path.join(self.dir, name + \".txt\")\n","    with open(path, mode='w') as f:\n","      f.write(\"%s\" % self.dict)\n","\n","  def save_fig(self, metrix, xlabel, ylabel, show=True):\n","    fig = plt.figure()\n","\n","    if type(metrix) is str:\n","      times = len(self.dict[metrix])\n","      plt.plot(np.arange(times), self.dict[metrix])\n","    else :\n","      times = len(self.dict[metrix[0]])\n","      for m in metrix:\n","        plt.plot(np.arange(times), self.dict[m], label=m)\n","      metrix = \"_\".join(metrix)\n","    \n","    plt.xlabel(xlabel)\n","    plt.ylabel(ylabel)\n","    plt.legend()\n","    if show and not SERVER: plt.show()\n","    fig.savefig(os.path.join(self.dir, \"%s_%d.png\" % (metrix, times)))\n","\n","  def __repr__(self):\n","    return \"store in %s\" % self.dict"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"oGBb6LPrS4cM","executionInfo":{"status":"ok","timestamp":1609826257065,"user_tz":-540,"elapsed":4048,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def render_graph(graph, path):\n","  format = dict(\n","      format='png', \n","      edge_attr=dict(fontsize='20', fontname=\"times\"),\n","      node_attr=dict(style='filled', shape='rect', align='center', fontsize='20', height='0.5', width='0.5', penwidth='2', fontname=\"times\"),\n","      engine='dot' # circo, dot, fdp, neato, osage, sfdp, twopi\n","  )\n","\n","  dg = graphviz.Digraph(**format)\n","\n","  dg.attr('node', fillcolor='dodgerblue4', fontcolor='white', fontsize='15') # coral, \n","  for node in graph.nodes():\n","    attr = graph.nodes[node]\n","    label = attr['name'] if 'name' in attr else str(node)\n","    label += '\\n(%s, %d, %d)' % (attr['channel'], 32 / attr['stride'], 32 / attr['stride'])\n","    dg.node(str(node), label=label)\n","\n","  for (i, j) in graph.edges():\n","    attr = graph.edges[i, j]\n","    label = attr['module']\n","    label = \"\"\n","    style = 'bold' if attr['module'] == 'forward' else 'dashed'\n","    dg.edge(str(i), str(j), label=label, style=style)\n","\n","  dg.render(path)\n","  return dg"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"hDTUKEVAzEk0","executionInfo":{"status":"ok","timestamp":1609826257066,"user_tz":-540,"elapsed":4038,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def save_heatmap(data : torch.tensor, path, format='1.2f'):\n","  plt.figure()\n","  data = data.detach().cpu().clone().numpy()\n","  sns.heatmap(data, annot=True, fmt=format)\n","  plt.savefig(path)\n","  plt.close('all')"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OUQoaMlybaLE"},"source":["# dataset"]},{"cell_type":"code","metadata":{"id":"NeYmMerBr-HU","executionInfo":{"status":"ok","timestamp":1609826257068,"user_tz":-540,"elapsed":4028,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class Cutout(object):\n","  def __init__(self, length):\n","    self.length = length\n","\n","  def __call__(self, img):\n","    h, w = img.size(1), img.size(2)\n","    mask = np.ones((h, w), np.float32)\n","    y = np.random.randint(h)\n","    x = np.random.randint(w)\n","\n","    y1 = np.clip(y - self.length // 2, 0, h)\n","    y2 = np.clip(y + self.length // 2, 0, h)\n","    x1 = np.clip(x - self.length // 2, 0, w)\n","    x2 = np.clip(x + self.length // 2, 0, w)\n","\n","    mask[y1: y2, x1: x2] = 0.\n","    mask = torch.from_numpy(mask)\n","    mask = mask.expand_as(img)\n","    img *= mask\n","    return img"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"id":"aMQcdozPm31Z","executionInfo":{"status":"ok","timestamp":1609826257068,"user_tz":-540,"elapsed":4016,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def load_dataset(train=2000, test=500, valid=0, cutout=False, cutout_length=16):\n","  #画像の変形処理\n","  transform = transforms.Compose([\n","    transforms.RandomCrop(32, padding=4),\n","    transforms.RandomHorizontalFlip(),\n","    transforms.ToTensor(),\n","    transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010))\n","  ])\n","\n","  if cutout:\n","    transform.transforms.append(Cutout(cutout_length))\n","\n","  transform_test = transforms.Compose([\n","    transforms.ToTensor(),\n","    transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010)),\n","  ])\n","\n","  dataset = torchvision.datasets.CIFAR10\n","  kwargs = {\"root\" : \"./data\", \"download\" : True}\n","\n","  #CIFAR-10のtrain, testsetのロード\n","  trainset = dataset(train=True, transform=transform, **kwargs)\n","  testset = dataset(train=False, transform=transform_test, **kwargs)\n","  \n","  trainset, validset, _ = torch.utils.data.random_split(trainset, [train, valid, 50000-train-valid])\n","  testset, _ = torch.utils.data.random_split(testset, [test, 10000-test])\n","  return argparse.Namespace(train=trainset, test=testset, valid=validset)"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"id":"vNDJPZLxAY0B","executionInfo":{"status":"ok","timestamp":1609826257069,"user_tz":-540,"elapsed":4006,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def load_dataloader(args):\n","  kwargs = {'num_workers': 2, 'pin_memory': True} if args.use_cuda else {}\n","  args.valid_size = args.valid_size if args.valid_size else 0\n","  sets = load_dataset(train=args.train_size, test=args.test_size, valid=args.valid_size, cutout=args.cutout, cutout_length=args.cutout_length)\n","  trainloader = torch.utils.data.DataLoader(sets.train, batch_size=args.batch_size, shuffle=True, **kwargs)\n","  validloader = torch.utils.data.DataLoader(sets.valid, batch_size=args.batch_size, shuffle=True, **kwargs) if args.valid_size else None\n","  testloader = torch.utils.data.DataLoader(sets.test, batch_size=args.batch_size, shuffle=False, **kwargs)\n","  return argparse.Namespace(train=trainloader, test=testloader, valid=validloader)"],"execution_count":23,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nmXw5AGs0TLl"},"source":["# model"]},{"cell_type":"markdown","metadata":{"id":"TtrTvApwmZ-g"},"source":["## sampler"]},{"cell_type":"code","metadata":{"id":"kpAWtHGuMRog","executionInfo":{"status":"ok","timestamp":1609826257070,"user_tz":-540,"elapsed":3994,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class ArchitectureSampler():\n","  def __call__(self, graph : nx.DiGraph, alpha : torch.Tensor) -> nx.DiGraph:\n","    return self.graph(graph, alpha)"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"id":"2-BCzSJsOYI9","executionInfo":{"status":"ok","timestamp":1609826257071,"user_tz":-540,"elapsed":3982,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class MaxSampler(ArchitectureSampler):\n","  def graph(self, graph, alpha):\n","    G = nx.DiGraph(graph)\n","    n = G.number_of_nodes()\n","\n","    for j in range(1, n):\n","      edges = [(i, j) for i in G.predecessors(j)]\n","      alphas = [alpha[i, j].item() for i, j in edges]\n","      edge_num = round(sum(alphas))\n","      disable = sorted(zip(edges, alphas), key=lambda x: x[-1])[:-edge_num]\n","      G.remove_edges_from([i for i, _ in disable])\n","\n","    return G"],"execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"id":"XePZZ2t2cFcd","executionInfo":{"status":"ok","timestamp":1609826257071,"user_tz":-540,"elapsed":3970,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class EdgewiseSampler(ArchitectureSampler):\n","  def graph(self, graph, alpha):\n","    G = nx.DiGraph(graph)\n","    n = G.number_of_nodes()\n","\n","    for j in range(1, n):\n","      edges = [(i, j) for i in G.predecessors(j)]\n","      alphas = [alpha[i, j].item() for i, j in edges]\n","      disable = [(e, a) for e, a in zip(edges, alphas) if round(a) < 1]\n","      G.remove_edges_from([i for i, _ in disable])\n","\n","    return G"],"execution_count":26,"outputs":[]},{"cell_type":"code","metadata":{"id":"FOHZG9qu0OPV","executionInfo":{"status":"ok","timestamp":1609826257072,"user_tz":-540,"elapsed":3958,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class ForwardSampler(ArchitectureSampler):\n","  def graph(self, graph, alpha):\n","    G = nx.DiGraph(graph)\n","    n = G.number_of_nodes()\n","\n","    for j in range(1, n):\n","      edges = [(i, j) for i in G.predecessors(j) if not i + 1 == j]\n","      G.remove_edges_from(edges)\n","\n","    return G"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"id":"Lc_EODV1OMQ9","executionInfo":{"status":"ok","timestamp":1609826257073,"user_tz":-540,"elapsed":3948,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class RandomSampler(ArchitectureSampler):\n","  def __init__(self, shortcut_num=0):\n","    self.num = shortcut_num\n","\n","  def graph(self, graph, alpha):\n","    G = nx.DiGraph(graph)\n","\n","    edges = [(e, f) for e, f in G.edges() if not e + 1 == f]\n","    np.random.shuffle(edges)\n","\n","    for e, f in edges[:len(edges)-self.num]:\n","      G.remove_edge(e, f)\n","\n","    return G"],"execution_count":28,"outputs":[]},{"cell_type":"code","metadata":{"id":"sgcYS7DpgVOQ","executionInfo":{"status":"ok","timestamp":1609826257074,"user_tz":-540,"elapsed":3940,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class StrideCutSampler(ArchitectureSampler):\n","  def __init__(self, stride_max=8):\n","    assert stride_max >= 1\n","    self.stride = stride_max\n","\n","  def graph(self, graph, alpha):\n","    G = nx.DiGraph(graph)\n","    n = G.number_of_nodes()\n","\n","    for j in range(1, n):\n","      edges = [(i, j) for i in G.predecessors(j) if G.edges[i, j]['stride'] > self.stride]\n","      G.remove_edges_from(edges)\n","\n","    return G"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"id":"iG9p-K46g24-","executionInfo":{"status":"ok","timestamp":1609826257075,"user_tz":-540,"elapsed":3908,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["# args = {'gene':'VGG19', 'stride_max':2}\n","# model = load_model(dir=\"\", **args)\n","# g = model.graph\n","# sampler = RandomSampler(10)\n","# h = model.sampled_graph(sampler)\n","# render_graph(h, 'graph')\n","# # nx.graph_edit_distance(g, h)"],"execution_count":30,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"13lGiBWpco6I"},"source":["## component"]},{"cell_type":"code","metadata":{"id":"Hdd_Mu8gisSi","executionInfo":{"status":"ok","timestamp":1609826257075,"user_tz":-540,"elapsed":3898,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["cfg = {\n","    'VGG11': [64, 'M', 128, 'M', 256, 256, 'M', 512, 512, 'M', 512, 512, 'M'],\n","    'VGG13': [64, 64, 'M', 128, 128, 'M', 256, 256, 'M', 512, 512, 'M', 512, 512, 'M'],\n","    'VGG16': [64, 64, 'M', 128, 128, 'M', 256, 256, 256, 'M', 512, 512, 512, 'M', 512, 512, 512, 'M'],\n","    'VGG19': [64, 64, 'M', 128, 128, 'M', 256, 256, 256, 256, 'M', 512, 512, 512, 512, 'M', 512, 512, 512, 512, 'M'],\n","}\n","\n","class VGG(nn.Module):\n","    def __init__(self, vgg_name):\n","        super(VGG, self).__init__()\n","        self.features = self._make_layers(cfg[vgg_name])\n","        self.classifier = nn.Linear(512, 10)\n","\n","    def forward(self, x):\n","        out = self.features(x)\n","        out = out.view(out.size(0), -1)\n","        out = self.classifier(out)\n","        return out\n","\n","    def _make_layers(self, cfg):\n","        layers = []\n","        in_channels = 3\n","        for x in cfg:\n","            if x == 'M':\n","                layers += [nn.MaxPool2d(kernel_size=2, stride=2)]\n","            else:\n","                layers += [nn.Conv2d(in_channels, x, kernel_size=3, padding=1),\n","                           nn.BatchNorm2d(x),\n","                           nn.ReLU(inplace=True)]\n","                in_channels = x\n","        layers += [nn.AvgPool2d(kernel_size=1, stride=1)]\n","        return nn.Sequential(*layers)"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"id":"MrWmBPh2ylSx","executionInfo":{"status":"ok","timestamp":1609826257076,"user_tz":-540,"elapsed":3889,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class FactorizedReduce(nn.Module):\n","  def __init__(self, channel_in, channel_out, stride, affine=True):\n","    super(FactorizedReduce, self).__init__()\n","    assert channel_out % stride == 0\n","    \n","    self.convs = nn.ModuleList([\n","      nn.Conv2d(channel_in, channel_out // stride, 1, stride=stride, padding=0, bias=False)\n","      for _ in range(stride)\n","    ])\n","    self.bn = nn.BatchNorm2d(channel_out, affine=affine)\n","\n","  def forward(self, x):\n","    # strideの偶奇による情報ロスを防ぐ\n","    out = torch.cat([conv(x[:,:,i:,i:]) for i, conv in enumerate(self.convs)], dim=1)\n","    out = self.bn(out)\n","    return out"],"execution_count":32,"outputs":[]},{"cell_type":"code","metadata":{"id":"y_uyawqz6UEv","executionInfo":{"status":"ok","timestamp":1609826257076,"user_tz":-540,"elapsed":3880,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class Shortcut(nn.Module):\n","  def __init__(self, in_channel, out_channel, stride):\n","    super(Shortcut, self).__init__()\n","    self.f = self._shortcut(in_channel, out_channel, stride)\n","\n","  def forward(self, x):\n","    return self.f(x)\n","\n","  def _shortcut(self, channel_in, channel_out, stride):\n","    if stride > 1:\n","      return FactorizedReduce(channel_in, channel_out, stride)\n","    elif channel_in != channel_out:\n","      return nn.Conv2d(channel_in, channel_out, \n","                       kernel_size=1, stride=stride, padding=0)\n","    else:\n","      return lambda x: x"],"execution_count":33,"outputs":[]},{"cell_type":"code","metadata":{"id":"t2NfkpglsKCr","executionInfo":{"status":"ok","timestamp":1609826257077,"user_tz":-540,"elapsed":3873,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def drop_path(x, drop_prob):\n","  if drop_prob > 0.:\n","    keep_prob = 1. - drop_prob\n","    b = torch.ones(x.size(0), 1, 1, 1, device=x.device) * keep_prob\n","    mask = Variable(torch.bernoulli(b))\n","    x = x / keep_prob * mask\n","  return x"],"execution_count":34,"outputs":[]},{"cell_type":"code","metadata":{"id":"QUEW2lHqhA9B","executionInfo":{"status":"ok","timestamp":1609826257078,"user_tz":-540,"elapsed":3866,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["# x = torch.randn(4, 3, 8, 8).to(torch.device('cuda'))\n","# keep_prob = 0.5\n","# torch.bernoulli(torch.ones(x.size(0), 1, 1, 1, device=x.device) * keep_prob)"],"execution_count":35,"outputs":[]},{"cell_type":"code","metadata":{"id":"CHHLMEl5lNZt","executionInfo":{"status":"ok","timestamp":1609826257078,"user_tz":-540,"elapsed":3858,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class Block(nn.Module):\n","  def __init__(self, graph, index):\n","    super(Block, self).__init__()\n","    node = graph.nodes[index]\n","    edges = [(i, index, graph.edges[i, index]) for i in graph.predecessors(index)]\n","\n","    self.index = index\n","    self.indices = [i for i, _, _ in edges]\n","    self.edges = nn.ModuleList([self._build_module(s) for i, j, s in edges])\n","\n","    process = [nn.ReLU(inplace=True)]\n","    if node['pool']: process += [nn.MaxPool2d(kernel_size=2, stride=2)]\n","    self.post_process = nn.Sequential(*process)\n","\n","  def _build_module(self, setting):\n","    module = setting['module']\n","    in_channel, out_channel = setting['channel']\n","    stride = setting['stride']\n","    if module == 'forward':\n","      return nn.Sequential(\n","          nn.Conv2d(in_channel, out_channel, kernel_size=3, padding=1),\n","          nn.BatchNorm2d(out_channel)\n","          )\n","    elif module == 'shortcut':\n","      return Shortcut(in_channel, out_channel, stride)\n","    else:\n","      raise ValueError(\"module name\")\n","\n","  def forward(self, inputs, alpha, drop_prob=0.):\n","    if self.training and drop_prob > 0.:\n","      # f = labmda x: drop_path(F(x), drop_prob)\n","      output = sum(alpha[i] * drop_path(F(inputs[i]), drop_prob) for i, F in zip(self.indices, self.edges))\n","    else:\n","      output = sum(alpha[i] * F(inputs[i]) for i, F in zip(self.indices, self.edges))\n","    return self.post_process(output)"],"execution_count":36,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jvePCgPgcxo2"},"source":["## network"]},{"cell_type":"code","metadata":{"id":"hQ9-qdW5ko9R","executionInfo":{"status":"ok","timestamp":1609826257357,"user_tz":-540,"elapsed":4129,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["# 前提条件 : make graph, modules(Block, pool, ...)\n","# 拘束条件 : alpha sofmax\n","class Network(nn.Module):\n","  def __init__(self, gene, graph=None, preprocess : ArchitectureSampler=None):\n","    super(Network, self).__init__()\n","    self.gene = gene\n","    self.evaluate = bool(graph)\n","    self.graph = graph if graph else self._make_graph(gene)\n","    self.graph = preprocess(self.graph, None) if preprocess else self.graph\n","\n","    self.blocks = nn.ModuleList(self._make_blocks(self.graph))\n","    self.pool = nn.AvgPool2d(kernel_size=1, stride=1)\n","    self.classifier = nn.Linear(512, 10)\n","    self.drop_path_prob = 0.\n","\n","  def _make_graph(self, gene, color_channel=3):\n","    \n","    def _decode_gene(gene):\n","      ch, st = [], []\n","      for g in gene:\n","        if g == 'M':\n","          st[-1] *= 2\n","        else :\n","          ch += [g]\n","          st += [1]\n","      return ch, st\n","\n","    def __pi(array):\n","      r = []\n","      s = 1\n","      for q in array:\n","        s *= q\n","        r += [s]\n","      return r\n","\n","    channel, stride = _decode_gene(gene)\n","    channel = [color_channel] + channel\n","    stride = [1] + stride\n","    s_stride = __pi(stride)\n","\n","    n = len(channel)\n","    nodes = [(i, {'channel':channel[i], 'stride':s_stride[i], 'pool':stride[i]>1}) for i in range(n)]\n","    nodes[0][-1].update({'name':'input'})\n","    edges = [(i, j, {}) for i in range(n) for j in range(n) if i < j and not (i == 0 and j > 1)]\n","    for (i, j, d) in edges:\n","      d.update({\n","        'module' : 'forward' if i + 1 == j else 'shortcut', \n","        'channel' : (nodes[i][-1]['channel'], nodes[j][-1]['channel']),\n","        'stride' : int(nodes[j-1][-1]['stride'] / nodes[i][-1]['stride'])\n","      })\n","\n","    G = nx.DiGraph()\n","    G.add_nodes_from(nodes)\n","    G.add_edges_from(edges)\n","    return G\n","\n","  def _make_blocks(self, graph):\n","    return [Block(graph, i) for i in graph.nodes() if i > 0]\n","\n","\n","  def init_alpha(self, device):\n","    def _init_alpha(node_num, device, delta=1e-3):\n","      noise = delta * torch.randn(node_num, node_num, device=device)\n","      alpha = noise.clone().detach().requires_grad_(True)\n","      return [alpha]\n","\n","    def _mask(node_num, device, name):\n","      mask = torch.zeros(node_num, node_num, device=device)\n","\n","      for i, j in self.graph.edges():\n","        op = self.graph.edges[i, j]['module']\n","        if not op == name: continue\n","\n","        mask[i, j] = 1\n","\n","      return mask.t() > 0\n","\n","    n = self.graph.number_of_nodes()\n","    self.alphas = _init_alpha(n, device)\n","    self.mask_s = _mask(n, device, 'shortcut')\n","    self.mask_f = _mask(n, device, 'forward')\n","\n","    self.alphas += [torch.ones(n, device=device, requires_grad=True)]\n","    # self.alphas += [torch.zeros(n, device=device, requires_grad=True)]\n","\n","    return self\n","\n","  @torch.no_grad()\n","  def export_alpha(self):\n","    alpha = self.alphas[0].tolist() + [self.alphas[1].tolist()]\n","    return alpha\n","  \n","  @torch.no_grad()\n","  def import_alpha(self, alpha):\n","    a, b = alpha[:-1], alpha[-1:][0]\n","    a_s, b_s = self.alphas[0].shape, self.alphas[1].shape\n","    self.alphas[0] = self.alphas[0].new_tensor(a).view_as(self.alphas[0])\n","    self.alphas[1] = self.alphas[1].new_tensor(b).view_as(self.alphas[1])\n","\n","    try:\n","      assert a_s == self.alphas[0].shape and b_s == self.alphas[1].shape\n","    except AssertionError:\n","      print(self.alphas[0], self.alphas[0].shape)\n","      print(self.alphas[1], self.alphas[1].shape)\n","      1/0\n","\n","  def normalized_alpha(self):\n","    alpha = torch.zeros_like(self.alphas[0])\n","    if self.evaluate:\n","      for i, j in self.graph.edges():\n","        alpha[j, i] = 1.0\n","    else:\n","      i = 0\n","      for raw, mask, b in zip(self.alphas[0], self.mask_s, self.normalized_beta()):\n","        buf = torch.zeros_like(alpha[i])\n","        buf[mask] = b * F.softmax(raw[mask], dim=0)\n","        alpha[i] = buf\n","        i += 1\n","        \n","      alpha[self.mask_f] = 1.0\n","    return alpha\n","\n","  def normalized_beta(self):\n","    # f = lambda x : math.exp(x - 1) if x < 1 else math.log(x) + 1\n","    # return self.beta().apply_(f)\n","    x = self.beta()\n","    m = x>1\n","    beta = torch.zeros_like(x)\n","    beta[m] = torch.log(x[m]) + 1\n","    beta[~m] = torch.exp(x[~m] - 1)\n","    return beta\n","\n","  def beta(self):\n","    return self.alphas[1]\n","\n","  @torch.no_grad()\n","  def matrix_alpha(self, normalize=True):\n","    return (self.normalized_alpha() if normalize else self.alphas[0]).t()\n","\n","\n","  def sampled_graph(self, sampler : ArchitectureSampler):\n","    return sampler(self.graph, self.matrix_alpha())\n","\n","\n","  def forward(self, x):\n","    assert self.evaluate or self.drop_path_prob <= 0.\n","    state = [x]\n","    alpha = self.normalized_alpha()\n","    # alpha = self.alphas[0]\n","\n","    for block in self.blocks:\n","      x = block(state, alpha[block.index], self.drop_path_prob)\n","      state += [x]\n","\n","    out = self.pool(x)\n","    out = out.view(out.size(0), -1)\n","    out = self.classifier(out)\n","    return out"],"execution_count":37,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_zs2xrX7tShM"},"source":["## GA"]},{"cell_type":"markdown","metadata":{"id":"PosmXsEWzkci"},"source":["### util"]},{"cell_type":"code","metadata":{"id":"ZrkeQIc4qJ6L","executionInfo":{"status":"ok","timestamp":1609826257359,"user_tz":-540,"elapsed":4124,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class FitnessMin(base.Fitness):\n","  weights = -1.0,"],"execution_count":38,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5dVwXjGGylfe"},"source":["- [ ] ind validation func\r\n","- [ ] ga resume"]},{"cell_type":"code","metadata":{"id":"Vj5BgDz2VXXb","executionInfo":{"status":"ok","timestamp":1609826257361,"user_tz":-540,"elapsed":4118,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class Individual():\n","  def __init__(self, generator):\n","    self.fitness = FitnessMin()\n","    self.result = {}\n","    self._alpha : list = None\n","    Individual.generator = generator\n","\n","  @property\n","  def alpha(self):\n","    if self._alpha is None:\n","      self._alpha = Individual.generator()\n","    return self._alpha\n","\n","  @alpha.setter\n","  def alpha(self, alpha):\n","    self._alpha = alpha\n","    return self"],"execution_count":39,"outputs":[]},{"cell_type":"code","metadata":{"id":"zcrt1dFFy0D6","executionInfo":{"status":"ok","timestamp":1609826257363,"user_tz":-540,"elapsed":4112,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class GA():\r\n","  def init(self):\r\n","    pass\r\n","\r\n","  def mate(self):\r\n","    pass\r\n","\r\n","  def mutate(self):\r\n","    pass\r\n","\r\n","  def select(self):\r\n","    pass\r\n","\r\n","  def evaluate(self):\r\n","    pass"],"execution_count":40,"outputs":[]},{"cell_type":"code","metadata":{"id":"LC5UEa0EzNQP","executionInfo":{"status":"ok","timestamp":1609826257364,"user_tz":-540,"elapsed":4105,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class Executor():\r\n","  def run(self):\r\n","    pass"],"execution_count":41,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Udf4sd_MzTtG"},"source":["### SGA"]},{"cell_type":"code","metadata":{"id":"gJ_6VGv3y_sQ","executionInfo":{"status":"ok","timestamp":1609826257613,"user_tz":-540,"elapsed":4347,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class MyGA(GA):\r\n","  \r\n","  def __init__(self, args):\r\n","    self.exp, self.args = Experiment(), args\r\n","    self.toolbox = base.Toolbox()\r\n","    self.init_func()\r\n","    self.init_stats()\r\n","\r\n","\r\n","  def init_func(self):\r\n","    toolbox = self.toolbox\r\n","    def aaa():\r\n","      return Individual(generator=self._init)\r\n","    toolbox.register(\"population\", tools.initRepeat, list, aaa)\r\n","\r\n","    # ops\r\n","    toolbox.register(\"init\", self.init)\r\n","    toolbox.register(\"mate\", self._mate)\r\n","    toolbox.register(\"mutate\", self._mutate)\r\n","    toolbox.register(\"select\", tools.selTournament, tournsize=self.args.tournament)\r\n","    toolbox.register(\"evolve\", self._evolve)\r\n","    toolbox.register(\"evaluate\", self._evaluate)\r\n","\r\n","    self.hall = tools.HallOfFame(1)\r\n","\r\n","\r\n","  def init_stats(self):\r\n","    stats = tools.Statistics(key=lambda ind: ind.fitness.values)\r\n","    stats.register(\"avg\", np.mean)\r\n","    stats.register(\"std\", np.std)\r\n","    stats.register(\"min\", np.min)\r\n","    stats.register(\"max\", np.max)\r\n","    self.stats = stats\r\n","\r\n","    self.logbook = tools.Logbook()\r\n","    self.logbook.header = \"gen\", \"avg\", \"std\", \"min\", \"max\"\r\n","\r\n","\r\n","  \"\"\"\r\n","  individual operations\r\n","  \"\"\"\r\n","\r\n","  # def _init(self):\r\n","  #   return super()._init()\r\n","\r\n","\r\n","  def _mate(self, ind1, ind2):\r\n","    for a1, a2 in zip(ind1.alpha, ind2.alpha):\r\n","      # tools.cxBlend(a1, a2, alpha = 0.5)\r\n","      tools.cxUniform(a1, a2, indpb = 0.5)\r\n","    return ind1, ind2\r\n","\r\n","\r\n","  def _mutate(self, ind):\r\n","    alpha = ind.alpha\r\n","    for i, a in enumerate(alpha):\r\n","      alpha[i], = tools.mutGaussian(a, mu=0, sigma=0.2, indpb=0.2)\r\n","    ind.alpha = alpha\r\n","    return ind,\r\n","  \r\n","\r\n","  # def _evaluate(self, ind):\r\n","  #   return super()._evaluate(ind)\r\n","\r\n","\r\n","  # def _evolve(self, ind):\r\n","  #   super()._evolve(ind)\r\n","\r\n","\r\n","  \"\"\"\r\n","  population operations\r\n","  \"\"\"\r\n","\r\n","  def init(self):\r\n","    return self.toolbox.population(self.args.population)\r\n","\r\n","\r\n","  def mate(self, offspring):\r\n","    for child1, child2 in zip(offspring[::2], offspring[1::2]):\r\n","      if random.random() < self.args.crossover:\r\n","        self.toolbox.mate(child1, child2)\r\n","\r\n","\r\n","  def mutate(self, offspring):\r\n","    for mutant in offspring:\r\n","      if random.random() < self.args.mutation:\r\n","        self.toolbox.mutate(mutant)\r\n","\r\n","\r\n","  def select_elite(self, pop):\r\n","    elite = tools.selBest(pop, 1)\r\n","    elite = list(map(self.toolbox.clone, elite))\r\n","    return elite\r\n","\r\n","\r\n","  def select(self, pop):\r\n","    offspring = self.toolbox.select(pop, len(pop))\r\n","    offspring = list(map(self.toolbox.clone, offspring))\r\n","    return offspring\r\n","\r\n","\r\n","  def evolve(self, pop):\r\n","    self.exp('step_evolution_start')(args)\r\n","    for ind in pop:\r\n","      self._evolve(ind)\r\n","    self.exp('step_evolution_end')(args)\r\n","\r\n","\r\n","  def evaluate(self, pop):\r\n","    fitnesses = map(self.toolbox.evaluate, pop)\r\n","    for ind, fit in zip(pop, fitnesses):\r\n","      del ind.fitness.values\r\n","      ind.fitness.values = fit\r\n","    self.exp('step_evaluate_end')(args)\r\n","\r\n","\r\n","  def record(self, pop):\r\n","    record = self.stats.compile(pop)\r\n","    print(record)\r\n","    self.logbook.record(gen=self.args.nth_gen, **record)"],"execution_count":42,"outputs":[]},{"cell_type":"code","metadata":{"id":"JvEL87Ezzvam","executionInfo":{"status":"ok","timestamp":1609826257614,"user_tz":-540,"elapsed":4340,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["# アルゴリズムを表現\r\n","class ExecuteGA(Executor):\r\n","  \r\n","  def __init__(self, ga, args):\r\n","    self.args = args\r\n","    self.ga = ga\r\n","\r\n","  def run(self):\r\n","    ga = self.ga\r\n","    exp, args = ga.exp, ga.args = Experiment(), self.args\r\n","\r\n","    args.pop = pop = ga.init()\r\n","\r\n","    exp('evolution_start')(args)\r\n","    for g in range(args.generation):\r\n","      logging.info('generation %d', g)\r\n","      args.nth_gen = g\r\n","      exp('generation_start')(args)\r\n","\r\n","      ga.evolve(pop)\r\n","      ga.evaluate(pop)\r\n","      ga.record(pop)\r\n","      elite = ga.select_elite(pop)\r\n","      offspring = ga.select(pop)[:-len(elite)]\r\n","      ga.mate(offspring)\r\n","      ga.mutate(offspring)\r\n","      offspring += elite\r\n","      pop[:] = offspring\r\n","\r\n","      # self.hall.update(pop)\r\n","      exp('generation_end')(args)\r\n","    exp('evolution_end')(args)\r\n","\r\n","    return pop"],"execution_count":43,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5aMvGArBzbMb"},"source":["### TDGA"]},{"cell_type":"code","metadata":{"id":"Xdg-g7u9zdwB","executionInfo":{"status":"ok","timestamp":1609826257615,"user_tz":-540,"elapsed":4333,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class TDGA(GA):\r\n","  \r\n","  def __init__(self, args):\r\n","    self.exp, self.args = Experiment(), args\r\n","    self.toolbox = base.Toolbox()\r\n","    self.init_func()\r\n","    self.init_stats()\r\n","    self.temperature = args.t_init\r\n","\r\n","\r\n","  def init_func(self):\r\n","    toolbox = self.toolbox\r\n","    def aaa():\r\n","      return Individual(generator=self._init)\r\n","    toolbox.register(\"population\", tools.initRepeat, list, aaa)\r\n","\r\n","    # ops\r\n","    toolbox.register(\"init\", self.init)\r\n","    toolbox.register(\"mate\", self._mate)\r\n","    toolbox.register(\"mutate\", self._mutate)\r\n","\r\n","    self.hall = tools.HallOfFame(1)\r\n","\r\n","\r\n","  def init_stats(self):\r\n","    stats = tools.Statistics(key=lambda ind: ind.fitness.values)\r\n","    stats.register(\"avg\", np.mean)\r\n","    stats.register(\"std\", np.std)\r\n","    stats.register(\"min\", np.min)\r\n","    stats.register(\"max\", np.max)\r\n","    self.stats = stats\r\n","\r\n","    self.logbook = tools.Logbook()\r\n","    self.logbook.header = \"gen\", \"avg\", \"std\", \"min\", \"max\"\r\n","\r\n","\r\n","  \"\"\"\r\n","  individual operations\r\n","  \"\"\"\r\n","\r\n","  # def _init(self):\r\n","  #   return super()._init()\r\n","\r\n","\r\n","  def _mate(self, ind1, ind2):\r\n","    for a1, a2 in zip(ind1.alpha, ind2.alpha):\r\n","      # tools.cxBlend(a1, a2, alpha = 0.5)\r\n","      tools.cxUniform(a1, a2, indpb = 0.5)\r\n","    return ind1, ind2\r\n","\r\n","\r\n","  def _mutate(self, ind):\r\n","    alpha = ind.alpha\r\n","    for i, a in enumerate(alpha):\r\n","      alpha[i], = tools.mutGaussian(a, mu=0, sigma=0.2, indpb=0.2)\r\n","    ind.alpha = alpha\r\n","    return ind,\r\n","  \r\n","\r\n","  # def _evaluate(self, ind):\r\n","  #   return super()._evaluate(ind)\r\n","\r\n","\r\n","  # def _evolve(self, ind):\r\n","  #   super()._evolve(ind)\r\n","\r\n","\r\n","  \"\"\"\r\n","  population operations\r\n","  \"\"\"\r\n","\r\n","  def init(self):\r\n","    return self.toolbox.population(self.args.population)\r\n","\r\n","\r\n","  def mate(self, offspring):\r\n","    for child1, child2 in zip(offspring[::2], offspring[1::2]):\r\n","      if random.random() < self.args.crossover:\r\n","        self.toolbox.mate(child1, child2)\r\n","\r\n","\r\n","  def mutate(self, offspring):\r\n","    for mutant in offspring:\r\n","      if random.random() < self.args.mutation:\r\n","        self.toolbox.mutate(mutant)\r\n","\r\n","\r\n","  def select_elite(self, pop):\r\n","    elite = tools.selBest(pop, 1)\r\n","    elite = list(map(self.toolbox.clone, elite))\r\n","    return elite\r\n","\r\n","\r\n","  def select(self, pop):\r\n","    pop = self.compress(pop)\r\n","\r\n","    def closure(pop):\r\n","      E_sum, n = sum([ind.fitness.values[0] for ind in pop]), len(pop)\r\n","      alpha_sum = sum([torch.tensor(ind.alpha) for ind in pop])\r\n","      def compute_F(ind):\r\n","        # TODO : ??? wvalues, values\r\n","        # ignore H_all\r\n","        alpha = torch.tensor(ind.alpha)\r\n","        alpha_bar = (alpha_sum + alpha) / (n + 1)\r\n","        H_i = torch.pow(torch.mean(torch.pow(alpha - alpha_bar, 2)), 0.5)\r\n","        E_bar = (E_sum + ind.fitness.values[0]) / (n + 1)\r\n","        F = E_bar - H_i * self.temperature\r\n","        return F\r\n","      return compute_F\r\n","\r\n","    selected = []\r\n","    for i in range(self.args.population):\r\n","      f = closure(selected)\r\n","      Fs = [f(ind) for ind in pop]\r\n","      idx = Fs.index(min(Fs))\r\n","      selected += [pop[idx]]\r\n","\r\n","    self.update()\r\n","\r\n","    return list(map(self.toolbox.clone, selected))\r\n","\r\n","  def compress(self, pop):\r\n","    if self.args.is_compress:\r\n","      # TODO\r\n","      pass\r\n","\r\n","    return pop\r\n","\r\n","  def update(self):\r\n","    # TODO\r\n","    args = self.args\r\n","    t = args.nth_gen / args.generation\r\n","    self.temperature = pow(args.t_init, 1-t) * pow(args.t_fin, t)\r\n","\r\n","\r\n","  def evolve(self, pop):\r\n","    self.exp('step_evolution_start')(self.args)\r\n","    for ind in pop:\r\n","      self._evolve(ind)\r\n","    self.exp('step_evolution_end')(self.args)\r\n","\r\n","\r\n","  def evaluate(self, pop):\r\n","    fitnesses = map(self._evaluate, pop)\r\n","    for ind, fit in zip(pop, fitnesses):\r\n","      del ind.fitness.values\r\n","      ind.fitness.values = fit\r\n","    self.exp('step_evaluate_end')(self.args)\r\n","\r\n","\r\n","  def record(self, pop):\r\n","    record = self.stats.compile(pop)\r\n","    print(record)\r\n","    self.logbook.record(gen=self.args.nth_gen, **record)"],"execution_count":44,"outputs":[]},{"cell_type":"code","metadata":{"id":"PXRSLs0vz0CM","executionInfo":{"status":"ok","timestamp":1609826257616,"user_tz":-540,"elapsed":4322,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["# アルゴリズムを表現\r\n","class ExecuteTDGA(Executor):\r\n","  \r\n","  def __init__(self, ga, args):\r\n","    self.args = args\r\n","    self.ga = ga\r\n","\r\n","  def run(self):\r\n","    ga = self.ga\r\n","    exp, args = ga.exp, ga.args = Experiment(), self.args\r\n","\r\n","    args.pop = pop = ga.init()\r\n","    ga.evaluate(pop)\r\n","\r\n","    exp('evolution_start')(args)\r\n","    for g in range(args.generation):\r\n","      logging.info('generation %d', g)\r\n","      args.nth_gen = g\r\n","      exp('generation_start')(args)\r\n","\r\n","      ga.evolve(pop)\r\n","      ga.evaluate(pop)\r\n","\r\n","      elite = ga.select_elite(pop)\r\n","      offspring = list(map(ga.toolbox.clone, pop)) # TODO\r\n","\r\n","      ga.mate(offspring)\r\n","      gen = pop + offspring\r\n","      ga.mutate(gen)\r\n","      gen += elite\r\n","\r\n","      # ga.evolve(gen)\r\n","      ga.evaluate(gen)\r\n","      pop[:] = ga.select(gen) # [:] inplace\r\n","      ga.record(pop)\r\n","\r\n","      exp('generation_end')(args)\r\n","    exp('evolution_end')(args)\r\n","\r\n","    return pop"],"execution_count":45,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gii9_gAMkEyV"},"source":["## architecture"]},{"cell_type":"code","metadata":{"id":"F4Q7p8JyXk9f","executionInfo":{"status":"ok","timestamp":1609826257617,"user_tz":-540,"elapsed":4312,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["class Architect():\n","  def __init__(self, valid_loader, model, criterion, lr, device):\n","    self.valid_loader = valid_loader\n","    self.model = model\n","    self.criterion = criterion\n","    self.optimizer = optim.Adam(model.alphas, lr=lr, betas=(0.5, 0.999), weight_decay=1e-3)\n","    self.device = device\n","    self.train = True\n","\n","  def step(self):\n","    if not self.valid_loader: return\n","    if not self.train: return\n","    \n","    data_v, target_v = next(iter(self.valid_loader))\n","    data_v, target_v = data_v.to(self.device), target_v.to(self.device)\n","\n","    self.optimizer.zero_grad()\n","    output = self.model(data_v)\n","    loss = self.criterion(output, target_v)\n","    loss.backward()\n","    self.optimizer.step()"],"execution_count":46,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"26E8hA820WWG"},"source":["# learning"]},{"cell_type":"markdown","metadata":{"id":"pmMw2Fhi2gdl"},"source":["## events"]},{"cell_type":"code","metadata":{"id":"xKYJMQebTseQ","executionInfo":{"status":"ok","timestamp":1609826257907,"user_tz":-540,"elapsed":4594,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('setup')\n","def setup(args):\n","  args.save = path_with_time(args.save)\n","  create_exp_dir(args.save, scripts_to_save=glob.glob('*.py'))\n","  init_logging(args.save)\n","  logging.info('kwargs %s' % args)\n","  \n","  args.start_epoch = 0\n","\n","  # log init\n","  fig = [([\"train_acc\", \"test_acc\"], \"epochs\", \"accuracy[%]\"),\n","         ([\"train_loss\", \"test_loss\"], \"epochs\", \"loss\")]\n","  store = Store(dir=args.save, name=\"store\", fig=fig)\n","  args.store = store\n","\n","  set_seed(args.seed)"],"execution_count":47,"outputs":[]},{"cell_type":"code","metadata":{"id":"M-3CxbXTE7MN","executionInfo":{"status":"ok","timestamp":1609826257908,"user_tz":-540,"elapsed":4586,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('setup')\n","def set_device(args):\n","  # cuda init\n","  args.use_cuda = torch.cuda.is_available()\n","  args.device = torch.device(\"cuda\" if args.use_cuda else \"cpu\")"],"execution_count":48,"outputs":[]},{"cell_type":"code","metadata":{"id":"3jWNUpuc9X2C","executionInfo":{"status":"ok","timestamp":1609826257908,"user_tz":-540,"elapsed":4578,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('start')\n","def set_tdqm(args):\n","  args.bar = tqdm(total = args.epochs - args.start_epoch)"],"execution_count":49,"outputs":[]},{"cell_type":"code","metadata":{"id":"K513ZvUA9piu","executionInfo":{"status":"ok","timestamp":1609826257909,"user_tz":-540,"elapsed":4571,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('epoch_end')\n","def update_tdqm(args):\n","  args.bar.update()"],"execution_count":50,"outputs":[]},{"cell_type":"code","metadata":{"id":"tkcQTURsjjSk","executionInfo":{"status":"ok","timestamp":1609826257910,"user_tz":-540,"elapsed":4564,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('epoch_start')\n","def logging_alpha(args):\n","  model = args.model\n","  if not model.evaluate:\n","    logging.info('raw %s', model.matrix_alpha(normalize=False))\n","    logging.info('alpha %s', model.matrix_alpha())\n","    logging.info('beta %s', model.beta())"],"execution_count":51,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ovsp9cshkkCO","executionInfo":{"status":"ok","timestamp":1609826257910,"user_tz":-540,"elapsed":4557,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('train_end')\n","def train_end(args, data):\n","  train_acc, train_obj = data\n","  logging.info('train_acc %f', train_acc)\n","  args.store.add(\"train_loss\", train_obj)\n","  args.store.add(\"train_acc\", train_acc)"],"execution_count":52,"outputs":[]},{"cell_type":"code","metadata":{"id":"bg_3JphZkrtc","executionInfo":{"status":"ok","timestamp":1609826257911,"user_tz":-540,"elapsed":4549,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('test_end')\n","def test_end(args, data):\n","  valid_acc, valid_obj = data\n","  logging.info('valid_acc %f', valid_acc)\n","  args.store.add(\"test_loss\", valid_obj)\n","  args.store.add(\"test_acc\", valid_acc)"],"execution_count":53,"outputs":[]},{"cell_type":"code","metadata":{"id":"sjuq4RUvWGnU","executionInfo":{"status":"ok","timestamp":1609826257911,"user_tz":-540,"elapsed":4542,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('checkpoint', 'end', order=1)\n","def save_checkpoint(args):\n","  args.store.save()\n","  save_dir(args.save)"],"execution_count":54,"outputs":[]},{"cell_type":"code","metadata":{"id":"eqmnRnrjhDkg","executionInfo":{"status":"ok","timestamp":1609826257912,"user_tz":-540,"elapsed":4535,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('checkpoint', 'end')\n","def save_model(args):\n","  state = {\n","    'model': args.model.state_dict(),\n","    'graph': args.model.graph,\n","    'alpha': args.model.alphas,\n","    'store': args.store,\n","    'epoch': args.epoch,\n","  }\n","  torch.save(state, os.path.join(args.save, 'checkpoint.pth'))"],"execution_count":55,"outputs":[]},{"cell_type":"code","metadata":{"id":"uCRoipRbhvHv","executionInfo":{"status":"ok","timestamp":1609826257913,"user_tz":-540,"elapsed":4528,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('epoch_end')\n","def save_graph(args):\n","  path = os.path.join(args.save, 'graph')\n","  if not os.path.exists(path):\n","    os.mkdir(path)\n","  sampler = MaxSampler()\n","  graph = args.model.sampled_graph(sampler)\n","  torch.save(graph, os.path.join(path, 'graph_%d.pth' % args.epoch))\n","  render_graph(graph, os.path.join(path, 'graph_%d' % args.epoch))"],"execution_count":56,"outputs":[]},{"cell_type":"code","metadata":{"id":"Qd5QdhujhxdH","executionInfo":{"status":"ok","timestamp":1609826257913,"user_tz":-540,"elapsed":4519,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('epoch_end')\n","def save_alpha(args):\n","  path = os.path.join(args.save, 'alpha')\n","  if not os.path.exists(path):\n","    os.mkdir(path)\n","  save_heatmap(args.model.matrix_alpha(), os.path.join(path, 'alpha_%d.png' % args.epoch))"],"execution_count":57,"outputs":[]},{"cell_type":"code","metadata":{"id":"SKFNqk-bhzUH","executionInfo":{"status":"ok","timestamp":1609826257914,"user_tz":-540,"elapsed":4510,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('epoch_end')\n","def save_weight(args):\n","  if not args.save_weight: return\n","\n","  path = os.path.join(args.save, 'model')\n","  if not os.path.exists(path):\n","    os.mkdir(path)\n","  torch.save(args.model.state_dict(), os.path.join(path, 'model_%d.pth' % args.epoch))"],"execution_count":58,"outputs":[]},{"cell_type":"code","metadata":{"id":"rZzixwcgafJ0","executionInfo":{"status":"ok","timestamp":1609826257914,"user_tz":-540,"elapsed":4502,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('end')\n","def aggregate_data(args):\n","  store = args.store\n","  m = store.apply('test_acc', max)\n","  store.add('test_acc' + '_best', m)\n","  logging.info('best acc %s' % m)"],"execution_count":59,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"95fS38oFP8l2"},"source":["## ga event"]},{"cell_type":"code","metadata":{"id":"my4McwtbD0OO","executionInfo":{"status":"ok","timestamp":1609826257915,"user_tz":-540,"elapsed":4494,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('generation_end', 'evolution_end', order=1)\n","def save_dir2drive(args):\n","  save_dir(args.save)"],"execution_count":60,"outputs":[]},{"cell_type":"code","metadata":{"id":"UyJrBMkkEMR1","executionInfo":{"status":"ok","timestamp":1609826257916,"user_tz":-540,"elapsed":4488,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('evolve_end')\n","def save_individual_train(args, result):\n","  args.individual.result['train'] = result\n","\n","@Experiment.event('evaluate_end')\n","def save_individual_test(args, result):\n","  args.individual.result['test'] = result"],"execution_count":61,"outputs":[]},{"cell_type":"code","metadata":{"id":"1zhpK4QzG34j","executionInfo":{"status":"ok","timestamp":1609826257916,"user_tz":-540,"elapsed":4479,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@Experiment.event('generation_end')\n","def save_individual(args):\n","  path = os.path.join(args.save, 'gen', '%d' % args.generation)\n","  os.makedirs(path, exist_ok=True)\n","\n","  for i, ind in enumerate(args.pop):\n","    args.model.import_alpha(ind.alpha)\n","    save_heatmap(args.model.matrix_alpha(), os.path.join(path, 'alpha_%d.png' % i))\n","\n","    sampler = EdgewiseSampler()\n","    graph = args.model.sampled_graph(sampler)\n","    render_graph(graph, os.path.join(path, 'graph_%d' % i))\n","\n","    edge = len([(e, f) for e, f in graph.edges() if not e + 1 == f])\n","    ind.result['edge'] = edge\n","\n","    torch.save(ind, os.path.join(path, 'ind_%d.pth' % i))\n","    logging.info(ind.result)"],"execution_count":62,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HTOVV3pkhHuL"},"source":["## learning"]},{"cell_type":"code","metadata":{"id":"CNo6kmtFi1bh","executionInfo":{"status":"ok","timestamp":1609826257917,"user_tz":-540,"elapsed":4473,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@argspace(retain_graph=True)\n","def train(args):\n","  objs = AvgrageMeter()\n","  top1 = AvgrageMeter()\n","  top5 = AvgrageMeter()\n","  args.model.train()\n","\n","  for step, (input, target) in enumerate(args.dataset):\n","    n = input.size(0)\n","\n","    input = Variable(input, requires_grad=False).to(args.device)\n","    target = Variable(target, requires_grad=False).to(args.device)\n","\n","    args.architect.step()\n","\n","    args.optimizer.zero_grad()\n","    logits = args.model(input)\n","    loss = args.criterion(logits, target)\n","\n","    loss.backward(retain_graph=args.retain_graph)\n","    # nn.utils.clip_grad_norm(args.model.parameters(), args.grad_clip)\n","    args.optimizer.step()\n","\n","    prec1, prec5 = accuracy(logits, target, topk=(1, 5))\n","    objs.update(loss.item(), n)\n","    top1.update(prec1.item(), n)\n","    top5.update(prec5.item(), n)\n","\n","    if step % args.report_freq == 0:\n","      logging.info('train %03d %e %f %f', step, objs.avg, top1.avg, top5.avg)\n","\n","  return top1.avg, objs.avg"],"execution_count":63,"outputs":[]},{"cell_type":"code","metadata":{"id":"UEl5TUc-1MiE","executionInfo":{"status":"ok","timestamp":1609826257917,"user_tz":-540,"elapsed":4464,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@argspace(retain_graph=True)\n","def train_architect(args):\n","  objs = AvgrageMeter()\n","  top1 = AvgrageMeter()\n","  top5 = AvgrageMeter()\n","  args.model.train()\n","\n","  for step, (input, target) in enumerate(args.dataset):\n","    n = input.size(0)\n","\n","    input = Variable(input, requires_grad=False).to(args.device)\n","    target = Variable(target, requires_grad=False).to(args.device)\n","\n","    args.architect.step()\n","\n","    logits = args.model(input)\n","    loss = args.criterion(logits, target)\n","    prec1, prec5 = accuracy(logits, target, topk=(1, 5))\n","    objs.update(loss.item(), n)\n","    top1.update(prec1.item(), n)\n","    top5.update(prec5.item(), n)\n","\n","    if step % args.report_freq == 0:\n","      logging.info('train %03d %e %f %f', step, objs.avg, top1.avg, top5.avg)\n","\n","  return top1.avg, objs.avg"],"execution_count":64,"outputs":[]},{"cell_type":"code","metadata":{"id":"xQKeYZkwi2Dx","executionInfo":{"status":"ok","timestamp":1609826257918,"user_tz":-540,"elapsed":4457,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@argspace()\n","def infer(args):\n","  objs = AvgrageMeter()\n","  top1 = AvgrageMeter()\n","  top5 = AvgrageMeter()\n","  args.model.eval()\n","\n","  for step, (input, target) in enumerate(args.dataset):\n","    input = Variable(input, requires_grad=False).to(args.device)\n","    target = Variable(target, requires_grad=False).to(args.device)\n","\n","    logits = args.model(input)\n","    loss = args.criterion(logits, target)\n","\n","    prec1, prec5 = accuracy(logits, target, topk=(1, 5))\n","    n = input.size(0)\n","    objs.update(loss.item(), n)\n","    top1.update(prec1.item(), n)\n","    top5.update(prec5.item(), n)\n","\n","    if step % args.report_freq == 0:\n","      logging.info('valid %03d %e %f %f', step, objs.avg, top1.avg, top5.avg)\n","\n","  return top1.avg, objs.avg"],"execution_count":65,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YvJ4TmideTvA"},"source":["## setting"]},{"cell_type":"code","metadata":{"id":"jZlfREpLSlWg","executionInfo":{"status":"ok","timestamp":1609826257919,"user_tz":-540,"elapsed":4449,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["def default_setting():\n","  default_args = argparse.Namespace(\n","      gene='VGG19', momentum=0.9, report=100, checkpoint=10,\n","      stride_max=2, batch_size=64, dir=\"\", graph=None, lr_alpha=0.0,\n","      save_weight=False, seed=41, scheduler=None, pretrain=False,\n","      cutout=False, cutout_length=0, drop_path_prob=0.0)\n","  return vars(default_args)"],"execution_count":66,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"59baVbbR2pCv"},"source":["## experiment"]},{"cell_type":"code","metadata":{"id":"yHLra87VEQ1P","executionInfo":{"status":"ok","timestamp":1609826257919,"user_tz":-540,"elapsed":4441,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@argspace(default_setting)\n","def load_model(args) -> Network:\n","  \n","  # init\n","  set_device(args)\n","  device = args.device\n","\n","  # model setup\n","  gene = cfg[args.gene]\n","  sampler = StrideCutSampler(args.stride_max) if args.stride_max > 0 else None\n","  model = Network(gene, graph=args.graph, preprocess=sampler).to(device).init_alpha(device)\n","\n","  # resume\n","  if args.dir:\n","    state = torch.load(os.path.join(args.dir, 'checkpoint.pth'))\n","    model.load_state_dict(state['model'])\n","    model.alphas = state['alpha']\n","\n","  return model"],"execution_count":67,"outputs":[]},{"cell_type":"code","metadata":{"id":"tTUPG9pfq20n","executionInfo":{"status":"ok","timestamp":1609826258183,"user_tz":-540,"elapsed":4697,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@argspace(default_setting)\n","def main(args):\n","\n","  # init\n","  exp = Experiment()\n","  exp('setup')(args)\n","  store = args.store\n","  device = args.device\n","\n","\n","  # model setup\n","  gene = cfg[args.gene]\n","  logging.info('gene %s', gene)\n","  sampler = StrideCutSampler(args.stride_max) if args.stride_max > 0 else None\n","  graph = args.graph if args.graph else None\n","  model = Network(gene, graph=graph, preprocess=sampler).to(device).init_alpha(device)\n","  logging.info('model param %s', count_param(model))\n","\n","  # # load cuda\n","  # if device == 'cuda':\n","  #   model = torch.nn.DataParallel(model)\n","  #   cudnn.benchmark = True\n","\n","  if args.pretrain:\n","    assert args.gene == 'VGG19'\n","    vgg19 = models.vgg19(pretrained=True).to(device)\n","    pretrain = [f for f in vgg19.features if type(f) == nn.Conv2d]\n","    pretrain += [f for f in vgg19.features if type(f) == nn.BatchNorm2d]\n","    target = [e for b in model.blocks for e in b.edges if not type(e) == Shortcut]\n","    target = [t[0] for t in target] + [t[1] for t in target]\n","    for t, s in zip(target, pretrain):\n","      init_module(t, s)\n","    del vgg19\n","    logging.info('Transfar learning (%s)...' % (args.gene))\n","\n","  # resume\n","  if args.dir:\n","    state = torch.load(os.path.join(args.dir, 'checkpoint.pth'))\n","    model.load_state_dict(state['model'])\n","    model.alphas = state['alpha']\n","    args.start_epoch = state['epoch']\n","    store.update(state['store'])\n","    logging.info('Resuming from epoch %d in %s' % (args.start_epoch, args.dir))\n","\n","  args.model = model\n","\n","  # env\n","  loader = load_dataloader(args)\n","  optimizer = optim.SGD(model.parameters(), lr=args.lr, momentum=args.momentum, weight_decay=5e-4)\n","  criterion = nn.CrossEntropyLoss()\n","  architect = Architect(loader.valid, model, criterion, args.lr_alpha, device)\n","  if args.scheduler:\n","    scheduler = args.scheduler(optimizer, **args.scheduler_args)\n","\n","  exp('start')(args)\n","\n","  for epoch in range(args.start_epoch + 1, args.epochs + 1):\n","    logging.info('epoch %d', epoch)\n","    args.epoch = epoch\n","    \n","    exp('epoch_start')(args)\n","          \n","    if not model.evaluate:\n","      architect.train = epoch >= args.weight_epoch\n","\n","    if model.evaluate:\n","      model.drop_path_prob = args.drop_path_prob * epoch / args.epochs\n","\n","    # training\n","    train_result = train(dataset=loader.train, model=model, \n","                         criterion=criterion, optimizer=optimizer, \n","                         architect=architect, \n","                         device=device, report_freq=args.report)\n","    exp('train_end')(args, train_result)\n","\n","    # validation\n","    valid_result = infer(dataset=loader.test, model=model, \n","                                 criterion=criterion,\n","                                 device=device, report_freq=args.report)\n","    exp('test_end')(args, valid_result)\n","\n","    if args.scheduler:\n","      scheduler.step()\n","\n","    exp('epoch_end')(args)\n","\n","    if epoch % args.checkpoint == 0:\n","      exp('checkpoint')(args)\n","\n","  exp('end')(args)\n","\n","  return model"],"execution_count":68,"outputs":[]},{"cell_type":"code","metadata":{"id":"DuQPiX5udq4K","executionInfo":{"status":"ok","timestamp":1609826258185,"user_tz":-540,"elapsed":4696,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@argspace(**default_setting())\n","def evaluate(args):\n","  model = load_model(dir=args.dir, gene=args.gene, stride_max=args.stride_max)\n","  \n","  sampler : ArchitectureSampler = args.sampler\n","  graph = model.sampled_graph(sampler)\n","\n","  args.origin_dir = args.dir\n","  args.dir = \"\"\n","  args.graph = graph\n","  main(**vars(args))"],"execution_count":69,"outputs":[]},{"cell_type":"code","metadata":{"id":"Uv6pGBTGWhaa","executionInfo":{"status":"ok","timestamp":1609826258187,"user_tz":-540,"elapsed":4696,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@argspace(**default_setting())\n","def evaluate_random(args):\n","  model = load_model(dir=args.dir, gene=args.gene, stride_max=args.stride_max)\n","  \n","  sampler : ArchitectureSampler = args.sampler\n","  graph = model.sampled_graph(sampler)\n","\n","  n = len([(e, f) for e, f in graph.edges() if not e + 1 == f])\n","  sampler : ArchitectureSampler = RandomSampler(n)\n","  graph = model.sampled_graph(sampler)\n","  \n","  args.origin_dir = args.dir\n","  args.dir = \"\"\n","  args.graph = graph\n","  main(**vars(args))"],"execution_count":70,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sdCHG5PF6yRe"},"source":["## experiment ga"]},{"cell_type":"code","metadata":{"id":"UgGju4OStqbF","executionInfo":{"status":"ok","timestamp":1609826258500,"user_tz":-540,"elapsed":4995,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@argspace(default_setting)\n","def main_ga(args):\n","\n","  # init\n","  exp = Experiment()\n","  exp('setup')(args)\n","  store = args.store\n","  device = args.device\n","\n","\n","  # model setup\n","  gene = cfg[args.gene]\n","  logging.info('gene %s', gene)\n","  sampler = StrideCutSampler(args.stride_max) if args.stride_max > 0 else None\n","  graph = args.graph if args.graph else None\n","  model = Network(gene, graph=graph, preprocess=sampler).to(device).init_alpha(device)\n","  logging.info('model param %s', count_param(model))\n","\n","  if args.pretrain:\n","    assert args.gene == 'VGG19'\n","    vgg19 = models.vgg19(pretrained=True).to(device)\n","    pretrain = [f for f in vgg19.features if type(f) == nn.Conv2d]\n","    pretrain += [f for f in vgg19.features if type(f) == nn.BatchNorm2d]\n","    target = [e for b in model.blocks for e in b.edges if not type(e) == Shortcut]\n","    target = [t[0] for t in target] + [t[1] for t in target]\n","    for t, s in zip(target, pretrain):\n","      init_module(t, s)\n","    del vgg19\n","    logging.info('Transfar learning (%s)...' % (args.gene))\n","\n","  # resume\n","  if args.dir:\n","    state = torch.load(os.path.join(args.dir, 'checkpoint.pth'))\n","    model.load_state_dict(state['model'])\n","    model.alphas = state['alpha']\n","    args.start_epoch = state['epoch']\n","    store.update(state['store'])\n","    logging.info('Resuming from epoch %d in %s' % (args.start_epoch, args.dir))\n","\n","  args.model = model\n","\n","  # env\n","  loader = load_dataloader(args)\n","  optimizer = optim.SGD(model.parameters(), lr=args.lr, momentum=args.momentum, weight_decay=5e-4)\n","  criterion = nn.CrossEntropyLoss()\n","  architect = Architect(loader.valid, model, criterion, args.lr_alpha, device)\n","  if args.scheduler:\n","    scheduler = args.scheduler(optimizer, **args.scheduler_args)\n","\n","\n","  def init_individual(self):\n","    size = len(model.beta())\n","    alpha = torch.rand(size, size)\n","    beta = [torch.sum(a[m]).item() for a, m in zip(alpha, model.mask_s)]\n","    alpha = alpha.tolist() + [beta]\n","    logging.info(\"init ind %s\", alpha)\n","    # individual.set_alpha(alpha)\n","    return alpha\n","\n","  @Experiment.event('step_evolution_start')\n","  def train_weight(args):\n","    def mean_alpha(pop):\n","      alphas = torch.tensor([ind.alpha for ind in pop])\n","      return torch.mean(alphas, 0).tolist()\n","\n","    alpha_m = mean_alpha(args.pop)\n","    model.import_alpha(alpha_m)\n","\n","    # training\n","    architect.train = False\n","    train_result = train(dataset=loader.train, model=model, \n","                         criterion=criterion, optimizer=optimizer, \n","                         architect=architect, \n","                         device=device, report_freq=args.report)\n","    logging.info('train weight %s', train_result)\n","\n","\n","  # @Experiment.event('step_evolution_start')\n","  # def train_weight(args):\n","  #   graph_old = model.graph\n","\n","  #   for individual in args.pop:\n","  #     # WARN : keep evaluate = False\n","  #     model.import_alpha(individual.alpha())\n","  #     sampler = EdgewiseSampler()\n","  #     graph = model.sampled_graph(sampler)\n","  #     model.graph = graph\n","\n","  #     # training\n","  #     architect.train = False\n","  #     model.evaluate = True\n","  #     train_result = train(dataset=loader.train, model=model, \n","  #                         criterion=criterion, optimizer=optimizer, \n","  #                         architect=architect, \n","  #                         device=device, report_freq=args.report)\n","  #     logging.info('train weight %s', train_result)\n","\n","  #     model.evaluate = False\n","\n","  #   model.graph = graph_old\n","\n","\n","  def evolve(self, individual):\n","    args.individual = individual\n","    model.import_alpha(individual.alpha)\n","\n","    # training\n","    architect.train = True\n","    train_result = train_architect(dataset=loader.valid, model=model, \n","                         criterion=criterion, optimizer=optimizer, \n","                         architect=architect, \n","                         device=device, report_freq=args.report)\n","\n","    exp('evolve_end')(args, train_result)\n","    logging.info('train %s', train_result)\n","\n","    individual.alpha = model.export_alpha()\n","\n","  # def evaluate(self, individual):\n","  #   args.individual = individual\n","  #   model.import_alpha(individual.alpha)\n","  #   graph_old = model.graph\n","  #   sampler = EdgewiseSampler()\n","  #   graph = model.sampled_graph(sampler)\n","  #   model.graph = graph\n","\n","  #   # validation\n","  #   model.evaluate = True\n","  #   valid_result = infer(dataset=loader.test, model=model, \n","  #                                criterion=criterion,\n","  #                                device=device, report_freq=args.report)\n","  #   exp('evaluate_end')(args, valid_result)\n","  #   logging.info('valid %s', valid_result)\n","\n","  #   model.evaluate = False\n","  #   model.graph = graph_old\n","\n","  #   acc, loss = valid_result\n","  #   return loss,\n","\n","  def evaluate(self, individual):\n","    args.individual = individual\n","    model.import_alpha(individual.alpha)\n","\n","    # validation\n","    valid_result = infer(dataset=loader.test, model=model, \n","                                 criterion=criterion,\n","                                 device=device, report_freq=args.report)\n","    exp('evaluate_end')(args, valid_result)\n","    logging.info('valid %s', valid_result)\n","\n","    acc, loss = valid_result\n","    return loss,\n","\n","\n","  GA._init = init_individual\n","  GA._evaluate = evaluate\n","  GA._evolve = evolve\n","\n","  ga = TDGA(args)\n","  exec = ExecuteTDGA(ga, args)\n","  _ = exec.run()\n","  logging.info('book\\n%s', ga.logbook)\n","\n","  return model"],"execution_count":71,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZmqhuHQggcnd","executionInfo":{"status":"ok","timestamp":1609826258502,"user_tz":-540,"elapsed":4987,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["@argspace(default_setting)\n","def evaluate_ga(args):\n","  model = load_model(gene=args.gene, stride_max=args.stride_max)\n","  \n","  ind = torch.load(args.dir)\n","  model.import_alpha(ind.alpha())\n","  sampler : ArchitectureSampler = args.sampler\n","  graph = model.sampled_graph(sampler)\n","\n","  args.origin_dir, args.dir = args.dir, \"\"\n","  args.graph = graph\n","  main(**vars(args))"],"execution_count":72,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nGjJsHh50xtj"},"source":["# main"]},{"cell_type":"code","metadata":{"id":"zIHKyfF_gHZN","executionInfo":{"status":"ok","timestamp":1609826258503,"user_tz":-540,"elapsed":4985,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}}},"source":["# if __name__ == '__main__':\n","#   path = 'exp_ga-2020-12-03_22-38-55/gen/19/'\n","#   for i in [3, 4, 5, 6, 7]:\n","#     evaluate_ga(save=\"exp_ga_eval_%d\" % i, lr=0.0090131, epochs=150,\n","#         scheduler=optim.lr_scheduler.StepLR,\n","#         scheduler_args={'gamma':0.23440, 'step_size':100},\n","#         train_size=50000, valid_size=0, test_size=10000, sampler=EdgewiseSampler(),\n","#         dir=os.path.join(\"drive/My Drive/ml/\", path, 'ind_%d.pth' % i))"],"execution_count":73,"outputs":[]},{"cell_type":"code","metadata":{"id":"IE0qIv7vje4j","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1609840102732,"user_tz":-540,"elapsed":2264677,"user":{"displayName":"Yy Yy","photoUrl":"","userId":"02437050620110452344"}},"outputId":"564937b8-2c4c-4ec2-f7da-e8fce360552d"},"source":["if __name__ == '__main__':\n","  main_ga(save=\"exp_tdga_test\", lr=0.001, lr_alpha=0.003,\n","      population=10, generation=20, crossover=0.5, mutation=0.2,\n","      t_init=10, t_fin=2, is_compress=False,\n","      train_size=12500, valid_size=5000, test_size=1000, seed=41, pretrain=True)"],"execution_count":74,"outputs":[{"output_type":"stream","text":["Experiment dir : exp_tdga_test-2021-01-05_14-57-36\n","01/05 05:57:36 AM kwargs Namespace(batch_size=64, checkpoint=10, crossover=0.5, cutout=False, cutout_length=0, dir='', drop_path_prob=0.0, gene='VGG19', generation=20, graph=None, is_compress=False, lr=0.001, lr_alpha=0.003, momentum=0.9, mutation=0.2, population=10, pretrain=True, report=100, save='exp_tdga_test-2021-01-05_14-57-36', save_weight=False, scheduler=None, seed=41, stride_max=2, t_fin=2, t_init=10, test_size=1000, train_size=12500, valid_size=5000)\n","01/05 05:57:36 AM gene [64, 64, 'M', 128, 128, 'M', 256, 256, 256, 256, 'M', 512, 512, 512, 512, 'M', 512, 512, 512, 512, 'M']\n","01/05 05:57:40 AM model param 26298058\n","01/05 05:57:42 AM Transfar learning (VGG19)...\n","Files already downloaded and verified\n","Files already downloaded and verified\n","01/05 05:57:44 AM init ind [[0.046283721923828125, 0.06447327136993408, 0.7119225263595581, 0.30583643913269043, 0.48787921667099, 0.7094272971153259, 0.9221736788749695, 0.4753607511520386, 0.15172713994979858, 0.7471240162849426, 0.30185216665267944, 0.9147419333457947, 0.6040821671485901, 0.2841606140136719, 0.1016385555267334, 0.7515861392021179, 0.08034604787826538], [0.4484557509422302, 0.977553129196167, 0.8182178139686584, 0.826239824295044, 0.9785870909690857, 0.605931282043457, 0.30852818489074707, 0.5658751130104065, 0.49672436714172363, 0.6128240823745728, 0.21538859605789185, 0.027048349380493164, 0.853799045085907, 0.8001802563667297, 0.31409794092178345, 0.9195808172225952, 0.8984447717666626], [0.20519936084747314, 0.10084569454193115, 0.9734326004981995, 0.7737023234367371, 0.6300784945487976, 0.6282634139060974, 0.6120558977127075, 0.9420335292816162, 0.6642792224884033, 0.7655438184738159, 0.5299139022827148, 0.6896716356277466, 0.7967758774757385, 0.9943048357963562, 0.8741576075553894, 0.01380622386932373, 0.3415449261665344], [0.613151490688324, 0.421312153339386, 0.05239146947860718, 0.7685403227806091, 0.6541802883148193, 0.38887596130371094, 0.7634544968605042, 0.7182125449180603, 0.4515247941017151, 0.01997506618499756, 0.6991246342658997, 0.8022930026054382, 0.9085863828659058, 0.13237988948822021, 0.892977237701416, 0.7964858412742615, 0.32210415601730347], [0.32497721910476685, 0.672239363193512, 0.05161476135253906, 0.8242378830909729, 0.503572404384613, 0.7032604813575745, 0.498199462890625, 0.22374099493026733, 0.29477715492248535, 0.7805598378181458, 0.024675488471984863, 0.3352166414260864, 0.9989464282989502, 0.8985067009925842, 0.7197450995445251, 0.23512673377990723, 0.6860950589179993], [0.8073059916496277, 0.7447448968887329, 0.12708091735839844, 0.7423545718193054, 0.7451261878013611, 0.7743979096412659, 0.5162210464477539, 0.8378373384475708, 0.01970815658569336, 0.09986627101898193, 0.9786354899406433, 0.35975193977355957, 0.20901089906692505, 0.32336074113845825, 0.25754135847091675, 0.6983583569526672, 0.7886850237846375], [0.7674379348754883, 0.20635312795639038, 0.4683731198310852, 0.07758092880249023, 0.9105079770088196, 0.5762543082237244, 0.16580963134765625, 0.47847384214401245, 0.4757770895957947, 0.5878543853759766, 0.6257766485214233, 0.3155995011329651, 0.2907865047454834, 0.5401789546012878, 0.5022560954093933, 0.20859074592590332, 0.9466834664344788], [0.9397069215774536, 0.8468148708343506, 0.1313081979751587, 0.06514227390289307, 0.17601913213729858, 0.0131683349609375, 0.8795082569122314, 0.10352146625518799, 0.7757664918899536, 0.04887962341308594, 0.699031412601471, 0.1405971646308899, 0.28945058584213257, 0.6029463410377502, 0.858492910861969, 0.6651745438575745, 0.8429872989654541], [0.5162820219993591, 0.741091251373291, 0.3209725022315979, 0.4292372465133667, 0.294267475605011, 0.259782075881958, 0.0473400354385376, 0.2882416844367981, 0.8173360228538513, 0.5775340795516968, 0.24381518363952637, 0.3961939811706543, 0.07618778944015503, 0.3128342032432556, 0.42311322689056396, 0.823065996170044, 0.5018221139907837], [0.12240290641784668, 0.8602365255355835, 0.30283236503601074, 0.8240618109703064, 0.79765784740448, 0.7946030497550964, 0.27157092094421387, 0.5886062383651733, 0.3383501172065735, 0.5378437638282776, 0.11510652303695679, 0.6379138231277466, 0.29793721437454224, 0.19145351648330688, 0.660428524017334, 0.6724190711975098, 0.7781141996383667], [0.07350695133209229, 0.7877638936042786, 0.4506687521934509, 0.3940168619155884, 0.16327577829360962, 0.5560106635093689, 0.5831242203712463, 0.8466482758522034, 0.45255136489868164, 0.24752861261367798, 0.831305980682373, 0.28575557470321655, 0.2588677406311035, 0.21024560928344727, 0.9947195649147034, 0.7693734169006348, 0.06668376922607422], [0.6290477514266968, 0.5389342308044434, 0.7107289433479309, 0.745624840259552, 0.5149429440498352, 0.6764093637466431, 0.7314713597297668, 0.8123580813407898, 0.07523012161254883, 0.7844096422195435, 0.6510065793991089, 0.880619466304779, 0.31313711404800415, 0.0867534875869751, 0.008928477764129639, 0.38477015495300293, 0.8020963072776794], [0.8768137097358704, 0.39351099729537964, 0.8073082566261292, 0.07032907009124756, 0.42892956733703613, 0.1181344985961914, 0.3680393695831299, 0.33286088705062866, 0.8807039260864258, 0.40121275186538696, 0.24114036560058594, 0.7588003277778625, 0.9639276266098022, 0.05206531286239624, 0.8092970252037048, 0.6761518716812134, 0.9291571378707886], [0.54476398229599, 0.2426406741142273, 0.2686194181442261, 0.38732779026031494, 0.3849642872810364, 0.7347948551177979, 0.29827600717544556, 0.3453463912010193, 0.898188591003418, 0.8084660768508911, 0.5240378379821777, 0.5056700706481934, 0.4052531123161316, 0.640533447265625, 0.19501304626464844, 0.26214367151260376, 0.985288679599762], [0.4237428307533264, 0.005101442337036133, 0.7029381990432739, 0.4416576027870178, 0.43870335817337036, 0.24374842643737793, 0.28526413440704346, 0.8392404317855835, 0.7067588567733765, 0.29163408279418945, 0.06554287672042847, 0.5935585498809814, 0.5023156404495239, 0.6099428534507751, 0.6033278703689575, 0.4740999937057495, 0.5168293714523315], [0.07300108671188354, 0.33889341354370117, 0.5982412695884705, 0.42273396253585815, 0.3185688853263855, 0.5583741068840027, 0.3096334934234619, 0.3942512273788452, 0.04405707120895386, 0.642401397228241, 0.08860307931900024, 0.6960071325302124, 0.8316320776939392, 0.7822789549827576, 0.6577939987182617, 0.4501727223396301, 0.5178840756416321], [0.9172800779342651, 0.8106722235679626, 0.07065039873123169, 0.9359399080276489, 0.28935152292251587, 0.36992377042770386, 0.38756686449050903, 0.5484792590141296, 0.8434303998947144, 0.2691790461540222, 0.3825039267539978, 0.3348116874694824, 0.4626999497413635, 0.11696785688400269, 0.42148077487945557, 0.8066502809524536, 0.46904420852661133], [0.0, 0.0, 0.0, 0.421312153339386, 0.723854124546051, 0.8694354891777039, 1.456462025642395, 0.38563793897628784, 1.3515993356704712, 2.4524378776550293, 2.6016101837158203, 3.5948214530944824, 2.7710213661193848, 2.7363624572753906, 2.1598100662231445, 3.08497953414917, 2.831073760986328]]\n","01/05 05:57:44 AM valid 000 4.456091e+00 4.687500 48.437500\n","01/05 05:57:44 AM valid (12.4, 4.077905261993409)\n","01/05 05:57:44 AM init ind [[0.04835003614425659, 0.5640754103660583, 0.09337121248245239, 0.19376033544540405, 0.06854593753814697, 0.3311387300491333, 0.6491722464561462, 0.6572452187538147, 0.3895048499107361, 0.07974600791931152, 0.3179497718811035, 0.09610825777053833, 0.3002268671989441, 0.2404046654701233, 0.6680008769035339, 0.31933772563934326, 0.6985647082328796], [0.33358681201934814, 0.3084840774536133, 0.8146023154258728, 0.6760008931159973, 0.09064638614654541, 0.20232266187667847, 0.7171929478645325, 0.42242997884750366, 0.7400074601173401, 0.22561109066009521, 0.9834168553352356, 0.15318423509597778, 0.5752436518669128, 0.8661500215530396, 0.4044535756111145, 0.7537606954574585, 0.15764576196670532], [0.19900989532470703, 0.24549102783203125, 0.6454143524169922, 0.05138617753982544, 0.6974891424179077, 0.15026718378067017, 0.6411721110343933, 0.6352033019065857, 0.4480167031288147, 0.4181380271911621, 0.3337963819503784, 0.707760214805603, 0.26110488176345825, 0.8085221648216248, 0.15788787603378296, 0.4878894090652466, 0.9986512660980225], [0.7589265704154968, 0.8128474950790405, 0.3173954486846924, 0.8706185221672058, 0.264626681804657, 0.5701279044151306, 0.18724846839904785, 0.1873226761817932, 0.920054018497467, 0.4027538299560547, 0.29508113861083984, 0.548053503036499, 0.2742575407028198, 0.17936748266220093, 0.1266987919807434, 0.8394590020179749, 0.16481852531433105], [0.8485723733901978, 0.9689072966575623, 0.07592207193374634, 0.4228132963180542, 0.7814210653305054, 0.7423881888389587, 0.8358715772628784, 0.9121500253677368, 0.6735571622848511, 0.9421491622924805, 0.2254369854927063, 0.24518364667892456, 0.5439319014549255, 0.34024137258529663, 0.3135482668876648, 0.8865191340446472, 0.5379990935325623], [0.026822805404663086, 0.7074207067489624, 0.8554620146751404, 0.04411768913269043, 0.7948306202888489, 0.8109686374664307, 0.1254701018333435, 0.10332119464874268, 0.644180417060852, 0.16661036014556885, 0.8062318563461304, 0.7843858003616333, 0.14078950881958008, 0.8409942984580994, 0.5606112480163574, 0.8540100455284119, 0.39760708808898926], [0.18966901302337646, 0.1731545329093933, 0.8840510249137878, 0.8846748471260071, 0.36821943521499634, 0.7786538600921631, 0.32536178827285767, 0.19586825370788574, 0.3266523480415344, 0.5892577171325684, 0.14549589157104492, 0.6590433716773987, 0.9213747978210449, 0.8579409122467041, 0.03729891777038574, 0.8149217963218689, 0.1146131157875061], [0.20073974132537842, 0.2048245072364807, 0.6011749505996704, 0.282601535320282, 0.37773597240448, 0.33574193716049194, 0.63658207654953, 0.8302086591720581, 0.43258970975875854, 0.8441885709762573, 0.6382731199264526, 0.5718758702278137, 0.11443227529525757, 0.266593873500824, 0.9296191334724426, 0.6158266067504883, 0.15646231174468994], [0.7351699471473694, 0.3620263934135437, 0.9078726172447205, 0.8257085680961609, 0.163580060005188, 0.0018895268440246582, 0.4449607729911804, 0.7322041988372803, 0.7342360019683838, 0.00640946626663208, 0.7451310753822327, 0.17867130041122437, 0.899226725101471, 0.07082170248031616, 0.02704465389251709, 0.9767079949378967, 0.322149395942688], [0.41886740922927856, 0.6802423000335693, 0.5828472971916199, 0.06630069017410278, 0.8775275349617004, 0.24336111545562744, 0.5783560872077942, 0.6043217778205872, 0.952000081539154, 0.4242251515388489, 0.4054596424102783, 0.7821360230445862, 0.0619586706161499, 0.17480164766311646, 0.16831964254379272, 0.06954371929168701, 0.08260715007781982], [0.8843589425086975, 0.13069069385528564, 0.6818378567695618, 0.5889780521392822, 0.3168115019798279, 0.6582719683647156, 0.23673343658447266, 0.7899115681648254, 0.4786340594291687, 0.24350684881210327, 0.49378806352615356, 0.19705551862716675, 0.6508476734161377, 0.4207107424736023, 0.48054271936416626, 0.7599069476127625, 0.8222843408584595], [0.7707511186599731, 0.8502877950668335, 0.9636639356613159, 0.7146105170249939, 0.9819535613059998, 0.16392219066619873, 0.3554105758666992, 0.2864169478416443, 0.20137673616409302, 0.626846194267273, 0.2808215022087097, 0.19445812702178955, 0.48239803314208984, 0.8106198310852051, 0.2613682746887207, 0.06740427017211914, 0.91279536485672], [0.45256686210632324, 0.14873665571212769, 0.25447213649749756, 0.6401022672653198, 0.6419339179992676, 0.5908046960830688, 0.6743608713150024, 0.5552063584327698, 0.4108802080154419, 0.5379636287689209, 0.9478399753570557, 0.4707246422767639, 0.31846553087234497, 0.9786027073860168, 0.6650404930114746, 0.12016934156417847, 0.8895601630210876], [0.05872923135757446, 0.5953946113586426, 0.26557856798171997, 0.3203624486923218, 0.9730611443519592, 0.49452221393585205, 0.2450566291809082, 0.2512519955635071, 0.3200685977935791, 0.5374912023544312, 0.5852706432342529, 0.8694837093353271, 0.835662305355072, 0.3922874331474304, 0.38720160722732544, 0.41918784379959106, 0.7823812365531921], [0.22816860675811768, 0.31290823221206665, 0.8146203756332397, 0.8379148840904236, 0.31365227699279785, 0.32723116874694824, 0.32718533277511597, 0.8786073327064514, 0.6885970234870911, 0.8857850432395935, 0.8543757796287537, 0.2173314094543457, 0.9905343055725098, 0.5188308954238892, 0.8131902813911438, 0.9420991539955139, 0.4780242443084717], [0.9247002601623535, 0.5072798728942871, 0.6821486949920654, 0.6067737340927124, 0.12810134887695312, 0.8619191646575928, 0.25875645875930786, 0.055858612060546875, 0.9363251328468323, 0.8280736804008484, 0.20287686586380005, 0.6619715690612793, 0.6206998825073242, 0.16057944297790527, 0.43000155687332153, 0.7555758357048035, 0.7414216995239258], [0.5273891687393188, 0.2617594003677368, 0.621679961681366, 0.13838237524032593, 0.5595822334289551, 0.1893712282180786, 0.02858525514602661, 0.621797502040863, 0.7167401909828186, 0.8847946524620056, 0.6409483551979065, 0.3415004014968872, 0.2339928150177002, 0.8900250792503357, 0.8549790382385254, 0.9812253713607788, 0.9412354230880737], [0.0, 0.0, 0.0, 0.8128474950790405, 1.0448293685913086, 0.8995797038078308, 2.1369452476501465, 1.5972545146942139, 2.3440115451812744, 2.3035664558410645, 2.4803624153137207, 2.6159262657165527, 4.358989238739014, 2.312314033508301, 3.6366236209869385, 3.4105265140533447, 4.562980651855469]]\n","01/05 05:57:45 AM valid 000 6.309003e+00 6.250000 50.000000\n","01/05 05:57:45 AM valid (12.0, 5.416670894622802)\n","01/05 05:57:45 AM init ind [[0.9908583760261536, 0.13361358642578125, 0.9126295447349548, 0.36019253730773926, 0.3438199758529663, 0.3789082169532776, 0.6232340931892395, 0.866849958896637, 0.6231955885887146, 0.26613104343414307, 0.16708999872207642, 0.20170092582702637, 0.05822521448135376, 0.7386544942855835, 0.10785341262817383, 0.3297010660171509, 0.005544900894165039], [0.3047417998313904, 0.25755155086517334, 0.7277106642723083, 0.16873538494110107, 0.6761000156402588, 0.15288007259368896, 0.30813634395599365, 0.95290207862854, 0.2784092426300049, 0.5427998304367065, 0.8162193298339844, 0.6588805913925171, 0.8622915744781494, 0.635648250579834, 0.05748140811920166, 0.08685386180877686, 0.6086080074310303], [0.49404603242874146, 0.08317327499389648, 0.7183367609977722, 0.5669626593589783, 0.7088211178779602, 0.8646378517150879, 0.1291712522506714, 0.6785869002342224, 0.5814657807350159, 0.33621078729629517, 0.6442118883132935, 0.11668503284454346, 0.2759706974029541, 0.3151910901069641, 0.03854578733444214, 0.4558587670326233, 0.33660900592803955], [0.7721054553985596, 0.4542562961578369, 0.8314641118049622, 0.8958319425582886, 0.43700486421585083, 0.7014260292053223, 0.48312801122665405, 0.018374919891357422, 0.9759750962257385, 0.23442000150680542, 0.8566449284553528, 0.18564558029174805, 0.25687849521636963, 0.5460729598999023, 0.8499967455863953, 0.8213391900062561, 0.9291579723358154], [0.8273013830184937, 0.2722662091255188, 0.9837529063224792, 0.12835443019866943, 0.002966463565826416, 0.7124895453453064, 0.29467570781707764, 0.517365038394928, 0.19793015718460083, 0.2356278896331787, 0.3011322021484375, 0.5934034585952759, 0.566760778427124, 0.42757731676101685, 0.35147911310195923, 0.10304903984069824, 0.2617129683494568], [0.9372868537902832, 0.110495924949646, 0.28852057456970215, 0.6780325174331665, 0.7330693602561951, 0.3251102566719055, 0.08893483877182007, 0.3019985556602478, 0.10863786935806274, 0.07757014036178589, 0.6696580052375793, 0.8047424554824829, 0.4753713607788086, 0.6123833656311035, 0.7975756525993347, 0.8870360851287842, 0.4077160358428955], [0.3275498151779175, 0.43792057037353516, 0.48718398809432983, 0.48636168241500854, 0.6421012878417969, 0.7909321188926697, 0.9403937458992004, 0.6143678426742554, 0.3784112334251404, 0.9844517111778259, 0.2826513648033142, 0.3415105938911438, 0.5253574252128601, 0.8555359840393066, 0.3925885558128357, 0.933623194694519, 0.28181391954421997], [0.6671954393386841, 0.1068994402885437, 0.3467164635658264, 0.18568211793899536, 0.14454495906829834, 0.11690914630889893, 0.7510013580322266, 0.8985861539840698, 0.6614094376564026, 0.6004670858383179, 0.19890046119689941, 0.5950502753257751, 0.4572957158088684, 0.9853392243385315, 0.8581365942955017, 0.12188750505447388, 0.32646286487579346], [0.5150189995765686, 0.23767507076263428, 0.5010316967964172, 0.9421969652175903, 0.5053046345710754, 0.7996034622192383, 0.5072096586227417, 0.9530426263809204, 0.913684070110321, 0.07254713773727417, 0.5222935080528259, 0.615320086479187, 0.876956045627594, 0.8480284214019775, 0.341652512550354, 0.3751317858695984, 0.016577422618865967], [0.29838502407073975, 0.15386587381362915, 0.3229665160179138, 0.6438103914260864, 0.5124759078025818, 0.5182239413261414, 0.6497854590415955, 0.9168232679367065, 0.4479498267173767, 0.5770111680030823, 0.43819648027420044, 0.8271755576133728, 0.4374505281448364, 0.28276729583740234, 0.6419445872306824, 0.3605153560638428, 0.6632934212684631], [0.24050748348236084, 0.9210560917854309, 0.4558880925178528, 0.3966470956802368, 0.21304523944854736, 0.7779656052589417, 0.6759958863258362, 0.43596351146698, 0.8520534038543701, 0.7506911158561707, 0.26663756370544434, 0.5696713328361511, 0.6153243184089661, 0.44763892889022827, 0.5420790314674377, 0.22412335872650146, 0.42013293504714966], [0.42002010345458984, 0.4965962767601013, 0.7251183986663818, 0.5773357152938843, 0.2908834218978882, 0.29262983798980713, 0.5673035979270935, 0.941767692565918, 0.7634707093238831, 0.07368427515029907, 0.7635343074798584, 0.7780826091766357, 0.6241073608398438, 0.34968698024749756, 0.17625916004180908, 0.5618054866790771, 0.7091761827468872], [0.5385241508483887, 0.49235373735427856, 0.6090556979179382, 0.6955772042274475, 0.5081431269645691, 0.8783918619155884, 0.6887673139572144, 0.7598872780799866, 0.6927493214607239, 0.27320969104766846, 0.9184064269065857, 0.46963226795196533, 0.4270699620246887, 0.5430182814598083, 0.723260223865509, 0.4622064232826233, 0.45871758460998535], [0.0597798228263855, 0.26811861991882324, 0.3505484461784363, 0.4018278121948242, 0.22436511516571045, 0.8548969626426697, 0.969680666923523, 0.00764840841293335, 0.767977237701416, 0.18404561281204224, 0.34582388401031494, 0.5139150023460388, 0.8791252374649048, 0.4539417028427124, 0.9385530948638916, 0.8317475318908691, 0.8073558807373047], [0.5922926664352417, 0.11202305555343628, 0.08555597066879272, 0.8111840486526489, 0.22097069025039673, 0.04191619157791138, 0.6337501406669617, 0.5105135440826416, 0.7573407292366028, 0.21760231256484985, 0.2812460660934448, 0.42686426639556885, 0.5445912480354309, 0.16870653629302979, 0.08482199907302856, 0.852803111076355, 0.41490525007247925], [0.4961550235748291, 0.16087281703948975, 0.118022620677948, 0.018316447734832764, 0.7522569298744202, 0.3724878430366516, 0.05470621585845947, 0.48588234186172485, 0.6245707869529724, 0.4902697801589966, 0.8415434956550598, 0.46438056230545044, 0.7221167087554932, 0.31963545083999634, 0.6459817886352539, 0.6384750008583069, 0.25029051303863525], [0.9345623850822449, 0.12687307596206665, 0.5210981965065002, 0.7805736660957336, 0.43529659509658813, 0.3351062536239624, 0.4864361882209778, 0.7031005024909973, 0.36165356636047363, 0.8034688830375671, 0.7737420201301575, 0.0463336706161499, 0.5052023530006409, 0.7498912215232849, 0.9478532075881958, 0.515998363494873, 0.6645376682281494], [0.0, 0.0, 0.0, 0.4542562961578369, 1.256019115447998, 0.9665530920028687, 1.6156469583511353, 0.793852686882019, 3.2553465366363525, 2.59730863571167, 2.955023765563965, 2.929739475250244, 4.719554901123047, 1.8117618560791016, 2.227644681930542, 3.4625167846679688, 4.188145160675049]]\n","01/05 05:57:45 AM valid 000 6.131154e+00 4.687500 48.437500\n","01/05 05:57:46 AM valid (11.6, 5.241580410003662)\n","01/05 05:57:46 AM init ind [[0.7437079548835754, 0.5243619084358215, 0.6235671639442444, 0.7629589438438416, 0.37755852937698364, 0.7016388773918152, 0.4761665463447571, 0.7504152059555054, 0.6763364672660828, 0.9053642749786377, 0.008208274841308594, 0.3314269781112671, 0.7895262837409973, 0.7177976369857788, 0.32315534353256226, 0.1726354956626892, 0.08524519205093384], [0.4889717102050781, 0.5098181366920471, 0.15802651643753052, 0.44740045070648193, 0.09879553318023682, 0.8206934332847595, 0.1357601284980774, 0.5683114528656006, 0.46909159421920776, 0.5789821743965149, 0.7075049877166748, 0.9691546559333801, 0.38394200801849365, 0.2026328444480896, 0.27115362882614136, 0.13264739513397217, 0.8134067058563232], [0.5413629412651062, 0.3044951558113098, 0.3230891227722168, 0.6506694555282593, 0.6045984625816345, 0.7361506819725037, 0.40495210886001587, 0.3009110689163208, 0.6329505443572998, 0.9227229952812195, 0.5611947774887085, 0.8411036729812622, 0.1865362524986267, 0.3595566749572754, 0.32059240341186523, 0.12378358840942383, 0.6247920989990234], [0.2621932625770569, 0.5741991400718689, 0.38565587997436523, 0.16565841436386108, 0.8082138299942017, 0.36006152629852295, 0.4650752544403076, 0.31910085678100586, 0.49863576889038086, 0.5058667659759521, 0.939001202583313, 0.003784656524658203, 0.4538390636444092, 0.3609110713005066, 0.740742027759552, 0.6233091950416565, 0.8192028999328613], [0.881203830242157, 0.8867052793502808, 1.9788742065429688e-05, 0.5006883144378662, 0.7224330902099609, 0.5329170823097229, 0.3118685483932495, 0.403752863407135, 0.7779094576835632, 0.2115541696548462, 0.8815782070159912, 0.872178852558136, 0.9663169980049133, 0.6384534239768982, 0.154829740524292, 0.6959923505783081, 0.6909130215644836], [0.562667965888977, 0.39659422636032104, 0.4750903844833374, 0.3605749011039734, 0.37182021141052246, 0.12498855590820312, 0.25207823514938354, 0.6496096849441528, 0.5917417407035828, 0.7436674237251282, 0.7826629877090454, 0.005524933338165283, 0.49828124046325684, 0.7836089730262756, 0.03930705785751343, 0.9081058502197266, 0.7820181250572205], [0.06153392791748047, 0.12215006351470947, 0.232768714427948, 0.1310265064239502, 0.551932156085968, 0.553834080696106, 0.739849865436554, 0.23536503314971924, 0.3379784822463989, 0.8845111727714539, 0.6781278848648071, 0.5349286198616028, 0.16627484560012817, 0.3258044123649597, 0.17465293407440186, 0.78493732213974, 0.7574365735054016], [0.5630868673324585, 0.6037635207176208, 0.7973048686981201, 0.02346247434616089, 0.1903565526008606, 0.998898446559906, 0.27524882555007935, 0.24914568662643433, 0.3717145323753357, 0.6949372291564941, 0.27166157960891724, 0.8200189471244812, 0.2669306993484497, 0.3893550634384155, 0.8953813910484314, 0.8863959908485413, 0.5358307361602783], [0.021772563457489014, 0.9658944606781006, 0.12540042400360107, 0.6954857110977173, 0.1783631443977356, 0.7287762761116028, 0.6870566010475159, 0.8736456632614136, 0.5328217148780823, 0.9373455047607422, 0.46189337968826294, 0.2293870449066162, 0.9532305598258972, 0.8807490468025208, 0.4363951086997986, 0.32624125480651855, 0.6822119951248169], [0.529592752456665, 0.6298226118087769, 0.2958988547325134, 0.9643476605415344, 0.7707094550132751, 0.449554979801178, 0.6627021431922913, 0.22999566793441772, 0.7283749580383301, 0.13860362768173218, 0.899257242679596, 0.8940666317939758, 0.5231826305389404, 0.6107654571533203, 0.4882239103317261, 0.04467296600341797, 0.2398877739906311], [0.9713801145553589, 0.21615010499954224, 0.937646210193634, 0.11561983823776245, 0.5453004240989685, 0.011541247367858887, 0.5371174812316895, 0.33027833700180054, 0.5140560269355774, 0.803503155708313, 0.6069793105125427, 0.5378510355949402, 0.45558464527130127, 0.8284744024276733, 0.3809923529624939, 0.3641411066055298, 0.7210864424705505], [0.7473390102386475, 0.5534398555755615, 0.0682675838470459, 0.6035768389701843, 0.17604845762252808, 0.08061856031417847, 0.31170064210891724, 0.944817066192627, 0.43375110626220703, 0.8463966250419617, 0.1266818642616272, 0.5887138843536377, 0.7249681949615479, 0.5951138734817505, 0.39210033416748047, 0.4009106755256653, 0.3055056929588318], [0.3942977786064148, 0.21340441703796387, 0.601693868637085, 0.24801957607269287, 0.3973943591117859, 0.7548750042915344, 0.3503491282463074, 0.018404781818389893, 0.06975525617599487, 0.26651620864868164, 0.11601811647415161, 0.8782780766487122, 0.23043590784072876, 0.6928001642227173, 0.2979142665863037, 0.17273187637329102, 0.7197439074516296], [0.4240354299545288, 0.14315295219421387, 0.3524838089942932, 0.19559472799301147, 0.5308904051780701, 0.6443926692008972, 0.6085644960403442, 0.19244098663330078, 0.9638220071792603, 0.390225350856781, 0.4907459616661072, 0.9296377301216125, 0.9524919986724854, 0.673028826713562, 0.0838547945022583, 0.2970494031906128, 0.02925264835357666], [0.6517723798751831, 0.17187082767486572, 0.3177046775817871, 0.25517022609710693, 0.6115511655807495, 0.1405441164970398, 0.7917848825454712, 0.5201668739318848, 0.8476362824440002, 0.04928797483444214, 0.07192480564117432, 0.5400362610816956, 0.6389204859733582, 0.8226321339607239, 0.38521939516067505, 0.520331621170044, 0.23180824518203735], [0.7285737991333008, 0.2449304461479187, 0.019255340099334717, 0.4459835886955261, 0.529235303401947, 0.930404007434845, 0.21902704238891602, 0.7190499901771545, 0.8207839727401733, 0.00759434700012207, 0.32070571184158325, 0.22725176811218262, 0.8748140931129456, 0.6064636707305908, 0.6035788655281067, 0.3337056636810303, 0.344241201877594], [0.21686160564422607, 0.7217420935630798, 0.46403902769088745, 0.032756507396698, 0.08032780885696411, 0.2527657151222229, 0.7457031607627869, 0.012037038803100586, 0.8426055312156677, 0.6019970178604126, 0.2807984948158264, 0.8454927802085876, 0.3550488352775574, 0.0027958154678344727, 0.21226948499679565, 0.8269698619842529, 0.36816704273223877], [0.0, 0.0, 0.0, 0.5741991400718689, 0.8867250680923462, 0.8356652855873108, 0.9157273769378662, 2.0100224018096924, 2.4150819778442383, 2.112962245941162, 1.93829345703125, 2.79333233833313, 1.9733128547668457, 2.774430990219116, 2.14780592918396, 2.8576135635375977, 3.141007900238037]]\n","01/05 05:57:46 AM valid 000 4.446111e+00 7.812500 42.187500\n","01/05 05:57:47 AM valid (11.0, 3.9901134071350097)\n","01/05 05:57:47 AM init ind [[0.9287669658660889, 0.7432432770729065, 0.8358902335166931, 0.07785576581954956, 0.12177538871765137, 0.9887881875038147, 0.9566581845283508, 0.6949220895767212, 0.44038647413253784, 0.07120341062545776, 0.7659177780151367, 0.9722281098365784, 0.2203872799873352, 0.5014564394950867, 0.39499223232269287, 0.278053879737854, 0.9996398687362671], [0.1922149658203125, 0.8499642014503479, 0.8579574823379517, 0.648975670337677, 0.02380472421646118, 0.898122251033783, 0.6186429262161255, 0.10469365119934082, 0.7492772936820984, 0.5618243217468262, 0.5071060657501221, 0.5115063786506653, 0.48061639070510864, 0.8795405030250549, 0.2660726308822632, 0.2920933961868286, 0.03361576795578003], [0.23730754852294922, 0.12048584222793579, 0.8671500086784363, 0.5627877712249756, 0.23242592811584473, 0.9805877208709717, 0.8285967111587524, 0.22296708822250366, 0.6104019284248352, 0.7815945744514465, 0.761727511882782, 0.24121159315109253, 0.7501541972160339, 0.968479573726654, 0.5566316246986389, 0.3493526577949524, 0.9809091687202454], [0.08725231885910034, 0.11337196826934814, 0.6815391778945923, 0.580151379108429, 0.27681565284729004, 0.8766998648643494, 0.47659265995025635, 0.037939488887786865, 0.4485124945640564, 0.04380911588668823, 0.8933071494102478, 0.6867795586585999, 0.17919564247131348, 0.5077828168869019, 0.09201312065124512, 0.951111376285553, 0.008877098560333252], [0.6293986439704895, 0.21776080131530762, 0.2921692132949829, 0.35852915048599243, 0.6621082425117493, 0.6808385252952576, 0.016474902629852295, 0.77541583776474, 0.7103111743927002, 0.6334428787231445, 0.5888862013816833, 0.6855403184890747, 0.13924622535705566, 0.7270869016647339, 0.5937603116035461, 0.9676802754402161, 0.46840834617614746], [0.7531734108924866, 0.9129288792610168, 0.8034611344337463, 0.24577820301055908, 0.12957745790481567, 0.5764303803443909, 0.5617902874946594, 0.5908645987510681, 0.28606653213500977, 0.16838735342025757, 0.6566559076309204, 0.4459460973739624, 0.39555859565734863, 0.5659679770469666, 0.45941591262817383, 0.8223298788070679, 0.14392054080963135], [0.5450451374053955, 0.5027285218238831, 0.9468866586685181, 0.7456207275390625, 0.057682037353515625, 0.7770341634750366, 0.8499739170074463, 0.12320059537887573, 0.5097138285636902, 0.9228882193565369, 0.44309329986572266, 0.4633161425590515, 0.5988988280296326, 0.45038098096847534, 0.36151617765426636, 0.7150323987007141, 0.5123910307884216], [0.7309549450874329, 0.254305362701416, 0.5684435963630676, 0.9025554060935974, 0.4194630980491638, 0.3160628080368042, 0.3167349696159363, 0.1818751096725464, 0.6458278298377991, 0.9426425099372864, 0.6379941701889038, 0.6731776595115662, 0.27915090322494507, 0.06988835334777832, 0.04828554391860962, 0.805242121219635, 0.8793278336524963], [0.12255698442459106, 0.6073929667472839, 0.723983108997345, 0.3174723982810974, 0.06708019971847534, 0.9784606099128723, 0.8099182844161987, 0.4096478223800659, 0.9254936575889587, 0.7537469863891602, 0.34821343421936035, 0.8630570769309998, 0.7968229651451111, 0.11595314741134644, 0.7850366234779358, 0.24201637506484985, 0.9409307837486267], [0.733285129070282, 0.37528669834136963, 0.5053783655166626, 0.708584189414978, 0.22593450546264648, 0.8816088438034058, 0.23035258054733276, 0.35627323389053345, 0.15192866325378418, 0.3424839973449707, 0.8569980263710022, 0.2916255593299866, 0.45623403787612915, 0.6156363487243652, 0.842558741569519, 0.449851930141449, 0.12955999374389648], [0.6674729585647583, 0.8945668935775757, 0.2756619453430176, 0.6167250871658325, 0.755588948726654, 0.7958246469497681, 0.07633084058761597, 0.6667494773864746, 0.1586870551109314, 0.3700934648513794, 0.2636088728904724, 0.8071436882019043, 0.9555365443229675, 0.17482644319534302, 0.6672491431236267, 0.4238440990447998, 0.4461849331855774], [0.8395804166793823, 0.15671080350875854, 0.9663722515106201, 0.6718580722808838, 0.3611510992050171, 0.45850974321365356, 0.32584965229034424, 0.7530772686004639, 0.09933644533157349, 0.6505367159843445, 0.6157148480415344, 0.6116160750389099, 0.30530309677124023, 0.6017611026763916, 0.03223186731338501, 0.40074676275253296, 0.18970972299575806], [0.716047465801239, 0.5108882784843445, 0.30697953701019287, 0.23342043161392212, 0.6411052942276001, 0.3390060067176819, 0.8894342184066772, 0.674343466758728, 0.22795110940933228, 0.496412456035614, 0.8748597502708435, 0.7996454834938049, 0.033041954040527344, 0.5343915820121765, 0.4172363877296448, 0.2543771266937256, 0.3632435202598572], [0.01565861701965332, 0.04867953062057495, 0.8090158700942993, 0.1224932074546814, 0.386974573135376, 0.30396825075149536, 0.16068994998931885, 0.8059740662574768, 0.8922073245048523, 0.5504844188690186, 0.6996707320213318, 0.26238179206848145, 0.7823662161827087, 0.21460670232772827, 0.6426401734352112, 0.45242947340011597, 0.8837761282920837], [0.6230854392051697, 0.77579665184021, 0.012316286563873291, 0.35126835107803345, 0.9601198434829712, 0.7910736203193665, 0.1832747459411621, 0.986860990524292, 0.16705483198165894, 0.4195941090583801, 0.8346589803695679, 0.9942848682403564, 0.6655858755111694, 0.707340657711029, 0.33172208070755005, 0.9490524530410767, 0.39435988664627075], [0.4148581624031067, 0.2984660863876343, 0.5185851454734802, 0.04469311237335205, 0.2502477765083313, 0.1923307180404663, 0.22055798768997192, 0.09701520204544067, 0.8963710069656372, 0.007539153099060059, 0.05901837348937988, 0.9305663108825684, 0.6530922651290894, 0.85374915599823, 0.9514623284339905, 0.1721954345703125, 0.6002682447433472], [0.24590235948562622, 0.9796916246414185, 0.9166388511657715, 0.7801913619041443, 0.09665346145629883, 0.23495686054229736, 0.7167383432388306, 0.12869930267333984, 0.15076392889022827, 0.4141492247581482, 0.5339816808700562, 0.6595897078514099, 0.10021829605102539, 0.5579401850700378, 0.6270342469215393, 0.340171754360199, 0.7966980338096619], [0.0, 0.0, 0.0, 0.11337196826934814, 0.5099300146102905, 1.0492393970489502, 1.7501894235610962, 2.2065248489379883, 2.8969147205352783, 1.694169044494629, 2.453181028366089, 2.648460865020752, 4.1431121826171875, 2.4047443866729736, 3.081178665161133, 3.400336503982544, 3.04367733001709]]\n","01/05 05:57:47 AM valid 000 4.858895e+00 6.250000 43.750000\n","01/05 05:57:48 AM valid (11.9, 4.420954048156738)\n","01/05 05:57:48 AM init ind [[0.6742929816246033, 0.6632882356643677, 0.29733461141586304, 0.37071460485458374, 0.1706598997116089, 0.4001629948616028, 0.7762688398361206, 0.7977105975151062, 0.9239561557769775, 0.9373890161514282, 0.9763780236244202, 0.4283648133277893, 0.9494308829307556, 0.9932471513748169, 0.050498366355895996, 0.4888290762901306, 0.18300789594650269], [0.17242610454559326, 0.11703050136566162, 0.24567806720733643, 0.7106111645698547, 0.6114980578422546, 0.1493285894393921, 0.46928220987319946, 0.320655882358551, 0.4911539554595947, 0.267261803150177, 0.3626866936683655, 0.37035518884658813, 0.11507511138916016, 0.9893242716789246, 0.9083634614944458, 0.7097280025482178, 0.8189732432365417], [0.367480993270874, 0.6735690832138062, 0.29967963695526123, 0.8724766373634338, 0.1231454610824585, 0.28904062509536743, 0.17645955085754395, 0.6734127998352051, 0.332966148853302, 0.47542089223861694, 0.8239490985870361, 0.1047673225402832, 0.2230953574180603, 0.20568418502807617, 0.9064038395881653, 0.6563844680786133, 0.8685579895973206], [0.49303340911865234, 0.23964852094650269, 0.20734918117523193, 0.09855061769485474, 0.4839082360267639, 0.9916019439697266, 0.05454975366592407, 0.5681307315826416, 0.7326980829238892, 0.710374116897583, 0.1232750415802002, 0.5812329649925232, 0.037931084632873535, 0.4429163336753845, 0.46786874532699585, 0.06576961278915405, 0.7475007176399231], [0.2994590997695923, 0.14246594905853271, 0.2421380877494812, 0.5118241906166077, 0.9056984186172485, 0.3639974594116211, 0.39598166942596436, 0.6485377550125122, 0.8333916664123535, 0.4292239546775818, 0.9339495301246643, 0.7258483171463013, 0.6517990231513977, 0.817718505859375, 0.8198097944259644, 0.09849196672439575, 0.21816420555114746], [0.8398439288139343, 0.7729368209838867, 0.5421850085258484, 0.014525651931762695, 0.7422102093696594, 0.19980907440185547, 0.7202776670455933, 0.517943263053894, 0.6927086114883423, 0.8323475122451782, 0.1596570611000061, 0.14869797229766846, 0.167155921459198, 0.3432517647743225, 0.8865767121315002, 0.600885808467865, 0.05039358139038086], [0.728988528251648, 0.4467092752456665, 0.2530165910720825, 0.13465917110443115, 0.006203889846801758, 0.9910046458244324, 0.5813032984733582, 0.18544262647628784, 0.9256337881088257, 0.9404069185256958, 0.42417776584625244, 0.10240709781646729, 0.0057891011238098145, 0.8832032084465027, 0.8465896248817444, 0.3645027279853821, 0.575014591217041], [0.8467909693717957, 0.5914333462715149, 0.1129036545753479, 0.4582275152206421, 0.7672257423400879, 0.6194480657577515, 0.06493926048278809, 0.5199673771858215, 0.05057758092880249, 0.2818726897239685, 0.4155534505844116, 0.596915602684021, 0.40706509351730347, 0.8483612537384033, 0.08362644910812378, 0.7033361196517944, 0.26965826749801636], [0.7638577818870544, 0.6251325607299805, 0.10636955499649048, 0.12009137868881226, 0.6063772439956665, 0.739264965057373, 0.6112781167030334, 0.8528337478637695, 0.012865304946899414, 0.858429491519928, 0.33782607316970825, 0.18349123001098633, 0.31002694368362427, 0.9749805331230164, 0.8409968614578247, 0.2386884093284607, 0.01291126012802124], [0.8681262731552124, 0.3605307340621948, 0.7129470705986023, 0.09335535764694214, 0.5743133425712585, 0.8025107979774475, 0.7378883361816406, 0.5585586428642273, 0.21680188179016113, 0.8177640438079834, 0.7730441689491272, 0.9919075965881348, 0.5619307160377502, 0.057178378105163574, 0.6863173246383667, 0.7706851959228516, 0.23569780588150024], [0.06525522470474243, 0.025448501110076904, 0.1406172513961792, 0.1307573914527893, 0.6102790832519531, 0.09276723861694336, 0.09124839305877686, 0.5364282131195068, 0.13180959224700928, 0.008948147296905518, 0.7299960851669312, 0.05969899892807007, 0.006964445114135742, 0.9041692018508911, 0.14815753698349, 0.8409732580184937, 0.1951501965522766], [0.5858436822891235, 0.1777578592300415, 0.4904128313064575, 0.745037317276001, 0.8493484258651733, 0.44494467973709106, 0.8431496024131775, 0.39942848682403564, 0.31845343112945557, 0.6424837112426758, 0.8704612851142883, 0.5577327013015747, 0.7568808197975159, 0.7457547783851624, 0.5559890270233154, 0.9150282144546509, 0.9593618512153625], [0.67042076587677, 0.21371090412139893, 0.41570746898651123, 0.2006615400314331, 0.060211181640625, 0.598101794719696, 0.6770349740982056, 0.016606688499450684, 0.6769207119941711, 0.9298192262649536, 0.06446462869644165, 0.44497841596603394, 0.8774018883705139, 0.8802538514137268, 0.4338180422782898, 0.32222217321395874, 0.3384777307510376], [0.4962231516838074, 0.8759172558784485, 0.649634599685669, 0.9903489947319031, 0.08817905187606812, 0.6754809617996216, 0.41093581914901733, 0.720695436000824, 0.9903123378753662, 0.9390687942504883, 0.9046286940574646, 0.7924515008926392, 0.18851548433303833, 0.6363105177879333, 0.6679906249046326, 0.03264462947845459, 0.6751726865768433], [0.7561036348342896, 0.6084496974945068, 0.841503381729126, 0.7663564085960388, 0.9588423371315002, 0.24596363306045532, 0.6857882142066956, 0.36688536405563354, 0.17874467372894287, 0.5577229261398315, 0.020219385623931885, 0.8333824872970581, 0.1806294322013855, 0.46078479290008545, 0.9254544973373413, 0.17096906900405884, 0.46568048000335693], [0.05611228942871094, 0.9940603971481323, 0.6036624908447266, 0.9401639699935913, 0.4891204833984375, 0.7266860604286194, 0.08041006326675415, 0.05008512735366821, 0.29091954231262207, 0.7293363809585571, 0.31471991539001465, 0.2553989887237549, 0.7389612793922424, 0.4651253819465637, 0.46499693393707275, 0.9144702553749084, 0.5559201240539551], [0.12488055229187012, 0.6605477929115295, 0.48174041509628296, 0.7227188944816589, 0.8823052048683167, 0.9720239043235779, 0.7325637340545654, 0.5523016452789307, 0.5047765970230103, 0.24634140729904175, 0.6856492757797241, 0.6336137056350708, 0.43580561876296997, 0.8217787742614746, 0.4634840488433838, 0.5423941612243652, 0.22600823640823364], [0.0, 0.0, 0.0, 0.23964852094650269, 0.3846040368080139, 0.5567106604576111, 0.39387965202331543, 1.9578050374984741, 2.1833813190460205, 2.6732711791992188, 1.4625325202941895, 3.4978084564208984, 3.0231595039367676, 3.6264615058898926, 1.77069890499115, 2.794461250305176, 3.791449546813965]]\n","01/05 05:57:48 AM valid 000 4.680642e+00 4.687500 43.750000\n","01/05 05:57:48 AM valid (11.4, 4.309944324493408)\n","01/05 05:57:48 AM init ind [[0.32366836071014404, 0.06456935405731201, 0.01987224817276001, 0.4658491611480713, 0.06112861633300781, 0.037439048290252686, 0.5454792976379395, 0.42547881603240967, 0.741548478603363, 0.4437131881713867, 0.31723809242248535, 0.9328113794326782, 0.8215929269790649, 0.3725082278251648, 0.37785768508911133, 0.017932236194610596, 0.859574019908905], [0.31262171268463135, 0.7505514025688171, 0.537506639957428, 0.6527373790740967, 0.6343734860420227, 0.06220543384552002, 0.9263734221458435, 0.37624800205230713, 0.07639330625534058, 0.6135572791099548, 0.08741360902786255, 0.9937036633491516, 0.1034960150718689, 0.4824121594429016, 0.35391777753829956, 0.10938507318496704, 0.2766246795654297], [0.4542797803878784, 0.5569300055503845, 0.984910249710083, 0.338481605052948, 0.004492461681365967, 0.876633882522583, 0.6263748407363892, 0.6189295649528503, 0.5455051064491272, 0.9108976721763611, 0.9777392745018005, 0.7844242453575134, 0.8876355886459351, 0.026352345943450928, 0.9963005185127258, 0.3399897813796997, 0.9119975566864014], [0.6659360527992249, 0.8442663550376892, 0.691863477230072, 0.6842774152755737, 0.004521012306213379, 0.3236132264137268, 0.9087520241737366, 0.7618601322174072, 0.9770119786262512, 0.4141281247138977, 0.2916238307952881, 0.5932435989379883, 0.7165697813034058, 0.7427797317504883, 0.0269201397895813, 0.8515306115150452, 0.8605443239212036], [0.512123167514801, 0.4811044931411743, 0.4367557168006897, 0.21929460763931274, 0.6765784025192261, 0.6994483470916748, 0.5414371490478516, 0.8349610567092896, 0.3950291872024536, 0.7631540298461914, 0.8451473712921143, 0.5329194068908691, 0.6898375153541565, 0.33900290727615356, 0.2869378924369812, 0.6449865102767944, 0.4453650116920471], [0.3655663728713989, 0.7914137244224548, 0.6672338247299194, 0.16130214929580688, 0.3614450693130493, 0.05768531560897827, 0.07557171583175659, 0.49824225902557373, 0.5427560210227966, 0.6814475655555725, 0.9248332977294922, 0.6974166631698608, 0.09013903141021729, 0.9030362963676453, 0.9461063146591187, 0.1428191065788269, 0.579439103603363], [0.5550484657287598, 0.22720587253570557, 0.09066355228424072, 0.7487815618515015, 0.057484328746795654, 0.36644446849823, 0.20427799224853516, 0.9660889506340027, 0.6016058921813965, 0.6132864356040955, 0.4133979082107544, 0.08900022506713867, 0.9371046423912048, 0.9922358393669128, 0.6698265075683594, 0.4519212245941162, 0.362360417842865], [0.4996471405029297, 0.382002055644989, 0.3658057451248169, 0.8777132630348206, 0.6187965869903564, 0.2893199324607849, 0.8283705711364746, 0.9648009538650513, 0.9009922742843628, 0.44214892387390137, 0.3350129723548889, 0.857975423336029, 0.7301380038261414, 0.17443257570266724, 0.8017964363098145, 0.8916371464729309, 0.4580334424972534], [0.7857421040534973, 0.3932276964187622, 0.3201543092727661, 0.8968548774719238, 0.17354732751846313, 0.7091237902641296, 0.17284619808197021, 0.2359904646873474, 0.8385471701622009, 0.7154743075370789, 0.5188711881637573, 0.3247414827346802, 0.15278315544128418, 0.2939135432243347, 0.0012959837913513184, 0.3006959557533264, 0.538102924823761], [0.43947333097457886, 0.15117782354354858, 0.7001372575759888, 0.5626497268676758, 0.7818310260772705, 0.5215089321136475, 0.5760101675987244, 0.46153783798217773, 0.6778237819671631, 0.4753950834274292, 0.8192411661148071, 0.22872382402420044, 0.19531363248825073, 0.5945613384246826, 0.8216524720191956, 0.04731196165084839, 0.4637641906738281], [0.14891058206558228, 0.32222431898117065, 0.41136980056762695, 0.6344645619392395, 0.10860329866409302, 0.2442169189453125, 0.6805457472801208, 0.07797116041183472, 0.021668612957000732, 0.51417076587677, 0.8096492290496826, 0.10870146751403809, 0.1116136908531189, 0.8674108982086182, 0.6091106534004211, 0.11004364490509033, 0.9537084698677063], [0.14493006467819214, 0.2367781400680542, 0.40421295166015625, 0.3314027786254883, 0.7031576037406921, 0.2422010898590088, 0.5904998183250427, 0.6027251482009888, 0.6748478412628174, 0.5369578003883362, 0.04810631275177002, 0.9259272813796997, 0.7674301266670227, 0.2132701277732849, 0.6190695762634277, 0.974332332611084, 0.7127964496612549], [0.9548298716545105, 0.09474968910217285, 0.7851327657699585, 0.5943238139152527, 0.6546367406845093, 0.8320358991622925, 0.44547390937805176, 0.7565627098083496, 0.4381781816482544, 0.946230411529541, 0.28090572357177734, 0.07309865951538086, 0.39600884914398193, 0.9679449796676636, 0.7237302660942078, 0.08029508590698242, 0.2962292432785034], [0.2290690541267395, 0.48475325107574463, 0.00873422622680664, 0.7930895686149597, 0.7144860029220581, 0.961959719657898, 0.8130492568016052, 0.16282588243484497, 0.6582626700401306, 0.0037813782691955566, 0.09770786762237549, 0.6398034691810608, 0.5037364363670349, 0.10248041152954102, 0.3018972873687744, 0.18193453550338745, 0.859653115272522], [0.9614687561988831, 0.623091459274292, 0.740818440914154, 0.43761181831359863, 0.3082929849624634, 0.10111165046691895, 0.8024608492851257, 0.34103822708129883, 0.6122162938117981, 0.5878922343254089, 0.3864938020706177, 0.6942379474639893, 0.27843302488327026, 0.8643099665641785, 0.8485192060470581, 0.4739404320716858, 0.08165568113327026], [0.0004991888999938965, 0.013851702213287354, 0.7444589138031006, 0.07611465454101562, 0.9974496364593506, 0.9394932985305786, 0.44365394115448, 0.7048689126968384, 0.8834907412528992, 0.6462942957878113, 0.028968513011932373, 0.3935486674308777, 0.3108886480331421, 0.07428699731826782, 0.097706139087677, 0.2870270013809204, 0.47146040201187134], [0.32244592905044556, 0.9519271850585938, 0.8356948494911194, 0.6333507895469666, 0.5570440888404846, 0.7412854433059692, 0.5236271023750305, 0.7485655546188354, 0.8872883915901184, 0.026984214782714844, 0.8875949382781982, 0.3471880555152893, 0.791838526725769, 0.6559694409370422, 0.39683830738067627, 0.49451500177383423, 0.0011501908302307129], [0.0, 0.0, 0.0, 0.8442663550376892, 0.917860209941864, 0.8285359740257263, 0.8969294428825378, 2.1516356468200684, 2.272526502609253, 2.340888023376465, 1.1330058574676514, 3.3503894805908203, 4.3540239334106445, 1.3995554447174072, 2.5592732429504395, 2.337477922439575, 3.993701696395874]]\n","01/05 05:57:49 AM valid 000 6.014948e+00 4.687500 50.000000\n","01/05 05:57:49 AM valid (13.0, 5.366440315246582)\n","01/05 05:57:49 AM init ind [[0.7660074234008789, 0.20239901542663574, 0.7569805979728699, 0.3921145796775818, 0.024142146110534668, 0.6298639178276062, 0.7996384501457214, 0.6036757826805115, 0.6446564793586731, 0.5095762014389038, 0.7652829885482788, 0.15804749727249146, 0.6600325703620911, 0.3371186852455139, 0.6483001708984375, 0.8864856362342834, 0.14752990007400513], [0.2644306421279907, 0.7196962237358093, 0.7739771008491516, 0.04815930128097534, 0.08832532167434692, 0.6322412490844727, 0.4733942151069641, 0.1710529923439026, 0.4312029480934143, 0.2984223961830139, 0.7264231443405151, 0.3334183096885681, 0.5058302879333496, 0.303862988948822, 0.9645402431488037, 0.2902185320854187, 0.3361196517944336], [0.22170275449752808, 0.02115243673324585, 0.8720855712890625, 0.49199390411376953, 0.41206467151641846, 0.6420137286186218, 0.014674007892608643, 0.8182560205459595, 0.2728769779205322, 0.9711838364601135, 0.5415390729904175, 0.9607058167457581, 0.0330730676651001, 0.6206932663917542, 0.7339152097702026, 0.5846990942955017, 0.719366192817688], [0.2820112705230713, 0.9157731533050537, 0.8922207355499268, 0.5512101650238037, 0.3933389186859131, 0.8480501770973206, 0.7690370082855225, 0.4844697117805481, 0.13843977451324463, 0.818747878074646, 0.7288758158683777, 0.5693421959877014, 0.08197242021560669, 0.7485070824623108, 0.9123733043670654, 0.5183651447296143, 0.10159063339233398], [0.959545373916626, 0.669120192527771, 0.12384033203125, 0.5964359641075134, 0.5571518540382385, 0.727429211139679, 0.8359306454658508, 0.5280158519744873, 0.39326024055480957, 0.18337315320968628, 0.03523141145706177, 0.02318626642227173, 0.7419655919075012, 0.4198199510574341, 0.5647283792495728, 0.30399590730667114, 0.19674253463745117], [0.5229645371437073, 0.7744956612586975, 0.9287440776824951, 0.013487577438354492, 0.4058762192726135, 0.6377335786819458, 0.23849689960479736, 0.42011547088623047, 0.9236754179000854, 0.28620731830596924, 0.860539436340332, 0.1997334361076355, 0.13899952173233032, 0.512620747089386, 0.231719970703125, 0.34318047761917114, 0.9867227077484131], [0.30604225397109985, 0.9903291463851929, 0.013044655323028564, 0.07730132341384888, 0.4462592601776123, 0.1467493772506714, 0.8862480521202087, 0.02516031265258789, 0.9394893646240234, 0.6380940079689026, 0.8216293454170227, 0.7271490097045898, 0.3666018843650818, 0.3272593021392822, 0.29094409942626953, 0.9132408499717712, 0.567313551902771], [0.42166876792907715, 0.7511551976203918, 0.42153477668762207, 0.19453752040863037, 0.2019307017326355, 0.9673712253570557, 0.8094107508659363, 0.7596462965011597, 0.8004758954048157, 0.4951093792915344, 0.6490249633789062, 0.1992979645729065, 0.18868905305862427, 0.3306841254234314, 0.5590375065803528, 0.30952882766723633, 0.9994242191314697], [0.9794567227363586, 0.7758680582046509, 0.3429032564163208, 0.701144814491272, 0.7210677266120911, 0.29898935556411743, 0.5282478928565979, 0.9107560515403748, 0.788688063621521, 0.6051238179206848, 0.5845414996147156, 0.9448770880699158, 0.5392555594444275, 0.48168736696243286, 0.7826234698295593, 0.7732998728752136, 0.8671025037765503], [0.3112645149230957, 0.19253820180892944, 0.7224488258361816, 0.46532779932022095, 0.11625832319259644, 0.5683396458625793, 0.261224627494812, 0.12382370233535767, 0.8402014970779419, 0.23125922679901123, 0.20093077421188354, 0.820799708366394, 0.9777446985244751, 0.08850431442260742, 0.3390032649040222, 0.03583669662475586, 0.6412821412086487], [0.7050526738166809, 0.6050405502319336, 0.058489978313446045, 0.9351938962936401, 0.7201030254364014, 0.6091547012329102, 0.40369701385498047, 0.8389312028884888, 0.10362738370895386, 0.8102496862411499, 0.8130693435668945, 0.20323270559310913, 0.21556973457336426, 0.24843013286590576, 0.981429934501648, 0.058551788330078125, 0.49115097522735596], [0.8217601776123047, 0.1943967342376709, 0.2015516757965088, 0.26927804946899414, 0.21504783630371094, 0.6987874507904053, 0.3580417037010193, 0.8222336769104004, 0.29955941438674927, 0.3803730010986328, 0.11972135305404663, 0.24786818027496338, 0.9732957482337952, 0.5230196118354797, 0.45369428396224976, 0.48212146759033203, 0.05953705310821533], [0.39190346002578735, 0.22116506099700928, 0.36464494466781616, 0.8651847243309021, 0.00017255544662475586, 0.19845110177993774, 0.19163835048675537, 0.002062559127807617, 0.4295833110809326, 0.46434032917022705, 0.0647432804107666, 0.5519394874572754, 0.42798566818237305, 0.8539111018180847, 0.36375361680984497, 0.16146337985992432, 0.28341245651245117], [0.4402883052825928, 0.3302040696144104, 0.4583166241645813, 0.633536159992218, 0.7864222526550293, 0.21971940994262695, 0.7845303416252136, 0.7253565788269043, 0.29197025299072266, 0.8201868534088135, 0.6693181991577148, 0.35789424180984497, 0.4680023193359375, 0.7079523205757141, 0.8679312467575073, 0.3830561637878418, 0.6788893342018127], [0.013156533241271973, 0.9833303093910217, 0.14357882738113403, 0.6946233510971069, 0.2860458493232727, 0.7944783568382263, 0.2382514476776123, 0.3996019959449768, 0.6799774169921875, 0.6499659419059753, 0.2603626251220703, 0.47646796703338623, 0.716574490070343, 0.38497698307037354, 0.637339174747467, 0.3676418662071228, 0.4099982976913452], [0.7884051203727722, 0.9978893399238586, 0.5784626007080078, 0.7360454797744751, 0.3446747064590454, 0.730591893196106, 0.31594932079315186, 0.04598128795623779, 0.5694375038146973, 0.05617016553878784, 0.1218867301940918, 0.7777334451675415, 0.28836458921432495, 0.9108292460441589, 0.5392583608627319, 0.9934473633766174, 0.32749831676483154], [0.39635026454925537, 0.39461642503738403, 0.599405825138092, 0.06274926662445068, 0.910805344581604, 0.09081429243087769, 0.22395527362823486, 0.8941768407821655, 0.7505326867103577, 0.9975195527076721, 0.9525254964828491, 0.08992272615432739, 0.6506175398826599, 0.8757785558700562, 0.6695472598075867, 0.8756239414215088, 0.9424461126327515], [0.0, 0.0, 0.0, 0.9157731533050537, 0.792960524559021, 0.9422316551208496, 0.5366052389144897, 1.7853741645812988, 2.592352867126465, 1.0696463584899902, 2.67551326751709, 2.774043083190918, 1.3509914875030518, 2.139369487762451, 2.783348560333252, 2.724421501159668, 4.986443996429443]]\n","01/05 05:57:49 AM valid 000 6.058049e+00 3.125000 48.437500\n","01/05 05:57:50 AM valid (10.2, 5.299650741577149)\n","01/05 05:57:50 AM init ind [[0.17428714036941528, 0.6822665333747864, 0.3577435612678528, 0.47044920921325684, 0.11869591474533081, 0.25726819038391113, 0.4088590741157532, 0.6614571213722229, 0.0365140438079834, 0.49412500858306885, 0.25888216495513916, 0.08608877658843994, 0.058600783348083496, 0.3862597346305847, 0.8229331970214844, 0.6564540266990662, 0.6321902871131897], [0.4715734124183655, 0.07583796977996826, 0.714694082736969, 0.6909322738647461, 0.6137387156486511, 0.047608792781829834, 0.4953117370605469, 0.05076092481613159, 0.6183589100837708, 0.8841976523399353, 0.8961360454559326, 0.4750487804412842, 0.275232195854187, 0.7877764105796814, 0.48692142963409424, 0.4125291705131531, 0.5838799476623535], [0.874223530292511, 0.28590643405914307, 0.9972735643386841, 0.9154346585273743, 0.042316973209381104, 0.8170944452285767, 0.7286433577537537, 0.3167782425880432, 0.08593893051147461, 0.04972177743911743, 0.9034801721572876, 0.32831406593322754, 0.42802441120147705, 0.23712652921676636, 0.9806230664253235, 0.315165638923645, 0.3266393542289734], [0.8535332083702087, 0.698490560054779, 0.9700244069099426, 0.7189430594444275, 0.32154005765914917, 0.9789853096008301, 0.14576053619384766, 0.48895615339279175, 0.6027117371559143, 0.9807082414627075, 0.6565766930580139, 0.13295578956604004, 0.9276931881904602, 0.1047014594078064, 0.751032829284668, 0.7568711042404175, 0.8328669667243958], [0.4235866069793701, 0.13365262746810913, 0.2665053606033325, 0.12436985969543457, 0.43234527111053467, 0.11081135272979736, 0.770263135433197, 0.31553375720977783, 0.48909133672714233, 0.38557904958724976, 0.27866971492767334, 0.5796248912811279, 0.7153447866439819, 0.674105703830719, 0.8363587856292725, 0.9380241632461548, 0.751808762550354], [0.2033308744430542, 0.15213268995285034, 0.9971810579299927, 0.7488568425178528, 0.297427237033844, 0.7655305862426758, 0.07472091913223267, 0.3524572253227234, 0.8814346790313721, 0.5400041937828064, 0.7042208313941956, 0.3406771421432495, 0.7611634731292725, 0.6667214632034302, 0.8356542587280273, 0.3859604597091675, 0.5312427878379822], [0.9167804718017578, 0.18651235103607178, 0.5043607950210571, 0.6412094831466675, 0.7206292152404785, 0.6608859896659851, 0.8981229662895203, 0.13057827949523926, 0.6217683553695679, 0.264612078666687, 0.1408194899559021, 0.6774543523788452, 0.943202555179596, 0.4996758699417114, 0.8733334541320801, 0.9578997492790222, 0.9959138631820679], [0.7328232526779175, 0.434320330619812, 0.82803875207901, 0.45834165811538696, 0.9038379192352295, 0.577978253364563, 0.6327317953109741, 0.8406528234481812, 0.9632441401481628, 0.3238102197647095, 0.11288726329803467, 0.4809606075286865, 0.8168006539344788, 0.6013913750648499, 0.002569735050201416, 0.4629787802696228, 0.36595630645751953], [0.6484217643737793, 0.7699321508407593, 0.1161884069442749, 0.7286616563796997, 0.8793671727180481, 0.8409932255744934, 0.42549365758895874, 0.9049184918403625, 0.7019515037536621, 0.3601849675178528, 0.7858374714851379, 0.6546345353126526, 0.479414701461792, 0.38918739557266235, 0.09185975790023804, 0.6670393347740173, 0.5349264144897461], [0.28715431690216064, 0.4255779981613159, 0.3426896929740906, 0.1771031618118286, 0.957125186920166, 0.3781779408454895, 0.8413799405097961, 0.2607980966567993, 0.1962348222732544, 0.6954584717750549, 0.1132919192314148, 0.5901386141777039, 0.38833552598953247, 0.7470798492431641, 0.6433904767036438, 0.4360916018486023, 0.363261878490448], [0.2079397439956665, 0.7410696744918823, 0.06335794925689697, 0.8693488836288452, 0.23564153909683228, 0.6042541861534119, 0.9062747359275818, 0.22751611471176147, 0.5120140314102173, 0.1511487364768982, 0.8346981406211853, 0.0876162052154541, 0.0013297200202941895, 0.06746959686279297, 0.9487040042877197, 0.8077884912490845, 0.6077685952186584], [0.37673163414001465, 0.3837830424308777, 0.9729712605476379, 0.3480600118637085, 0.6764628887176514, 0.1986757516860962, 0.5636152625083923, 0.9083386063575745, 0.7018169164657593, 0.22658276557922363, 0.6157440543174744, 0.6439470052719116, 0.8363823294639587, 0.6643186807632446, 0.24023354053497314, 0.8309701085090637, 0.29184114933013916], [0.8317667841911316, 0.8721879720687866, 0.12405484914779663, 0.7590259313583374, 0.2163534164428711, 0.9198154211044312, 0.14492273330688477, 0.5897117853164673, 0.5972929000854492, 0.3528122901916504, 0.8166531324386597, 0.11918091773986816, 0.641011655330658, 0.1912403702735901, 0.24561089277267456, 0.475303590297699, 0.7227392792701721], [0.9410732388496399, 0.2788817882537842, 0.8429770469665527, 0.3731754422187805, 0.5421756505966187, 0.638399064540863, 0.4323161244392395, 0.9134316444396973, 0.8991362452507019, 0.4919920563697815, 0.5032209753990173, 0.35542041063308716, 0.6483342051506042, 0.6130791306495667, 0.8007420301437378, 0.3225807547569275, 0.4348354935646057], [0.19358932971954346, 0.35847800970077515, 0.009393930435180664, 0.2193828821182251, 0.5295277833938599, 0.5239641070365906, 0.5399723052978516, 0.6869961619377136, 0.31539398431777954, 0.4770379662513733, 0.35792332887649536, 0.5440278053283691, 0.782343864440918, 0.02309495210647583, 0.45057886838912964, 0.06655764579772949, 0.6605313420295715], [0.9462031126022339, 0.813216507434845, 0.5330772399902344, 0.9040568470954895, 0.6004724502563477, 0.5296532511711121, 0.8458678126335144, 0.18119752407073975, 0.7568682432174683, 0.847945511341095, 0.3619685769081116, 0.40734320878982544, 0.11087405681610107, 0.48810040950775146, 0.9902532696723938, 0.992447018623352, 0.9511236548423767], [0.42107540369033813, 0.5149469375610352, 0.23535948991775513, 0.052508771419525146, 0.18223756551742554, 0.8943735361099243, 0.09197533130645752, 0.37140482664108276, 0.8442516922950745, 0.911040186882019, 0.7801854014396667, 0.9763033390045166, 0.44550830125808716, 0.6485264301300049, 0.057233452796936035, 0.9188804030418396, 0.6624564528465271], [0.0, 0.0, 0.0, 0.698490560054779, 0.40015798807144165, 1.7460379600524902, 1.8661994934082031, 2.7681965827941895, 2.99070405960083, 2.437480926513672, 2.4857006072998047, 3.2754921913146973, 3.637561798095703, 2.249769687652588, 2.476726770401001, 2.973099946975708, 4.66304874420166]]\n","01/05 05:57:50 AM valid 000 5.691420e+00 6.250000 46.875000\n","01/05 05:57:51 AM valid (12.6, 5.078458812713623)\n","01/05 05:57:51 AM init ind [[0.4799899458885193, 0.11821937561035156, 0.7131065130233765, 0.5890854597091675, 0.17681211233139038, 0.35446375608444214, 0.4673572778701782, 0.0683407187461853, 0.2674926519393921, 0.5157029628753662, 0.7801294922828674, 0.2352581024169922, 0.7655717134475708, 0.837126612663269, 0.38302749395370483, 0.47573912143707275, 0.864727795124054], [0.6709367632865906, 0.8633714318275452, 0.035996198654174805, 0.30048447847366333, 0.309715211391449, 0.6687013506889343, 0.1632867455482483, 0.7874864935874939, 0.8823397159576416, 0.48942941427230835, 0.9326028823852539, 0.24845629930496216, 0.18598592281341553, 0.3163599371910095, 0.5185954570770264, 0.5564600825309753, 0.1252373456954956], [0.3785189390182495, 0.18301373720169067, 0.0710415244102478, 0.3733135461807251, 0.8233317136764526, 0.6396824717521667, 0.12326252460479736, 0.7653263807296753, 0.17166876792907715, 0.20363378524780273, 0.06804013252258301, 0.2619549632072449, 0.6971264481544495, 0.24102908372879028, 0.8947927355766296, 0.9338999390602112, 0.8960766196250916], [0.8414341807365417, 0.5026662349700928, 0.42834681272506714, 0.44108837842941284, 0.8937094211578369, 0.5485900640487671, 0.842803418636322, 0.5683577060699463, 0.1571679711341858, 0.36107337474823, 0.5641064047813416, 0.938546359539032, 0.71031653881073, 0.10106086730957031, 0.30034101009368896, 0.11832237243652344, 0.16100656986236572], [0.9425761103630066, 0.9131414294242859, 0.06306087970733643, 0.86698979139328, 0.7695093154907227, 0.8368993997573853, 0.727973222732544, 0.16516834497451782, 0.06673234701156616, 0.7805200815200806, 0.20062774419784546, 0.286357045173645, 0.04503268003463745, 0.8479964137077332, 0.33258509635925293, 0.5719112157821655, 0.2572401165962219], [0.6264251470565796, 0.33698612451553345, 0.19898110628128052, 0.04922688007354736, 0.7095048427581787, 0.43857288360595703, 0.6898458003997803, 0.4546326994895935, 0.9567214250564575, 0.13090533018112183, 0.9869914054870605, 0.9314523935317993, 0.5707836151123047, 0.393382728099823, 0.2763991951942444, 0.9431287050247192, 0.4862629175186157], [0.44756507873535156, 0.9097614884376526, 0.9471061825752258, 0.4988399147987366, 0.035706937313079834, 0.33244460821151733, 0.30317753553390503, 0.06379753351211548, 0.8799505829811096, 0.9304671883583069, 0.11869919300079346, 0.18399876356124878, 0.6699433326721191, 0.4373021125793457, 0.7151666283607483, 0.6991416215896606, 0.6990299224853516], [0.9569224119186401, 0.8654729127883911, 0.8683597445487976, 0.7048906087875366, 0.9015619158744812, 0.14894461631774902, 0.8777456283569336, 0.016263484954833984, 0.39978277683258057, 0.5263445973396301, 0.6980481743812561, 0.9712963104248047, 0.0018576979637145996, 0.02211076021194458, 0.8741480708122253, 0.8591505885124207, 0.8386897444725037], [0.24707388877868652, 0.7880527973175049, 0.9009747505187988, 0.5800544619560242, 0.09464830160140991, 0.2614143490791321, 0.10149377584457397, 0.6514775156974792, 0.7957140803337097, 0.3588118553161621, 0.05740368366241455, 0.5250987410545349, 0.9587211608886719, 0.8262698650360107, 0.34458112716674805, 0.7872790694236755, 0.9156575798988342], [0.3654121160507202, 0.1519404649734497, 0.8407697677612305, 0.20097458362579346, 0.5302267670631409, 0.17434072494506836, 0.45597171783447266, 0.5979031920433044, 0.9617034196853638, 0.3972468972206116, 0.0924634337425232, 0.5599638223648071, 0.6624367237091064, 0.538386881351471, 0.017928659915924072, 0.321294367313385, 0.42594248056411743], [0.904364287853241, 0.29081064462661743, 0.7532703280448914, 0.5344734191894531, 0.23153561353683472, 0.5298540592193604, 0.6704360842704773, 0.7235996127128601, 0.5209020376205444, 0.7529368996620178, 0.1296830177307129, 0.6498292088508606, 0.23233956098556519, 0.19460171461105347, 0.5322181582450867, 0.40090662240982056, 0.4354891777038574], [0.6097006797790527, 0.9624279737472534, 0.3236040472984314, 0.8617940545082092, 0.07122218608856201, 0.9789139032363892, 0.3407984972000122, 0.23775088787078857, 0.4735007882118225, 0.06588345766067505, 0.8121159672737122, 0.15573465824127197, 0.6584799885749817, 0.5891060829162598, 0.11716979742050171, 0.4886366128921509, 0.18026894330978394], [0.05335497856140137, 0.4897781014442444, 0.2186848521232605, 0.9089740514755249, 0.7170572876930237, 0.9744836688041687, 0.3133279085159302, 0.3707231283187866, 0.5896888971328735, 0.3976985216140747, 0.9879810214042664, 0.48781222105026245, 0.9897953271865845, 0.4893144369125366, 0.3138458728790283, 0.39105796813964844, 0.06586021184921265], [0.9970541000366211, 0.48161977529525757, 0.4328967332839966, 0.5331630110740662, 0.12725311517715454, 0.9555371999740601, 0.7788861989974976, 0.3203960061073303, 0.6030934453010559, 0.5336334705352783, 0.06796622276306152, 0.49105578660964966, 0.028044164180755615, 0.7137972116470337, 0.5855305790901184, 0.9172030091285706, 0.37979912757873535], [0.6070602536201477, 0.3961034417152405, 0.49878400564193726, 0.00019025802612304688, 0.2484046220779419, 0.538515031337738, 0.1866704821586609, 0.7619518041610718, 0.028155028820037842, 0.43876492977142334, 0.2333587408065796, 0.2583197355270386, 0.5409349203109741, 0.5348483920097351, 0.9483426809310913, 0.1118161678314209, 0.6214910745620728], [0.7205770611763, 0.13717079162597656, 0.5143048167228699, 0.401004433631897, 0.8009282946586609, 0.01349252462387085, 0.18208074569702148, 0.23738723993301392, 0.590590238571167, 0.4165085554122925, 0.5208110809326172, 0.184770405292511, 0.9413868188858032, 0.5624404549598694, 0.24195832014083862, 0.36325132846832275, 0.9600213170051575], [0.29288792610168457, 0.8670756220817566, 0.7452365159988403, 0.6097362041473389, 0.1330016851425171, 0.33601921796798706, 0.3530595302581787, 0.7844768762588501, 0.7611309289932251, 0.2905770540237427, 0.44635558128356934, 0.9910634160041809, 0.7161503434181213, 0.3951296806335449, 0.7007777094841003, 0.9629302024841309, 0.6607041358947754], [0.0, 0.0, 0.0, 0.5026662349700928, 0.9762023091316223, 0.24820798635482788, 1.4816529750823975, 2.6237568855285645, 1.9385857582092285, 1.7584424018859863, 2.6763274669647217, 2.168069839477539, 4.350960731506348, 1.6957488059997559, 1.4995334148406982, 3.21650767326355, 4.30118465423584]]\n","01/05 05:57:51 AM valid 000 5.340672e+00 7.812500 42.187500\n","01/05 05:57:51 AM valid (12.7, 4.7726949691772464)\n","01/05 05:57:51 AM generation 0\n","01/05 05:57:52 AM train 000 2.540191e+00 12.500000 54.687500\n","01/05 05:58:06 AM train 100 1.810805e+00 35.380569 82.023515\n","01/05 05:58:19 AM train weight (42.928, 1.5864132348442077)\n","01/05 05:58:19 AM train 000 1.397567e+00 46.875000 93.750000\n","01/05 05:58:48 AM train (52.66, 1.314025859642029)\n","01/05 05:58:48 AM train 000 1.358285e+00 46.875000 93.750000\n","01/05 05:59:17 AM train (49.76, 1.4115613628387451)\n","01/05 05:59:17 AM train 000 1.295848e+00 50.000000 96.875000\n","01/05 05:59:46 AM train (51.38, 1.3883293235778809)\n","01/05 05:59:47 AM train 000 1.436628e+00 50.000000 90.625000\n","01/05 06:00:15 AM train (52.68, 1.3113832560539245)\n","01/05 06:00:15 AM train 000 1.277089e+00 53.125000 96.875000\n","01/05 06:00:44 AM train (51.48, 1.352086340522766)\n","01/05 06:00:44 AM train 000 1.653817e+00 50.000000 92.187500\n","01/05 06:01:13 AM train (52.5, 1.3247514711380004)\n","01/05 06:01:13 AM train 000 1.417989e+00 48.437500 95.312500\n","01/05 06:01:42 AM train (51.38, 1.358519272994995)\n","01/05 06:01:42 AM train 000 1.308061e+00 48.437500 96.875000\n","01/05 06:02:11 AM train (52.7, 1.3239960845947265)\n","01/05 06:02:11 AM train 000 1.342581e+00 54.687500 92.187500\n","01/05 06:02:40 AM train (49.6, 1.399768063735962)\n","01/05 06:02:41 AM train 000 1.328629e+00 53.125000 95.312500\n","01/05 06:03:09 AM train (50.7, 1.3746807788848876)\n","01/05 06:03:09 AM train 000 1.301054e+00 57.812500 92.187500\n","01/05 06:03:38 AM train (52.0, 1.3484218887329102)\n","01/05 06:03:39 AM train 000 1.452255e+00 48.437500 89.062500\n","01/05 06:04:07 AM train (52.48, 1.3381381282806397)\n","01/05 06:04:08 AM train 000 1.258219e+00 51.562500 95.312500\n","01/05 06:04:37 AM train (51.46, 1.3569538133621215)\n","01/05 06:04:37 AM train 000 1.586593e+00 43.750000 89.062500\n","01/05 06:05:06 AM train (53.06, 1.3344601699829102)\n","01/05 06:05:06 AM train 000 1.385023e+00 50.000000 92.187500\n","01/05 06:05:35 AM train (51.04, 1.3476043763160706)\n","01/05 06:05:35 AM train 000 1.000420e+00 65.625000 96.875000\n","01/05 06:06:04 AM train (52.76, 1.3341308471679687)\n","01/05 06:06:04 AM train 000 1.563926e+00 50.000000 87.500000\n","01/05 06:06:33 AM train (52.38, 1.3328630115509033)\n","01/05 06:06:34 AM train 000 1.254229e+00 54.687500 92.187500\n","01/05 06:07:02 AM train (51.56, 1.3627770860671997)\n","01/05 06:07:02 AM train 000 1.316037e+00 42.187500 95.312500\n","01/05 06:07:31 AM train (50.16, 1.3944744636535644)\n","01/05 06:07:32 AM train 000 1.462191e+00 53.125000 92.187500\n","01/05 06:08:00 AM train (50.7, 1.3743151239395142)\n","01/05 06:08:01 AM train 000 1.227975e+00 59.375000 92.187500\n","01/05 06:08:29 AM train (51.88, 1.3301874536514282)\n","01/05 06:08:30 AM valid 000 1.483414e+00 50.000000 92.187500\n","01/05 06:08:30 AM valid (48.8, 1.447247688293457)\n","01/05 06:08:30 AM valid 000 2.303948e+00 18.750000 78.125000\n","01/05 06:08:31 AM valid (28.6, 2.192872247695923)\n","01/05 06:08:31 AM valid 000 2.390489e+00 15.625000 78.125000\n","01/05 06:08:32 AM valid (19.8, 2.3655501861572263)\n","01/05 06:08:32 AM valid 000 1.412781e+00 48.437500 98.437500\n","01/05 06:08:33 AM valid (53.1, 1.2925548105239868)\n","01/05 06:08:33 AM valid 000 2.581612e+00 12.500000 81.250000\n","01/05 06:08:33 AM valid (16.5, 2.47090749168396)\n","01/05 06:08:34 AM valid 000 1.504198e+00 46.875000 89.062500\n","01/05 06:08:34 AM valid (50.7, 1.3107842769622802)\n","01/05 06:08:34 AM valid 000 1.592016e+00 37.500000 92.187500\n","01/05 06:08:35 AM valid (46.3, 1.5565387830734252)\n","01/05 06:08:35 AM valid 000 1.721355e+00 35.937500 87.500000\n","01/05 06:08:36 AM valid (44.6, 1.5772169733047485)\n","01/05 06:08:36 AM valid 000 1.897894e+00 31.250000 81.250000\n","01/05 06:08:37 AM valid (37.4, 1.8333668727874757)\n","01/05 06:08:37 AM valid 000 2.042840e+00 23.437500 84.375000\n","01/05 06:08:37 AM valid (32.0, 1.9339232873916625)\n","01/05 06:08:38 AM valid 000 1.866303e+00 31.250000 82.812500\n","01/05 06:08:38 AM valid (38.5, 1.8157557134628295)\n","01/05 06:08:38 AM valid 000 2.019289e+00 25.000000 85.937500\n","01/05 06:08:39 AM valid (32.5, 1.9290434284210205)\n","01/05 06:08:39 AM valid 000 1.980407e+00 25.000000 85.937500\n","01/05 06:08:40 AM valid (30.9, 1.9169809932708741)\n","01/05 06:08:40 AM valid 000 1.977753e+00 23.437500 87.500000\n","01/05 06:08:40 AM valid (32.4, 1.925890694618225)\n","01/05 06:08:41 AM valid 000 2.581612e+00 12.500000 81.250000\n","01/05 06:08:41 AM valid (16.5, 2.47090749168396)\n","01/05 06:08:41 AM valid 000 1.504198e+00 46.875000 89.062500\n","01/05 06:08:42 AM valid (50.7, 1.3107842769622802)\n","01/05 06:08:42 AM valid 000 1.896802e+00 31.250000 84.375000\n","01/05 06:08:43 AM valid (37.6, 1.7980194101333618)\n","01/05 06:08:43 AM valid 000 1.549278e+00 45.312500 89.062500\n","01/05 06:08:44 AM valid (48.6, 1.4720617713928223)\n","01/05 06:08:44 AM valid 000 1.632362e+00 43.750000 87.500000\n","01/05 06:08:44 AM valid (44.1, 1.568911774635315)\n","01/05 06:08:45 AM valid 000 2.385240e+00 14.062500 81.250000\n","01/05 06:08:45 AM valid (22.8, 2.269590482711792)\n","01/05 06:08:45 AM valid 000 1.389301e+00 43.750000 95.312500\n","01/05 06:08:46 AM valid (55.1, 1.2298462619781494)\n","{'avg': 1.6863488160133362, 'std': 0.39133457694881923, 'min': 1.2298462619781494, 'max': 2.47090749168396}\n","01/05 06:08:47 AM {'test': (55.1, 1.2298462619781494), 'train': (51.88, 1.3301874536514282), 'edge': 9}\n","01/05 06:08:48 AM {'test': (50.7, 1.3107842769622802), 'train': (52.5, 1.3247514711380004), 'edge': 7}\n","01/05 06:08:48 AM {'test': (28.6, 2.192872247695923), 'train': (49.76, 1.4115613628387451), 'edge': 14}\n","01/05 06:08:49 AM {'test': (48.8, 1.447247688293457), 'train': (52.66, 1.314025859642029), 'edge': 8}\n","01/05 06:08:50 AM {'test': (44.6, 1.5772169733047485), 'train': (52.7, 1.3239960845947265), 'edge': 7}\n","01/05 06:08:51 AM {'test': (46.3, 1.5565387830734252), 'train': (51.38, 1.358519272994995), 'edge': 5}\n","01/05 06:08:51 AM {'test': (32.0, 1.9339232873916625), 'train': (50.7, 1.3746807788848876), 'edge': 8}\n","01/05 06:08:52 AM {'test': (37.4, 1.8333668727874757), 'train': (49.6, 1.399768063735962), 'edge': 15}\n","01/05 06:08:53 AM {'test': (16.5, 2.47090749168396), 'train': (51.48, 1.352086340522766), 'edge': 10}\n","01/05 06:08:54 AM {'test': (50.7, 1.3107842769622802), 'train': (52.5, 1.3247514711380004), 'edge': 7}\n","01/05 06:08:54 AM generation 1\n","01/05 06:08:54 AM train 000 1.131033e+00 60.937500 96.875000\n","01/05 06:09:08 AM train 100 1.142941e+00 59.081064 96.086015\n","01/05 06:09:21 AM train weight (60.08, 1.11991192237854)\n","01/05 06:09:22 AM train 000 1.039535e+00 59.375000 96.875000\n","01/05 06:09:51 AM train (58.64, 1.1790344891548157)\n","01/05 06:09:51 AM train 000 1.201902e+00 59.375000 92.187500\n","01/05 06:10:20 AM train (59.34, 1.1653340892791748)\n","01/05 06:10:21 AM train 000 1.557161e+00 53.125000 90.625000\n","01/05 06:10:50 AM train (51.12, 1.43396920337677)\n","01/05 06:10:50 AM train 000 1.356958e+00 51.562500 92.187500\n","01/05 06:11:19 AM train (58.62, 1.1677914896011352)\n","01/05 06:11:20 AM train 000 1.313076e+00 54.687500 93.750000\n","01/05 06:11:49 AM train (55.72, 1.2800315136909486)\n","01/05 06:11:49 AM train 000 1.133527e+00 67.187500 95.312500\n","01/05 06:12:18 AM train (58.16, 1.224752511024475)\n","01/05 06:12:19 AM train 000 1.103488e+00 64.062500 98.437500\n","01/05 06:12:47 AM train (56.18, 1.2719104640960692)\n","01/05 06:12:48 AM train 000 1.129695e+00 60.937500 96.875000\n","01/05 06:13:17 AM train (55.14, 1.2885453371047975)\n","01/05 06:13:17 AM train 000 1.137748e+00 54.687500 98.437500\n","01/05 06:13:46 AM train (55.78, 1.2519340908050538)\n","01/05 06:13:46 AM train 000 1.217389e+00 54.687500 95.312500\n","01/05 06:14:15 AM train (59.56, 1.1688089237213135)\n","01/05 06:14:16 AM train 000 1.216828e+00 53.125000 95.312500\n","01/05 06:14:45 AM train (59.76, 1.167354205608368)\n","01/05 06:14:45 AM train 000 1.007049e+00 67.187500 98.437500\n","01/05 06:15:14 AM train (59.38, 1.1444039636611938)\n","01/05 06:15:14 AM train 000 1.568954e+00 43.750000 90.625000\n","01/05 06:15:43 AM train (53.3, 1.3997362174987793)\n","01/05 06:15:44 AM train 000 1.289258e+00 54.687500 90.625000\n","01/05 06:16:13 AM train (59.26, 1.140317015838623)\n","01/05 06:16:13 AM train 000 1.284407e+00 54.687500 92.187500\n","01/05 06:16:42 AM train (56.06, 1.2664716621398926)\n","01/05 06:16:42 AM train 000 1.217787e+00 60.937500 98.437500\n","01/05 06:17:11 AM train (58.08, 1.2306753587722778)\n","01/05 06:17:12 AM train 000 1.557807e+00 51.562500 87.500000\n"],"name":"stdout"},{"output_type":"stream","text":["Traceback (most recent call last):\n"],"name":"stderr"},{"output_type":"stream","text":["01/05 06:17:40 AM train (55.9, 1.2824348880767822)\n","01/05 06:17:41 AM train 000 1.427845e+00 54.687500 92.187500\n","01/05 06:18:10 AM train (54.8, 1.3014214195251466)\n","01/05 06:18:10 AM train 000 1.376422e+00 57.812500 92.187500\n","01/05 06:18:39 AM train (57.92, 1.2073879776000978)\n","01/05 06:18:39 AM train 000 1.238804e+00 57.812500 93.750000\n","01/05 06:19:08 AM train (56.86, 1.22701089553833)\n","01/05 06:19:09 AM train 000 1.104055e+00 60.937500 96.875000\n","01/05 06:19:38 AM train (58.58, 1.169391388130188)\n","01/05 06:19:38 AM valid 000 1.210115e+00 59.375000 93.750000\n","01/05 06:19:38 AM valid (63.9, 1.050375226020813)\n","01/05 06:19:39 AM valid 000 1.178202e+00 62.500000 95.312500\n","01/05 06:19:39 AM valid (64.4, 1.0058057017326354)\n","01/05 06:19:39 AM valid 000 3.490910e+00 17.187500 76.562500\n","01/05 06:19:40 AM valid (17.6, 3.5959290008544924)\n","01/05 06:19:40 AM valid 000 1.470024e+00 53.125000 90.625000\n","01/05 06:19:41 AM valid (50.1, 1.4144800729751588)\n","01/05 06:19:41 AM valid 000 2.383609e+00 35.937500 87.500000\n","01/05 06:19:42 AM valid (33.4, 2.2518280048370363)\n","01/05 06:19:42 AM valid 000 1.963369e+00 40.625000 87.500000\n","01/05 06:19:43 AM valid (36.6, 1.9982470407485962)\n","01/05 06:19:43 AM valid 000 2.688946e+00 18.750000 85.937500\n","01/05 06:19:43 AM valid (23.4, 2.6450632514953614)\n","01/05 06:19:44 AM valid 000 2.402660e+00 29.687500 82.812500\n","01/05 06:19:44 AM valid (26.5, 2.5391856479644774)\n","01/05 06:19:44 AM valid 000 3.598748e+00 7.812500 75.000000\n","01/05 06:19:45 AM valid (11.4, 3.668109666824341)\n","01/05 06:19:45 AM valid 000 1.182417e+00 57.812500 96.875000\n","01/05 06:19:46 AM valid (62.9, 1.0161816291809083)\n","01/05 06:19:46 AM valid 000 1.198454e+00 62.500000 92.187500\n","01/05 06:19:47 AM valid (61.6, 1.0722384805679321)\n","01/05 06:19:47 AM valid 000 1.204072e+00 59.375000 96.875000\n","01/05 06:19:48 AM valid (64.7, 0.9977268028259277)\n","01/05 06:19:48 AM valid 000 3.320232e+00 17.187500 78.125000\n","01/05 06:19:48 AM valid (19.7, 3.3734386291503906)\n","01/05 06:19:49 AM valid 000 1.377302e+00 54.687500 90.625000\n","01/05 06:19:49 AM valid (54.7, 1.3040529184341432)\n","01/05 06:19:49 AM valid 000 2.095422e+00 42.187500 87.500000\n","01/05 06:19:50 AM valid (40.4, 1.9548419561386108)\n","01/05 06:19:50 AM valid 000 1.983110e+00 42.187500 87.500000\n","01/05 06:19:51 AM valid (35.9, 2.032455397605896)\n","01/05 06:19:51 AM valid 000 2.688946e+00 18.750000 85.937500\n","01/05 06:19:52 AM valid (23.4, 2.6450632514953614)\n","01/05 06:19:52 AM valid 000 2.402660e+00 29.687500 82.812500\n","01/05 06:19:52 AM valid (26.5, 2.5391856479644774)\n","01/05 06:19:53 AM valid 000 1.361314e+00 57.812500 95.312500\n","01/05 06:19:53 AM valid (54.7, 1.2559132900238037)\n","01/05 06:19:53 AM valid 000 2.986281e+00 17.187500 81.250000\n","01/05 06:19:54 AM valid (16.9, 3.083737012863159)\n","01/05 06:19:54 AM valid 000 1.210115e+00 59.375000 93.750000\n","01/05 06:19:55 AM valid (63.9, 1.050375226020813)\n","{'avg': 1.8478969292640683, 'std': 0.7584552261857647, 'min': 0.9977268028259277, 'max': 3.3734386291503906}\n","01/05 06:19:56 AM {'test': (64.7, 0.9977268028259277), 'train': (59.38, 1.1444039636611938), 'edge': 6}\n","01/05 06:19:56 AM {'test': (61.6, 1.0722384805679321), 'train': (59.76, 1.167354205608368), 'edge': 7}\n","01/05 06:19:57 AM {'test': (54.7, 1.3040529184341432), 'train': (59.26, 1.140317015838623), 'edge': 9}\n","01/05 06:19:58 AM {'test': (35.9, 2.032455397605896), 'train': (58.08, 1.2306753587722778), 'edge': 9}\n","01/05 06:19:59 AM {'test': (40.4, 1.9548419561386108), 'train': (56.06, 1.2664716621398926), 'edge': 7}\n","01/05 06:19:59 AM {'test': (19.7, 3.3734386291503906), 'train': (53.3, 1.3997362174987793), 'edge': 14}\n","01/05 06:20:00 AM {'test': (54.7, 1.2559132900238037), 'train': (57.92, 1.2073879776000978), 'edge': 9}\n","01/05 06:20:01 AM {'test': (23.4, 2.6450632514953614), 'train': (56.18, 1.2719104640960692), 'edge': 8}\n","01/05 06:20:02 AM {'test': (26.5, 2.5391856479644774), 'train': (55.14, 1.2885453371047975), 'edge': 15}\n","01/05 06:20:03 AM {'test': (54.7, 1.3040529184341432), 'train': (59.26, 1.140317015838623), 'edge': 9}\n","01/05 06:20:03 AM generation 2\n","01/05 06:20:03 AM train 000 1.356958e+00 54.687500 87.500000\n","01/05 06:20:17 AM train 100 9.893950e-01 64.866955 96.859530\n","01/05 06:20:31 AM train weight (65.76, 0.973862564125061)\n","01/05 06:20:31 AM train 000 1.051183e+00 71.875000 95.312500\n","01/05 06:21:00 AM train (65.08, 1.0146607847213744)\n","01/05 06:21:00 AM train 000 1.268704e+00 59.375000 95.312500\n","01/05 06:21:30 AM train (63.92, 1.0260122868061066)\n","01/05 06:21:30 AM train 000 8.475617e-01 64.062500 98.437500\n","01/05 06:21:59 AM train (64.08, 1.0320165113449096)\n","01/05 06:22:00 AM train 000 1.255780e+00 56.250000 95.312500\n","01/05 06:22:29 AM train (62.6, 1.0872326711654663)\n","01/05 06:22:30 AM train 000 1.036602e+00 64.062500 96.875000\n","01/05 06:22:59 AM train (63.98, 1.036423819732666)\n","01/05 06:22:59 AM train 000 1.236129e+00 51.562500 100.000000\n","01/05 06:23:28 AM train (60.52, 1.1526943565368653)\n","01/05 06:23:29 AM train 000 1.085354e+00 70.312500 93.750000\n","01/05 06:23:58 AM train (62.8, 1.052672485256195)\n","01/05 06:23:59 AM train 000 1.133410e+00 62.500000 96.875000\n","01/05 06:24:27 AM train (62.62, 1.0960653356552124)\n","01/05 06:24:28 AM train 000 1.000850e+00 62.500000 96.875000\n","01/05 06:24:57 AM train (61.14, 1.124901943206787)\n","01/05 06:24:57 AM train 000 1.033097e+00 64.062500 98.437500\n","01/05 06:25:26 AM train (64.48, 1.0185745686531067)\n","01/05 06:25:27 AM train 000 6.739973e-01 76.562500 98.437500\n"],"name":"stdout"},{"output_type":"stream","text":["Traceback (most recent call last):\n","  File \"/usr/lib/python3.6/multiprocessing/queues.py\", line 240, in _feed\n","    send_bytes(obj)\n"],"name":"stderr"},{"output_type":"stream","text":["01/05 06:25:56 AM train (63.84, 1.0161320360183717)\n","01/05 06:25:57 AM train 000 8.592997e-01 65.625000 100.000000\n","01/05 06:26:26 AM train (63.5, 1.0414611415863038)\n","01/05 06:26:26 AM train 000 9.351344e-01 64.062500 100.000000\n","01/05 06:26:55 AM train (63.92, 1.0344364903450012)\n","01/05 06:26:56 AM train 000 1.497361e+00 56.250000 92.187500\n"],"name":"stdout"},{"output_type":"stream","text":["Traceback (most recent call last):\n","  File \"/usr/lib/python3.6/multiprocessing/queues.py\", line 240, in _feed\n","    send_bytes(obj)\n"],"name":"stderr"},{"output_type":"stream","text":["01/05 06:27:25 AM train (62.84, 1.0708339349746705)\n","01/05 06:27:25 AM train 000 1.282476e+00 59.375000 95.312500\n"],"name":"stdout"},{"output_type":"stream","text":["Traceback (most recent call last):\n"],"name":"stderr"},{"output_type":"stream","text":["01/05 06:27:54 AM train (63.64, 1.0553011474609375)\n","01/05 06:27:55 AM train 000 1.060568e+00 64.062500 95.312500\n","01/05 06:28:24 AM train (60.78, 1.1361788671493531)\n","01/05 06:28:25 AM train 000 1.285800e+00 56.250000 95.312500\n","01/05 06:28:54 AM train (64.22, 1.0347460056304931)\n","01/05 06:28:54 AM train 000 9.576578e-01 65.625000 96.875000\n","01/05 06:29:23 AM train (64.06, 1.0403296697616577)\n","01/05 06:29:24 AM train 000 1.021662e+00 64.062500 95.312500\n","01/05 06:29:52 AM train (63.86, 1.0373627925872804)\n","01/05 06:29:53 AM train 000 9.141288e-01 64.062500 100.000000\n","01/05 06:30:22 AM train (61.7, 1.0923827365875245)\n","01/05 06:30:22 AM train 000 9.508247e-01 62.500000 95.312500\n","01/05 06:30:51 AM train (64.54, 1.0183664276123048)\n","01/05 06:30:52 AM valid 000 1.056196e+00 73.437500 96.875000\n","01/05 06:30:52 AM valid (66.7, 0.9259905729293824)\n","01/05 06:30:52 AM valid 000 1.059896e+00 64.062500 96.875000\n","01/05 06:30:53 AM valid (63.5, 1.0039574556350708)\n","01/05 06:30:53 AM valid 000 1.263879e+00 59.375000 95.312500\n","01/05 06:30:54 AM valid (53.7, 1.3286158990859986)\n","01/05 06:30:54 AM valid 000 1.795503e+00 50.000000 81.250000\n","01/05 06:30:55 AM valid (42.0, 2.0467069053649904)\n","01/05 06:30:55 AM valid 000 1.901420e+00 50.000000 82.812500\n","01/05 06:30:55 AM valid (44.8, 1.9223427047729493)\n","01/05 06:30:55 AM valid 000 2.521879e+00 42.187500 70.312500\n","01/05 06:30:56 AM valid (36.4, 2.7663469200134276)\n","01/05 06:30:56 AM valid 000 1.259774e+00 64.062500 96.875000\n","01/05 06:30:57 AM valid (55.6, 1.2755776844024658)\n","01/05 06:30:57 AM valid 000 2.223892e+00 43.750000 75.000000\n","01/05 06:30:58 AM valid (39.1, 2.3601040534973143)\n","01/05 06:30:58 AM valid 000 2.079125e+00 45.312500 76.562500\n","01/05 06:30:58 AM valid (39.4, 2.3815180320739744)\n","01/05 06:30:59 AM valid 000 1.263879e+00 59.375000 95.312500\n","01/05 06:30:59 AM valid (53.7, 1.3286158990859986)\n","01/05 06:31:00 AM valid 000 1.136174e+00 65.625000 96.875000\n","01/05 06:31:00 AM valid (62.0, 1.0610935440063476)\n","01/05 06:31:00 AM valid 000 1.036002e+00 68.750000 96.875000\n","01/05 06:31:01 AM valid (65.8, 0.9580332536697388)\n","01/05 06:31:01 AM valid 000 1.282216e+00 57.812500 92.187500\n","01/05 06:31:02 AM valid (56.2, 1.2729100894927978)\n","01/05 06:31:02 AM valid 000 1.968511e+00 45.312500 79.687500\n","01/05 06:31:03 AM valid (39.6, 2.307856559753418)\n","01/05 06:31:03 AM valid 000 1.901420e+00 50.000000 82.812500\n","01/05 06:31:03 AM valid (44.8, 1.9223427047729493)\n","01/05 06:31:04 AM valid 000 2.521879e+00 42.187500 70.312500\n","01/05 06:31:04 AM valid (36.4, 2.7663469200134276)\n","01/05 06:31:04 AM valid 000 1.442529e+00 59.375000 92.187500\n","01/05 06:31:05 AM valid (53.2, 1.3972985668182374)\n","01/05 06:31:05 AM valid 000 1.646715e+00 48.437500 85.937500\n","01/05 06:31:06 AM valid (47.9, 1.702169249534607)\n","01/05 06:31:06 AM valid 000 2.235729e+00 40.625000 70.312500\n","01/05 06:31:07 AM valid (37.3, 2.5542261257171632)\n","01/05 06:31:07 AM valid 000 1.298728e+00 60.937500 92.187500\n","01/05 06:31:07 AM valid (57.7, 1.2088436222076415)\n","01/05 06:31:08 AM valid 000 1.056196e+00 73.437500 96.875000\n","01/05 06:31:08 AM valid (66.7, 0.9259905729293824)\n","{'avg': 1.7782802865982057, 'std': 0.5824552286193027, 'min': 0.9259905729293824, 'max': 2.7663469200134276}\n","01/05 06:31:09 AM {'test': (66.7, 0.9259905729293824), 'train': (65.08, 1.0146607847213744), 'edge': 6}\n","01/05 06:31:10 AM {'test': (63.5, 1.0039574556350708), 'train': (63.92, 1.0260122868061066), 'edge': 7}\n","01/05 06:31:10 AM {'test': (53.2, 1.3972985668182374), 'train': (64.22, 1.0347460056304931), 'edge': 9}\n","01/05 06:31:11 AM {'test': (53.7, 1.3286158990859986), 'train': (64.08, 1.0320165113449096), 'edge': 9}\n","01/05 06:31:12 AM {'test': (36.4, 2.7663469200134276), 'train': (60.52, 1.1526943565368653), 'edge': 14}\n","01/05 06:31:13 AM {'test': (47.9, 1.702169249534607), 'train': (64.06, 1.0403296697616577), 'edge': 8}\n","01/05 06:31:14 AM {'test': (39.6, 2.307856559753418), 'train': (62.84, 1.0708339349746705), 'edge': 7}\n","01/05 06:31:14 AM {'test': (44.8, 1.9223427047729493), 'train': (63.98, 1.036423819732666), 'edge': 7}\n","01/05 06:31:15 AM {'test': (39.4, 2.3815180320739744), 'train': (61.14, 1.124901943206787), 'edge': 15}\n","01/05 06:31:16 AM {'test': (42.0, 2.0467069053649904), 'train': (62.6, 1.0872326711654663), 'edge': 9}\n","01/05 06:31:16 AM generation 3\n","01/05 06:31:17 AM train 000 8.419065e-01 73.437500 98.437500\n","01/05 06:31:30 AM train 100 8.785514e-01 69.136757 97.478342\n","01/05 06:31:44 AM train weight (69.392, 0.8673281689834594)\n","01/05 06:31:44 AM train 000 7.005507e-01 78.125000 98.437500\n","01/05 06:32:13 AM train (67.64, 0.9399322200775146)\n","01/05 06:32:14 AM train 000 1.055004e+00 60.937500 98.437500\n","01/05 06:32:43 AM train (67.72, 0.9317984128952026)\n","01/05 06:32:43 AM train 000 9.235131e-01 65.625000 96.875000\n","01/05 06:33:12 AM train (66.24, 0.9667606100082398)\n","01/05 06:33:13 AM train 000 8.203526e-01 73.437500 100.000000\n","01/05 06:33:42 AM train (68.08, 0.9171520483016968)\n","01/05 06:33:43 AM train 000 1.039737e+00 68.750000 95.312500\n","01/05 06:34:11 AM train (63.82, 1.0606360221862794)\n","01/05 06:34:12 AM train 000 8.898568e-01 68.750000 98.437500\n","01/05 06:34:41 AM train (67.3, 0.9331389403343201)\n","01/05 06:34:41 AM train 000 1.060297e+00 62.500000 95.312500\n","01/05 06:35:10 AM train (66.48, 0.9671088687896728)\n","01/05 06:35:11 AM train 000 9.048558e-01 68.750000 98.437500\n","01/05 06:35:40 AM train (66.34, 0.948958455657959)\n","01/05 06:35:40 AM train 000 8.078797e-01 68.750000 100.000000\n","01/05 06:36:10 AM train (64.32, 1.0354785823822021)\n","01/05 06:36:10 AM train 000 9.088847e-01 62.500000 96.875000\n","01/05 06:36:39 AM train (67.7, 0.9503250978469848)\n","01/05 06:36:40 AM train 000 8.458854e-01 70.312500 96.875000\n","01/05 06:37:09 AM train (68.16, 0.9171965647697449)\n","01/05 06:37:09 AM train 000 1.139580e+00 54.687500 100.000000\n","01/05 06:37:39 AM train (67.48, 0.9240920436859131)\n","01/05 06:37:39 AM train 000 8.647741e-01 65.625000 96.875000\n","01/05 06:38:08 AM train (67.18, 0.9381986942291259)\n","01/05 06:38:09 AM train 000 1.021297e+00 59.375000 100.000000\n","01/05 06:38:38 AM train (65.82, 0.9860239580631256)\n","01/05 06:38:38 AM train 000 1.658702e+00 54.687500 89.062500\n","01/05 06:39:08 AM train (64.84, 1.0297468017578124)\n","01/05 06:39:08 AM train 000 1.028290e+00 64.062500 92.187500\n","01/05 06:39:37 AM train (67.92, 0.9386680160522461)\n","01/05 06:39:38 AM train 000 8.286548e-01 71.875000 98.437500\n","01/05 06:40:07 AM train (67.16, 0.9502235954284668)\n","01/05 06:40:07 AM train 000 1.077057e+00 64.062500 93.750000\n","01/05 06:40:36 AM train (66.62, 0.9534919399261474)\n","01/05 06:40:37 AM train 000 1.013507e+00 64.062500 98.437500\n","01/05 06:41:06 AM train (64.14, 1.0230851163864136)\n","01/05 06:41:07 AM train 000 8.389743e-01 70.312500 98.437500\n","01/05 06:41:35 AM train (66.64, 0.9610874269485473)\n","01/05 06:41:36 AM train 000 8.363541e-01 64.062500 98.437500\n","01/05 06:42:05 AM train (68.32, 0.9296308011054992)\n","01/05 06:42:05 AM valid 000 8.976358e-01 70.312500 96.875000\n","01/05 06:42:05 AM valid (72.6, 0.7863366990089417)\n","01/05 06:42:06 AM valid 000 9.288164e-01 68.750000 98.437500\n","01/05 06:42:06 AM valid (69.3, 0.8777533073425293)\n","01/05 06:42:06 AM valid 000 1.100924e+00 65.625000 95.312500\n","01/05 06:42:07 AM valid (65.4, 1.021085789680481)\n","01/05 06:42:07 AM valid 000 9.487159e-01 65.625000 95.312500\n","01/05 06:42:08 AM valid (66.5, 0.9382004365921021)\n","01/05 06:42:08 AM valid 000 2.104239e+00 42.187500 76.562500\n","01/05 06:42:09 AM valid (35.9, 2.3077882442474364)\n","01/05 06:42:09 AM valid 000 1.226666e+00 56.250000 93.750000\n","01/05 06:42:10 AM valid (59.7, 1.2272539024353026)\n","01/05 06:42:10 AM valid 000 1.598425e+00 40.625000 87.500000\n","01/05 06:42:10 AM valid (41.4, 1.80883948802948)\n","01/05 06:42:10 AM valid 000 1.530480e+00 48.437500 93.750000\n","01/05 06:42:11 AM valid (51.2, 1.5098330249786378)\n","01/05 06:42:11 AM valid 000 1.771780e+00 43.750000 87.500000\n","01/05 06:42:12 AM valid (39.0, 2.0230702266693115)\n","01/05 06:42:12 AM valid 000 1.493093e+00 46.875000 90.625000\n","01/05 06:42:13 AM valid (46.2, 1.6334490947723388)\n","01/05 06:42:13 AM valid 000 9.371824e-01 65.625000 95.312500\n","01/05 06:42:14 AM valid (70.5, 0.8126021571159363)\n","01/05 06:42:14 AM valid 000 8.776755e-01 67.187500 98.437500\n","01/05 06:42:14 AM valid (70.0, 0.8442976536750794)\n","01/05 06:42:15 AM valid 000 1.380254e+00 53.125000 93.750000\n","01/05 06:42:15 AM valid (50.3, 1.4503160343170165)\n","01/05 06:42:15 AM valid 000 1.161209e+00 53.125000 93.750000\n","01/05 06:42:16 AM valid (61.1, 1.1088422975540162)\n","01/05 06:42:16 AM valid 000 2.026928e+00 42.187500 79.687500\n","01/05 06:42:17 AM valid (37.3, 2.2111648082733155)\n","01/05 06:42:17 AM valid 000 1.189678e+00 57.812500 92.187500\n","01/05 06:42:18 AM valid (60.8, 1.177149667739868)\n","01/05 06:42:18 AM valid 000 1.076410e+00 60.937500 96.875000\n","01/05 06:42:19 AM valid (61.5, 1.0840591373443604)\n","01/05 06:42:19 AM valid 000 1.598855e+00 45.312500 89.062500\n","01/05 06:42:19 AM valid (44.3, 1.6905141944885254)\n","01/05 06:42:20 AM valid 000 1.690769e+00 42.187500 92.187500\n","01/05 06:42:20 AM valid (40.3, 1.9341634378433228)\n","01/05 06:42:20 AM valid 000 1.493093e+00 46.875000 90.625000\n","01/05 06:42:21 AM valid (46.2, 1.6334490947723388)\n","01/05 06:42:21 AM valid 000 8.976358e-01 70.312500 96.875000\n","01/05 06:42:22 AM valid (72.6, 0.7863366990089417)\n","{'avg': 1.292133278465271, 'std': 0.47873248404740787, 'min': 0.7863366990089417, 'max': 2.2111648082733155}\n","01/05 06:42:23 AM {'test': (72.6, 0.7863366990089417), 'train': (67.64, 0.9399322200775146), 'edge': 6}\n","01/05 06:42:23 AM {'test': (65.4, 1.021085789680481), 'train': (66.24, 0.9667606100082398), 'edge': 8}\n","01/05 06:42:24 AM {'test': (66.5, 0.9382004365921021), 'train': (68.08, 0.9171520483016968), 'edge': 9}\n","01/05 06:42:25 AM {'test': (60.8, 1.177149667739868), 'train': (67.92, 0.9386680160522461), 'edge': 7}\n","01/05 06:42:26 AM {'test': (61.5, 1.0840591373443604), 'train': (67.16, 0.9502235954284668), 'edge': 6}\n","01/05 06:42:27 AM {'test': (37.3, 2.2111648082733155), 'train': (64.84, 1.0297468017578124), 'edge': 14}\n","01/05 06:42:27 AM {'test': (44.3, 1.6905141944885254), 'train': (66.62, 0.9534919399261474), 'edge': 9}\n","01/05 06:42:28 AM {'test': (39.0, 2.0230702266693115), 'train': (64.32, 1.0354785823822021), 'edge': 14}\n","01/05 06:42:29 AM {'test': (70.5, 0.8126021571159363), 'train': (68.16, 0.9171965647697449), 'edge': 6}\n","01/05 06:42:29 AM {'test': (60.8, 1.177149667739868), 'train': (67.92, 0.9386680160522461), 'edge': 7}\n","01/05 06:42:30 AM generation 4\n","01/05 06:42:30 AM train 000 8.384490e-01 67.187500 96.875000\n","01/05 06:42:44 AM train 100 8.182945e-01 71.797649 97.849629\n","01/05 06:42:58 AM train weight (72.176, 0.8007762400817872)\n","01/05 06:42:58 AM train 000 8.676729e-01 70.312500 100.000000\n","01/05 06:43:28 AM train (68.34, 0.8826480469226837)\n","01/05 06:43:28 AM train 000 9.432660e-01 68.750000 95.312500\n","01/05 06:43:58 AM train (67.96, 0.9142521362304687)\n","01/05 06:43:58 AM train 000 7.529753e-01 68.750000 100.000000\n","01/05 06:44:27 AM train (68.6, 0.8917566230773926)\n","01/05 06:44:28 AM train 000 9.995533e-01 60.937500 98.437500\n","01/05 06:44:57 AM train (67.46, 0.9370818381309509)\n","01/05 06:44:58 AM train 000 1.216374e+00 57.812500 96.875000\n","01/05 06:45:27 AM train (66.42, 0.9671360649108887)\n","01/05 06:45:28 AM train 000 1.347760e+00 57.812500 90.625000\n","01/05 06:45:57 AM train (64.1, 1.0619599343299866)\n","01/05 06:45:58 AM train 000 9.268237e-01 75.000000 98.437500\n","01/05 06:46:27 AM train (66.6, 0.9564704761505127)\n","01/05 06:46:28 AM train 000 1.292675e+00 54.687500 92.187500\n","01/05 06:46:57 AM train (63.68, 1.0329489751815797)\n","01/05 06:46:57 AM train 000 6.470361e-01 79.687500 96.875000\n","01/05 06:47:27 AM train (69.12, 0.8819528181552887)\n","01/05 06:47:27 AM train 000 1.206752e+00 62.500000 92.187500\n"],"name":"stdout"},{"output_type":"stream","text":["Traceback (most recent call last):\n"],"name":"stderr"},{"output_type":"stream","text":["01/05 06:47:57 AM train (68.0, 0.9430565231323242)\n","01/05 06:47:57 AM train 000 9.119849e-01 68.750000 96.875000\n","01/05 06:48:26 AM train (69.54, 0.878225288772583)\n","01/05 06:48:27 AM train 000 1.043867e+00 59.375000 95.312500\n","01/05 06:48:56 AM train (68.08, 0.9289233553886413)\n","01/05 06:48:57 AM train 000 8.472167e-01 68.750000 96.875000\n","01/05 06:49:26 AM train (68.92, 0.9021389368057251)\n","01/05 06:49:26 AM train 000 8.928262e-01 76.562500 93.750000\n","01/05 06:49:55 AM train (67.12, 0.9700783561706543)\n","01/05 06:49:56 AM train 000 8.146538e-01 73.437500 96.875000\n","01/05 06:50:25 AM train (66.82, 0.9605952558517457)\n","01/05 06:50:26 AM train 000 1.074597e+00 62.500000 95.312500\n","01/05 06:50:55 AM train (64.5, 1.0539367839813232)\n","01/05 06:50:55 AM train 000 7.559860e-01 76.562500 98.437500\n","01/05 06:51:24 AM train (64.66, 1.0161921159744263)\n","01/05 06:51:24 AM train 000 7.230793e-01 75.000000 96.875000\n","01/05 06:51:53 AM train (66.88, 0.9621409378051757)\n","01/05 06:51:54 AM train 000 9.302907e-01 68.750000 100.000000\n","01/05 06:52:23 AM train (69.06, 0.883582795715332)\n","01/05 06:52:23 AM train 000 8.541690e-01 75.000000 96.875000\n","01/05 06:52:52 AM train (67.94, 0.9421287773132324)\n","01/05 06:52:53 AM train 000 9.195887e-01 71.875000 92.187500\n","01/05 06:53:22 AM train (69.68, 0.8804100067138672)\n","01/05 06:53:22 AM valid 000 9.298179e-01 70.312500 96.875000\n","01/05 06:53:23 AM valid (72.5, 0.7760853495597839)\n","01/05 06:53:23 AM valid 000 1.343817e+00 57.812500 93.750000\n","01/05 06:53:23 AM valid (61.9, 1.1466399087905883)\n","01/05 06:53:24 AM valid 000 1.127614e+00 65.625000 95.312500\n","01/05 06:53:24 AM valid (65.2, 1.0126961326599122)\n","01/05 06:53:24 AM valid 000 1.631803e+00 59.375000 93.750000\n","01/05 06:53:25 AM valid (50.5, 1.5853350658416747)\n","01/05 06:53:25 AM valid 000 1.044748e+00 62.500000 96.875000\n","01/05 06:53:26 AM valid (66.0, 0.9894300584793091)\n","01/05 06:53:26 AM valid 000 2.868796e+00 28.125000 84.375000\n","01/05 06:53:27 AM valid (25.1, 3.1258506088256834)\n","01/05 06:53:27 AM valid 000 2.154175e+00 35.937500 90.625000\n","01/05 06:53:27 AM valid (34.4, 2.283797664642334)\n","01/05 06:53:28 AM valid 000 2.368255e+00 31.250000 85.937500\n","01/05 06:53:28 AM valid (25.5, 2.707065586090088)\n","01/05 06:53:28 AM valid 000 9.200867e-01 65.625000 96.875000\n","01/05 06:53:29 AM valid (70.9, 0.7787456450462341)\n","01/05 06:53:29 AM valid 000 1.631803e+00 59.375000 93.750000\n","01/05 06:53:30 AM valid (50.5, 1.5853350658416747)\n","01/05 06:53:30 AM valid 000 9.298179e-01 70.312500 96.875000\n","01/05 06:53:31 AM valid (72.5, 0.7760853495597839)\n","01/05 06:53:31 AM valid 000 1.337404e+00 57.812500 93.750000\n","01/05 06:53:31 AM valid (62.9, 1.124764549255371)\n","01/05 06:53:32 AM valid 000 9.245300e-01 65.625000 95.312500\n","01/05 06:53:32 AM valid (68.8, 0.8292665839195251)\n","01/05 06:53:32 AM valid 000 2.609409e+00 31.250000 81.250000\n","01/05 06:53:33 AM valid (28.5, 2.8012299213409424)\n","01/05 06:53:33 AM valid 000 1.156863e+00 56.250000 96.875000\n","01/05 06:53:34 AM valid (61.5, 1.1334114656448364)\n","01/05 06:53:34 AM valid 000 2.822632e+00 29.687500 84.375000\n","01/05 06:53:35 AM valid (26.9, 3.0394545135498046)\n","01/05 06:53:35 AM valid 000 3.065057e+00 21.875000 79.687500\n","01/05 06:53:35 AM valid (17.5, 3.4495144939422606)\n","01/05 06:53:36 AM valid 000 1.895691e+00 43.750000 90.625000\n","01/05 06:53:36 AM valid (42.2, 1.9345873374938964)\n","01/05 06:53:36 AM valid 000 9.200867e-01 65.625000 96.875000\n","01/05 06:53:37 AM valid (70.9, 0.7787456450462341)\n","01/05 06:53:37 AM valid 000 1.631803e+00 59.375000 93.750000\n","01/05 06:53:38 AM valid (50.5, 1.5853350658416747)\n","01/05 06:53:38 AM valid 000 9.298179e-01 70.312500 96.875000\n","01/05 06:53:39 AM valid (72.5, 0.7760853495597839)\n","{'avg': 1.5518489015102386, 'std': 0.9208779706568624, 'min': 0.7760853495597839, 'max': 3.4495144939422606}\n","01/05 06:53:39 AM {'test': (72.5, 0.7760853495597839), 'train': (68.34, 0.8826480469226837), 'edge': 6}\n","01/05 06:53:40 AM {'test': (66.0, 0.9894300584793091), 'train': (66.42, 0.9671360649108887), 'edge': 6}\n","01/05 06:53:41 AM {'test': (68.8, 0.8292665839195251), 'train': (68.92, 0.9021389368057251), 'edge': 9}\n","01/05 06:53:42 AM {'test': (61.9, 1.1466399087905883), 'train': (67.96, 0.9142521362304687), 'edge': 10}\n","01/05 06:53:43 AM {'test': (42.2, 1.9345873374938964), 'train': (66.88, 0.9621409378051757), 'edge': 14}\n","01/05 06:53:43 AM {'test': (17.5, 3.4495144939422606), 'train': (64.66, 1.0161921159744263), 'edge': 11}\n","01/05 06:53:44 AM {'test': (26.9, 3.0394545135498046), 'train': (64.5, 1.0539367839813232), 'edge': 15}\n","01/05 06:53:45 AM {'test': (50.5, 1.5853350658416747), 'train': (67.46, 0.9370818381309509), 'edge': 7}\n","01/05 06:53:46 AM {'test': (66.0, 0.9894300584793091), 'train': (66.42, 0.9671360649108887), 'edge': 6}\n","01/05 06:53:46 AM {'test': (70.9, 0.7787456450462341), 'train': (69.12, 0.8819528181552887), 'edge': 6}\n","01/05 06:53:47 AM generation 5\n","01/05 06:53:47 AM train 000 7.522240e-01 75.000000 100.000000\n","01/05 06:54:01 AM train 100 7.438662e-01 73.808787 98.406559\n","01/05 06:54:14 AM train weight (73.736, 0.7480404176712037)\n","01/05 06:54:15 AM train 000 8.516608e-01 75.000000 100.000000\n","01/05 06:54:44 AM train (70.22, 0.849276773071289)\n","01/05 06:54:44 AM train 000 9.538095e-01 65.625000 100.000000\n","01/05 06:55:13 AM train (67.5, 0.9667017494201661)\n","01/05 06:55:14 AM train 000 6.112063e-01 76.562500 98.437500\n","01/05 06:55:43 AM train (70.26, 0.859529193687439)\n","01/05 06:55:43 AM train 000 1.056229e+00 56.250000 100.000000\n","01/05 06:56:12 AM train (68.0, 0.9172510042190551)\n","01/05 06:56:13 AM train 000 8.071800e-01 64.062500 98.437500\n","01/05 06:56:42 AM train (67.36, 0.9245427848815918)\n","01/05 06:56:42 AM train 000 9.146467e-01 71.875000 96.875000\n","01/05 06:57:11 AM train (64.74, 0.9964753244400024)\n","01/05 06:57:12 AM train 000 1.190647e+00 65.625000 95.312500\n","01/05 06:57:41 AM train (66.66, 0.9918313159942627)\n","01/05 06:57:41 AM train 000 7.558687e-01 79.687500 98.437500\n","01/05 06:58:11 AM train (70.22, 0.8619369303703308)\n","01/05 06:58:11 AM train 000 1.182382e+00 62.500000 96.875000\n","01/05 06:58:40 AM train (67.82, 0.9426374542236328)\n","01/05 06:58:41 AM train 000 7.222297e-01 73.437500 96.875000\n","01/05 06:59:09 AM train (69.96, 0.8603483680725098)\n","01/05 06:59:10 AM train 000 1.015337e+00 65.625000 96.875000\n","01/05 06:59:39 AM train (69.02, 0.876357811164856)\n","01/05 06:59:39 AM train 000 9.946970e-01 68.750000 98.437500\n","01/05 07:00:08 AM train (67.82, 0.9386979885101319)\n","01/05 07:00:09 AM train 000 1.096934e+00 67.187500 96.875000\n","01/05 07:00:38 AM train (68.78, 0.8957459022521973)\n","01/05 07:00:39 AM train 000 7.215940e-01 71.875000 100.000000\n","01/05 07:01:07 AM train (70.3, 0.8541649856567383)\n","01/05 07:01:08 AM train 000 7.352153e-01 71.875000 100.000000\n","01/05 07:01:37 AM train (65.74, 0.9799194065093995)\n","01/05 07:01:38 AM train 000 8.682553e-01 73.437500 95.312500\n","01/05 07:02:07 AM train (66.64, 0.9573203256607056)\n","01/05 07:02:07 AM train 000 9.266073e-01 73.437500 96.875000\n","01/05 07:02:36 AM train (69.98, 0.8849131851196289)\n","01/05 07:02:37 AM train 000 9.950296e-01 64.062500 98.437500\n","01/05 07:03:06 AM train (64.88, 1.0047560802459716)\n","01/05 07:03:06 AM train 000 9.807453e-01 67.187500 98.437500\n"],"name":"stdout"},{"output_type":"stream","text":["Traceback (most recent call last):\n","  File \"/usr/lib/python3.6/multiprocessing/queues.py\", line 240, in _feed\n","    send_bytes(obj)\n"],"name":"stderr"},{"output_type":"stream","text":["01/05 07:03:35 AM train (68.16, 0.9204466337203979)\n","01/05 07:03:35 AM train 000 9.420813e-01 67.187500 96.875000\n","01/05 07:04:04 AM train (67.42, 0.9450308284759521)\n","01/05 07:04:05 AM train 000 9.035426e-01 60.937500 98.437500\n","01/05 07:04:33 AM train (70.44, 0.849408564567566)\n","01/05 07:04:34 AM valid 000 8.618025e-01 75.000000 96.875000\n","01/05 07:04:34 AM valid (73.5, 0.7502023329734803)\n","01/05 07:04:34 AM valid 000 1.002668e+00 68.750000 96.875000\n","01/05 07:04:35 AM valid (65.2, 1.0072705793380736)\n","01/05 07:04:35 AM valid 000 8.927314e-01 73.437500 95.312500\n","01/05 07:04:36 AM valid (70.7, 0.8111715531349182)\n","01/05 07:04:36 AM valid 000 1.121094e+00 65.625000 96.875000\n","01/05 07:04:37 AM valid (63.0, 1.0462992868423462)\n","01/05 07:04:37 AM valid 000 1.541432e+00 48.437500 93.750000\n","01/05 07:04:37 AM valid (48.3, 1.5440140676498413)\n","01/05 07:04:37 AM valid 000 2.342580e+00 29.687500 70.312500\n","01/05 07:04:38 AM valid (31.3, 2.5876691608428954)\n","01/05 07:04:38 AM valid 000 2.115247e+00 40.625000 81.250000\n","01/05 07:04:39 AM valid (38.2, 2.245186716079712)\n","01/05 07:04:39 AM valid 000 1.357847e+00 56.250000 96.875000\n","01/05 07:04:40 AM valid (57.1, 1.2832344608306885)\n","01/05 07:04:40 AM valid 000 9.712108e-01 71.875000 98.437500\n","01/05 07:04:40 AM valid (65.9, 0.9643924150466919)\n","01/05 07:04:41 AM valid 000 8.999169e-01 73.437500 95.312500\n","01/05 07:04:41 AM valid (73.1, 0.7761657781600952)\n","01/05 07:04:41 AM valid 000 9.131591e-01 73.437500 96.875000\n","01/05 07:04:42 AM valid (71.3, 0.7839567523002624)\n","01/05 07:04:42 AM valid 000 9.712108e-01 71.875000 98.437500\n","01/05 07:04:43 AM valid (65.9, 0.9643924150466919)\n","01/05 07:04:43 AM valid 000 1.039655e+00 68.750000 96.875000\n","01/05 07:04:43 AM valid (61.4, 1.0787166323661803)\n","01/05 07:04:44 AM valid 000 9.139231e-01 75.000000 95.312500\n","01/05 07:04:44 AM valid (72.4, 0.7777503952980042)\n","01/05 07:04:44 AM valid 000 1.441270e+00 50.000000 87.500000\n","01/05 07:04:45 AM valid (49.2, 1.4453051061630249)\n","01/05 07:04:45 AM valid 000 2.163582e+00 35.937500 81.250000\n","01/05 07:04:46 AM valid (35.7, 2.3490344524383544)\n","01/05 07:04:46 AM valid 000 9.687715e-01 68.750000 95.312500\n","01/05 07:04:47 AM valid (69.6, 0.8728099126815796)\n","01/05 07:04:47 AM valid 000 2.470088e+00 35.937500 75.000000\n","01/05 07:04:47 AM valid (31.6, 2.6894863090515138)\n","01/05 07:04:48 AM valid 000 1.438730e+00 57.812500 89.062500\n","01/05 07:04:48 AM valid (54.6, 1.3381021738052368)\n","01/05 07:04:48 AM valid 000 1.777299e+00 45.312500 89.062500\n","01/05 07:04:49 AM valid (44.4, 1.8038257465362548)\n","01/05 07:04:49 AM valid 000 8.618025e-01 75.000000 96.875000\n","01/05 07:04:50 AM valid (73.5, 0.7502023329734803)\n","{'avg': 1.4903862942695618, 'std': 0.7683356407522457, 'min': 0.7502023329734803, 'max': 2.6894863090515138}\n","01/05 07:04:51 AM {'test': (73.5, 0.7502023329734803), 'train': (70.22, 0.849276773071289), 'edge': 6}\n","01/05 07:04:51 AM {'test': (65.2, 1.0072705793380736), 'train': (67.5, 0.9667017494201661), 'edge': 7}\n","01/05 07:04:52 AM {'test': (69.6, 0.8728099126815796), 'train': (69.98, 0.8849131851196289), 'edge': 6}\n","01/05 07:04:53 AM {'test': (63.0, 1.0462992868423462), 'train': (68.0, 0.9172510042190551), 'edge': 10}\n","01/05 07:04:53 AM {'test': (31.3, 2.5876691608428954), 'train': (64.74, 0.9964753244400024), 'edge': 11}\n","01/05 07:04:55 AM {'test': (70.7, 0.8111715531349182), 'train': (70.26, 0.859529193687439), 'edge': 6}\n","01/05 07:04:56 AM {'test': (48.3, 1.5440140676498413), 'train': (67.36, 0.9245427848815918), 'edge': 14}\n","01/05 07:04:56 AM {'test': (65.2, 1.0072705793380736), 'train': (67.5, 0.9667017494201661), 'edge': 7}\n","01/05 07:04:57 AM {'test': (31.6, 2.6894863090515138), 'train': (64.88, 1.0047560802459716), 'edge': 16}\n","01/05 07:04:58 AM {'test': (31.3, 2.5876691608428954), 'train': (64.74, 0.9964753244400024), 'edge': 11}\n","01/05 07:04:58 AM generation 6\n","01/05 07:04:58 AM train 000 8.263923e-01 73.437500 96.875000\n","01/05 07:05:12 AM train 100 7.095636e-01 74.489480 98.746906\n","01/05 07:05:25 AM train weight (75.128, 0.7079663693809509)\n","01/05 07:05:25 AM train 000 7.127757e-01 71.875000 98.437500\n","01/05 07:05:54 AM train (72.36, 0.796949140548706)\n","01/05 07:05:55 AM train 000 1.058230e+00 67.187500 96.875000\n","01/05 07:06:24 AM train (68.48, 0.9145287218093872)\n","01/05 07:06:25 AM train 000 8.317085e-01 76.562500 95.312500\n","01/05 07:06:53 AM train (71.04, 0.8260855331420899)\n","01/05 07:06:54 AM train 000 9.098186e-01 67.187500 98.437500\n","01/05 07:07:23 AM train (70.08, 0.8621941952705383)\n","01/05 07:07:23 AM train 000 9.055418e-01 68.750000 95.312500\n","01/05 07:07:53 AM train (68.32, 0.9054615820884705)\n","01/05 07:07:53 AM train 000 7.774709e-01 70.312500 98.437500\n","01/05 07:08:22 AM train (71.22, 0.8138514928817749)\n","01/05 07:08:23 AM train 000 7.514620e-01 73.437500 98.437500\n","01/05 07:08:52 AM train (70.14, 0.859213074874878)\n","01/05 07:08:52 AM train 000 1.199664e+00 64.062500 93.750000\n","01/05 07:09:21 AM train (68.7, 0.9036079605102539)\n","01/05 07:09:22 AM train 000 9.521905e-01 67.187500 95.312500\n","01/05 07:09:51 AM train (67.52, 0.9289131926059723)\n","01/05 07:09:52 AM train 000 9.692780e-01 65.625000 96.875000\n"],"name":"stdout"},{"output_type":"stream","text":["Traceback (most recent call last):\n"],"name":"stderr"},{"output_type":"stream","text":["01/05 07:10:21 AM train (68.24, 0.9115747825622559)\n","01/05 07:10:22 AM train 000 1.170931e+00 56.250000 96.875000\n","01/05 07:10:51 AM train (71.66, 0.807669390487671)\n","01/05 07:10:52 AM train 000 6.901540e-01 76.562500 100.000000\n","01/05 07:11:21 AM train (68.86, 0.9026790126800537)\n","01/05 07:11:21 AM train 000 7.903467e-01 78.125000 98.437500\n","01/05 07:11:50 AM train (70.38, 0.8685089122772217)\n","01/05 07:11:51 AM train 000 9.211221e-01 64.062500 98.437500\n","01/05 07:12:20 AM train (70.46, 0.8341791482925415)\n","01/05 07:12:21 AM train 000 9.109488e-01 70.312500 98.437500\n","01/05 07:12:50 AM train (69.22, 0.8705118347167968)\n","01/05 07:12:50 AM train 000 8.806428e-01 71.875000 96.875000\n","01/05 07:13:19 AM train (70.04, 0.8408670345306396)\n","01/05 07:13:20 AM train 000 8.773069e-01 70.312500 96.875000\n","01/05 07:13:49 AM train (68.52, 0.8953834548950196)\n","01/05 07:13:50 AM train 000 7.439221e-01 73.437500 96.875000\n","01/05 07:14:19 AM train (68.9, 0.8946137817382812)\n","01/05 07:14:19 AM train 000 8.696628e-01 70.312500 96.875000\n","01/05 07:14:48 AM train (69.74, 0.879241132926941)\n","01/05 07:14:49 AM train 000 7.296158e-01 78.125000 98.437500\n","01/05 07:15:17 AM train (67.34, 0.9393943660736084)\n","01/05 07:15:18 AM train 000 8.621851e-01 70.312500 98.437500\n","01/05 07:15:47 AM train (72.74, 0.8007013999938964)\n","01/05 07:15:47 AM valid 000 7.915331e-01 75.000000 96.875000\n","01/05 07:15:48 AM valid (76.0, 0.671730263710022)\n","01/05 07:15:48 AM valid 000 1.040170e+00 62.500000 96.875000\n","01/05 07:15:48 AM valid (65.9, 0.9489111461639405)\n","01/05 07:15:49 AM valid 000 9.503294e-01 68.750000 95.312500\n","01/05 07:15:49 AM valid (72.4, 0.7878473386764526)\n","01/05 07:15:49 AM valid 000 1.126622e+00 65.625000 96.875000\n","01/05 07:15:50 AM valid (67.0, 0.9470963468551635)\n","01/05 07:15:50 AM valid 000 2.701050e+00 23.437500 82.812500\n","01/05 07:15:51 AM valid (22.4, 2.973881134033203)\n","01/05 07:15:51 AM valid 000 8.506190e-01 71.875000 95.312500\n","01/05 07:15:52 AM valid (72.8, 0.7543707408905029)\n","01/05 07:15:52 AM valid 000 1.505476e+00 46.875000 92.187500\n","01/05 07:15:52 AM valid (51.1, 1.4800970191955567)\n","01/05 07:15:52 AM valid 000 1.069148e+00 62.500000 96.875000\n","01/05 07:15:53 AM valid (65.7, 0.976366488456726)\n","01/05 07:15:53 AM valid 000 2.753976e+00 26.562500 82.812500\n","01/05 07:15:54 AM valid (22.7, 2.978383361816406)\n","01/05 07:15:54 AM valid 000 2.701050e+00 23.437500 82.812500\n","01/05 07:15:55 AM valid (22.4, 2.973881134033203)\n","01/05 07:15:55 AM valid 000 7.915331e-01 75.000000 96.875000\n","01/05 07:15:56 AM valid (76.0, 0.671730263710022)\n","01/05 07:15:56 AM valid 000 1.040170e+00 62.500000 96.875000\n","01/05 07:15:56 AM valid (65.9, 0.9489111461639405)\n","01/05 07:15:57 AM valid 000 9.674609e-01 68.750000 96.875000\n","01/05 07:15:57 AM valid (72.6, 0.7753344931602478)\n","01/05 07:15:57 AM valid 000 1.147502e+00 59.375000 95.312500\n","01/05 07:15:58 AM valid (65.1, 0.995903633594513)\n","01/05 07:15:58 AM valid 000 1.666027e+00 46.875000 90.625000\n","01/05 07:15:59 AM valid (48.1, 1.576928418159485)\n","01/05 07:15:59 AM valid 000 1.095293e+00 64.062500 95.312500\n","01/05 07:16:00 AM valid (60.6, 1.1053056592941284)\n","01/05 07:16:00 AM valid 000 1.147609e+00 64.062500 93.750000\n","01/05 07:16:00 AM valid (59.7, 1.1860389337539672)\n","01/05 07:16:01 AM valid 000 2.357318e+00 34.375000 89.062500\n","01/05 07:16:01 AM valid (31.1, 2.3558552169799807)\n","01/05 07:16:01 AM valid 000 2.800078e+00 28.125000 85.937500\n","01/05 07:16:02 AM valid (23.1, 3.0600153045654297)\n","01/05 07:16:02 AM valid 000 2.153612e+00 37.500000 84.375000\n","01/05 07:16:03 AM valid (28.9, 2.366978401184082)\n","01/05 07:16:03 AM valid 000 7.915331e-01 75.000000 96.875000\n","01/05 07:16:04 AM valid (76.0, 0.671730263710022)\n","{'avg': 1.1700345358371735, 'std': 0.4861877631712332, 'min': 0.671730263710022, 'max': 2.366978401184082}\n","01/05 07:16:04 AM {'test': (76.0, 0.671730263710022), 'train': (72.36, 0.796949140548706), 'edge': 6}\n","01/05 07:16:05 AM {'test': (72.6, 0.7753344931602478), 'train': (70.38, 0.8685089122772217), 'edge': 11}\n","01/05 07:16:06 AM {'test': (65.7, 0.976366488456726), 'train': (68.7, 0.9036079605102539), 'edge': 6}\n","01/05 07:16:07 AM {'test': (60.6, 1.1053056592941284), 'train': (70.04, 0.8408670345306396), 'edge': 8}\n","01/05 07:16:07 AM {'test': (48.1, 1.576928418159485), 'train': (69.22, 0.8705118347167968), 'edge': 10}\n","01/05 07:16:08 AM {'test': (65.1, 0.995903633594513), 'train': (70.46, 0.8341791482925415), 'edge': 9}\n","01/05 07:16:09 AM {'test': (51.1, 1.4800970191955567), 'train': (70.14, 0.859213074874878), 'edge': 14}\n","01/05 07:16:10 AM {'test': (65.7, 0.976366488456726), 'train': (68.7, 0.9036079605102539), 'edge': 6}\n","01/05 07:16:10 AM {'test': (28.9, 2.366978401184082), 'train': (67.34, 0.9393943660736084), 'edge': 10}\n","01/05 07:16:11 AM {'test': (72.6, 0.7753344931602478), 'train': (70.38, 0.8685089122772217), 'edge': 11}\n","01/05 07:16:11 AM generation 7\n","01/05 07:16:12 AM train 000 6.791067e-01 78.125000 100.000000\n","01/05 07:16:25 AM train 100 6.521424e-01 77.583540 98.715965\n","01/05 07:16:38 AM train weight (77.688, 0.651400523853302)\n","01/05 07:16:39 AM train 000 9.135433e-01 75.000000 95.312500\n","01/05 07:17:08 AM train (72.44, 0.7913277219772339)\n","01/05 07:17:08 AM train 000 8.776135e-01 70.312500 98.437500\n","01/05 07:17:37 AM train (71.1, 0.8250843336105347)\n","01/05 07:17:38 AM train 000 1.218807e+00 64.062500 100.000000\n","01/05 07:18:07 AM train (70.8, 0.8631129241943359)\n","01/05 07:18:08 AM train 000 8.715774e-01 71.875000 98.437500\n","01/05 07:18:37 AM train (71.14, 0.832311177444458)\n","01/05 07:18:38 AM train 000 1.011003e+00 62.500000 96.875000\n","01/05 07:19:07 AM train (69.78, 0.8655860666275025)\n","01/05 07:19:07 AM train 000 9.440116e-01 71.875000 96.875000\n","01/05 07:19:36 AM train (71.56, 0.8545551033020019)\n","01/05 07:19:37 AM train 000 6.624362e-01 78.125000 100.000000\n","01/05 07:20:06 AM train (71.0, 0.839696018409729)\n","01/05 07:20:06 AM train 000 8.434692e-01 65.625000 98.437500\n","01/05 07:20:36 AM train (70.98, 0.8464945984840393)\n","01/05 07:20:36 AM train 000 9.667974e-01 64.062500 96.875000\n","01/05 07:21:05 AM train (69.1, 0.914268318939209)\n","01/05 07:21:06 AM train 000 6.246246e-01 71.875000 100.000000\n","01/05 07:21:35 AM train (71.58, 0.8300566938400269)\n","01/05 07:21:35 AM train 000 7.440627e-01 76.562500 96.875000\n","01/05 07:22:04 AM train (73.02, 0.8162267313003541)\n","01/05 07:22:05 AM train 000 5.754292e-01 79.687500 100.000000\n","01/05 07:22:34 AM train (71.86, 0.8122189289093018)\n","01/05 07:22:34 AM train 000 8.466069e-01 70.312500 98.437500\n","01/05 07:23:03 AM train (71.28, 0.8624336740493774)\n","01/05 07:23:04 AM train 000 8.259017e-01 71.875000 95.312500\n","01/05 07:23:33 AM train (71.58, 0.8243119533538819)\n","01/05 07:23:33 AM train 000 7.166339e-01 71.875000 100.000000\n","01/05 07:24:02 AM train (70.38, 0.8404482586860657)\n","01/05 07:24:03 AM train 000 6.364154e-01 71.875000 100.000000\n","01/05 07:24:32 AM train (71.02, 0.8398188720703125)\n","01/05 07:24:33 AM train 000 9.284307e-01 62.500000 98.437500\n","01/05 07:25:02 AM train (71.92, 0.8275989586830139)\n","01/05 07:25:02 AM train 000 8.051684e-01 70.312500 98.437500\n","01/05 07:25:31 AM train (70.3, 0.8646131784439087)\n","01/05 07:25:32 AM train 000 1.140055e+00 64.062500 93.750000\n","01/05 07:26:01 AM train (68.54, 0.9049374031066895)\n","01/05 07:26:01 AM train 000 5.012354e-01 84.375000 100.000000\n","01/05 07:26:30 AM train (71.78, 0.8249506004333496)\n","01/05 07:26:31 AM train 000 1.150154e+00 65.625000 98.437500\n","01/05 07:27:00 AM train (72.5, 0.7916477195739746)\n","01/05 07:27:00 AM valid 000 8.260010e-01 73.437500 96.875000\n","01/05 07:27:01 AM valid (76.7, 0.6670990333557129)\n","01/05 07:27:01 AM valid 000 8.896835e-01 73.437500 96.875000\n","01/05 07:27:02 AM valid (75.4, 0.7390006451606751)\n","01/05 07:27:02 AM valid 000 1.003163e+00 65.625000 95.312500\n","01/05 07:27:02 AM valid (67.8, 0.883817476272583)\n","01/05 07:27:03 AM valid 000 1.006566e+00 68.750000 95.312500\n","01/05 07:27:03 AM valid (67.3, 0.9317719020843506)\n","01/05 07:27:03 AM valid 000 1.525021e+00 53.125000 89.062500\n","01/05 07:27:04 AM valid (54.3, 1.4818625049591065)\n","01/05 07:27:04 AM valid 000 1.042004e+00 67.187500 95.312500\n","01/05 07:27:05 AM valid (71.4, 0.8515951795578003)\n","01/05 07:27:05 AM valid 000 1.510678e+00 50.000000 89.062500\n","01/05 07:27:06 AM valid (54.6, 1.4239159154891967)\n","01/05 07:27:06 AM valid 000 1.003163e+00 65.625000 95.312500\n","01/05 07:27:07 AM valid (67.8, 0.883817476272583)\n","01/05 07:27:07 AM valid 000 2.022466e+00 40.625000 79.687500\n","01/05 07:27:07 AM valid (37.7, 2.178043020248413)\n","01/05 07:27:08 AM valid 000 8.185009e-01 71.875000 96.875000\n","01/05 07:27:08 AM valid (76.5, 0.7105630412101746)\n","01/05 07:27:08 AM valid 000 8.554442e-01 71.875000 95.312500\n","01/05 07:27:09 AM valid (75.5, 0.7038751001358032)\n","01/05 07:27:09 AM valid 000 8.291352e-01 73.437500 96.875000\n","01/05 07:27:10 AM valid (75.5, 0.6958138833045959)\n","01/05 07:27:10 AM valid 000 1.003163e+00 65.625000 95.312500\n","01/05 07:27:11 AM valid (67.8, 0.883817476272583)\n","01/05 07:27:11 AM valid 000 1.029098e+00 71.875000 92.187500\n","01/05 07:27:12 AM valid (66.8, 0.9911398334503174)\n","01/05 07:27:12 AM valid 000 1.493489e+00 53.125000 89.062500\n","01/05 07:27:12 AM valid (56.2, 1.4278422603607177)\n","01/05 07:27:13 AM valid 000 1.119990e+00 62.500000 95.312500\n","01/05 07:27:13 AM valid (69.4, 0.9338566279411316)\n","01/05 07:27:13 AM valid 000 1.510678e+00 50.000000 89.062500\n","01/05 07:27:14 AM valid (54.6, 1.4239159154891967)\n","01/05 07:27:14 AM valid 000 9.768102e-01 67.187500 93.750000\n","01/05 07:27:15 AM valid (68.6, 0.8876985254287719)\n","01/05 07:27:15 AM valid 000 2.022466e+00 40.625000 79.687500\n","01/05 07:27:16 AM valid (37.7, 2.178043020248413)\n","01/05 07:27:16 AM valid 000 9.975113e-01 68.750000 95.312500\n","01/05 07:27:16 AM valid (72.9, 0.8102508459091187)\n","01/05 07:27:17 AM valid 000 8.188699e-01 75.000000 96.875000\n","01/05 07:27:17 AM valid (76.8, 0.6716236109733582)\n","{'avg': 1.0730810688972474, 'std': 0.4556913401209189, 'min': 0.6670990333557129, 'max': 2.178043020248413}\n","01/05 07:27:18 AM {'test': (76.7, 0.6670990333557129), 'train': (72.44, 0.7913277219772339), 'edge': 6}\n","01/05 07:27:19 AM {'test': (68.6, 0.8876985254287719), 'train': (70.3, 0.8646131784439087), 'edge': 5}\n","01/05 07:27:20 AM {'test': (76.5, 0.7105630412101746), 'train': (71.58, 0.8300566938400269), 'edge': 12}\n","01/05 07:27:21 AM {'test': (67.3, 0.9317719020843506), 'train': (71.14, 0.832311177444458), 'edge': 8}\n","01/05 07:27:22 AM {'test': (54.3, 1.4818625049591065), 'train': (69.78, 0.8655860666275025), 'edge': 9}\n","01/05 07:27:22 AM {'test': (71.4, 0.8515951795578003), 'train': (71.56, 0.8545551033020019), 'edge': 9}\n","01/05 07:27:23 AM {'test': (68.6, 0.8876985254287719), 'train': (70.3, 0.8646131784439087), 'edge': 5}\n","01/05 07:27:24 AM {'test': (37.7, 2.178043020248413), 'train': (69.1, 0.914268318939209), 'edge': 10}\n","01/05 07:27:25 AM {'test': (54.6, 1.4239159154891967), 'train': (71.0, 0.839696018409729), 'edge': 14}\n","01/05 07:27:25 AM {'test': (76.5, 0.7105630412101746), 'train': (71.58, 0.8300566938400269), 'edge': 12}\n","01/05 07:27:26 AM generation 8\n","01/05 07:27:26 AM train 000 6.715887e-01 75.000000 98.437500\n","01/05 07:27:40 AM train 100 6.166630e-01 78.449876 99.133663\n","01/05 07:27:53 AM train weight (78.4, 0.6220889898109436)\n","01/05 07:27:53 AM train 000 6.717401e-01 68.750000 100.000000\n","01/05 07:28:23 AM train (72.64, 0.784398982334137)\n","01/05 07:28:23 AM train 000 5.792218e-01 76.562500 98.437500\n","01/05 07:28:53 AM train (72.0, 0.8307226707458496)\n","01/05 07:28:54 AM train 000 6.100715e-01 76.562500 100.000000\n","01/05 07:29:23 AM train (72.84, 0.8027063795089722)\n","01/05 07:29:24 AM train 000 7.039560e-01 75.000000 100.000000\n","01/05 07:29:53 AM train (72.08, 0.8083535120010376)\n","01/05 07:29:54 AM train 000 9.605586e-01 64.062500 98.437500\n","01/05 07:30:24 AM train (70.48, 0.8550981050491333)\n","01/05 07:30:24 AM train 000 6.430799e-01 81.250000 98.437500\n","01/05 07:30:54 AM train (71.88, 0.8235377712249756)\n","01/05 07:30:54 AM train 000 7.471023e-01 75.000000 95.312500\n","01/05 07:31:24 AM train (71.84, 0.825896097946167)\n","01/05 07:31:25 AM train 000 9.062149e-01 67.187500 96.875000\n","01/05 07:31:54 AM train (69.04, 0.9073664275169373)\n","01/05 07:31:55 AM train 000 6.293649e-01 76.562500 100.000000\n","01/05 07:32:25 AM train (70.98, 0.8440493865966797)\n","01/05 07:32:25 AM train 000 8.309723e-01 64.062500 98.437500\n","01/05 07:32:55 AM train (73.26, 0.7797718255996704)\n","01/05 07:32:55 AM train 000 8.742546e-01 67.187500 100.000000\n","01/05 07:33:25 AM train (73.94, 0.7559940176010131)\n","01/05 07:33:25 AM train 000 6.392385e-01 81.250000 98.437500\n","01/05 07:33:55 AM train (71.44, 0.8436054168701171)\n","01/05 07:33:56 AM train 000 8.508070e-01 67.187500 98.437500\n","01/05 07:34:25 AM train (73.48, 0.7785715420722962)\n","01/05 07:34:26 AM train 000 8.816513e-01 67.187500 98.437500\n","01/05 07:34:55 AM train (71.66, 0.8119883226394653)\n","01/05 07:34:56 AM train 000 9.499950e-01 68.750000 95.312500\n","01/05 07:35:25 AM train (70.8, 0.8574948408126831)\n","01/05 07:35:26 AM train 000 1.071949e+00 68.750000 93.750000\n","01/05 07:35:56 AM train (71.96, 0.8320470319747925)\n","01/05 07:35:56 AM train 000 1.091729e+00 64.062500 96.875000\n","01/05 07:36:26 AM train (71.72, 0.8405543396949768)\n","01/05 07:36:26 AM train 000 9.317079e-01 68.750000 98.437500\n","01/05 07:36:56 AM train (69.36, 0.8796572669029236)\n","01/05 07:36:56 AM train 000 7.319149e-01 70.312500 100.000000\n","01/05 07:37:26 AM train (71.68, 0.8197456615447998)\n","01/05 07:37:27 AM train 000 7.742295e-01 71.875000 100.000000\n","01/05 07:37:57 AM train (73.7, 0.7798265787124634)\n","01/05 07:37:57 AM train 000 6.095886e-01 82.812500 98.437500\n","01/05 07:38:27 AM train (74.4, 0.7506074403762817)\n","01/05 07:38:27 AM valid 000 7.789270e-01 71.875000 95.312500\n","01/05 07:38:28 AM valid (76.9, 0.640728859424591)\n","01/05 07:38:28 AM valid 000 9.255644e-01 70.312500 96.875000\n","01/05 07:38:29 AM valid (70.2, 0.833453474521637)\n","01/05 07:38:29 AM valid 000 7.752615e-01 73.437500 96.875000\n","01/05 07:38:29 AM valid (75.8, 0.665965500831604)\n","01/05 07:38:30 AM valid 000 1.013454e+00 71.875000 93.750000\n","01/05 07:38:30 AM valid (65.3, 1.0003354473114014)\n","01/05 07:38:30 AM valid 000 1.614977e+00 48.437500 89.062500\n","01/05 07:38:31 AM valid (51.5, 1.61377317237854)\n","01/05 07:38:31 AM valid 000 1.059625e+00 71.875000 95.312500\n","01/05 07:38:32 AM valid (70.8, 0.868778250694275)\n","01/05 07:38:32 AM valid 000 9.255644e-01 70.312500 96.875000\n","01/05 07:38:33 AM valid (70.2, 0.833453474521637)\n","01/05 07:38:33 AM valid 000 2.238891e+00 34.375000 78.125000\n","01/05 07:38:33 AM valid (35.2, 2.391108507156372)\n","01/05 07:38:34 AM valid 000 1.600327e+00 48.437500 90.625000\n","01/05 07:38:34 AM valid (52.3, 1.5404600048065185)\n","01/05 07:38:34 AM valid 000 7.832810e-01 73.437500 96.875000\n","01/05 07:38:35 AM valid (76.2, 0.669116250038147)\n","01/05 07:38:35 AM valid 000 7.789270e-01 71.875000 95.312500\n","01/05 07:38:36 AM valid (76.9, 0.640728859424591)\n","01/05 07:38:36 AM valid 000 9.255644e-01 70.312500 96.875000\n","01/05 07:38:37 AM valid (70.2, 0.833453474521637)\n","01/05 07:38:37 AM valid 000 7.878034e-01 73.437500 96.875000\n","01/05 07:38:37 AM valid (75.7, 0.6917983584403992)\n","01/05 07:38:38 AM valid 000 1.145140e+00 57.812500 93.750000\n","01/05 07:38:38 AM valid (57.8, 1.1517379989624024)\n","01/05 07:38:38 AM valid 000 1.614977e+00 48.437500 89.062500\n","01/05 07:38:39 AM valid (51.5, 1.61377317237854)\n","01/05 07:38:39 AM valid 000 1.059625e+00 71.875000 95.312500\n","01/05 07:38:40 AM valid (70.8, 0.868778250694275)\n","01/05 07:38:40 AM valid 000 9.255644e-01 70.312500 96.875000\n","01/05 07:38:41 AM valid (70.2, 0.833453474521637)\n","01/05 07:38:41 AM valid 000 2.238891e+00 34.375000 78.125000\n","01/05 07:38:42 AM valid (35.2, 2.391108507156372)\n","01/05 07:38:42 AM valid 000 1.282072e+00 59.375000 92.187500\n","01/05 07:38:42 AM valid (61.2, 1.1953581466674805)\n","01/05 07:38:43 AM valid 000 8.712975e-01 73.437500 96.875000\n","01/05 07:38:43 AM valid (73.9, 0.7488262691497802)\n","01/05 07:38:43 AM valid 000 7.789270e-01 71.875000 95.312500\n","01/05 07:38:44 AM valid (76.9, 0.640728859424591)\n","{'avg': 1.0791781102657318, 'std': 0.5161212311365533, 'min': 0.640728859424591, 'max': 2.391108507156372}\n","01/05 07:38:45 AM {'test': (76.9, 0.640728859424591), 'train': (72.64, 0.784398982334137), 'edge': 6}\n","01/05 07:38:46 AM {'test': (75.8, 0.665965500831604), 'train': (72.84, 0.8027063795089722), 'edge': 12}\n","01/05 07:38:46 AM {'test': (70.2, 0.833453474521637), 'train': (72.0, 0.8307226707458496), 'edge': 5}\n","01/05 07:38:47 AM {'test': (65.3, 1.0003354473114014), 'train': (72.08, 0.8083535120010376), 'edge': 8}\n","01/05 07:38:48 AM {'test': (51.5, 1.61377317237854), 'train': (70.48, 0.8550981050491333), 'edge': 9}\n","01/05 07:38:49 AM {'test': (70.8, 0.868778250694275), 'train': (71.88, 0.8235377712249756), 'edge': 9}\n","01/05 07:38:49 AM {'test': (73.9, 0.7488262691497802), 'train': (73.7, 0.7798265787124634), 'edge': 11}\n","01/05 07:38:50 AM {'test': (70.2, 0.833453474521637), 'train': (72.0, 0.8307226707458496), 'edge': 5}\n","01/05 07:38:51 AM {'test': (61.2, 1.1953581466674805), 'train': (71.68, 0.8197456615447998), 'edge': 15}\n","01/05 07:38:52 AM {'test': (35.2, 2.391108507156372), 'train': (69.04, 0.9073664275169373), 'edge': 10}\n","01/05 07:38:52 AM generation 9\n","01/05 07:38:52 AM train 000 6.383651e-01 79.687500 100.000000\n","01/05 07:39:06 AM train 100 5.823315e-01 79.192450 99.226485\n","01/05 07:39:20 AM train weight (79.04, 0.586881057844162)\n","01/05 07:39:20 AM train 000 1.019095e+00 64.062500 93.750000\n","01/05 07:39:50 AM train (73.72, 0.7607961896896362)\n","01/05 07:39:50 AM train 000 8.167649e-01 68.750000 98.437500\n","01/05 07:40:21 AM train (72.58, 0.8025874475479126)\n","01/05 07:40:22 AM train 000 9.884446e-01 73.437500 95.312500\n","01/05 07:40:51 AM train (69.96, 0.9126687424659728)\n","01/05 07:40:52 AM train 000 8.726292e-01 73.437500 95.312500\n","01/05 07:41:22 AM train (71.24, 0.8271937100410461)\n","01/05 07:41:22 AM train 000 9.919215e-01 62.500000 98.437500\n","01/05 07:41:52 AM train (69.78, 0.868387565612793)\n","01/05 07:41:53 AM train 000 9.158593e-01 75.000000 96.875000\n","01/05 07:42:23 AM train (72.16, 0.826051904296875)\n","01/05 07:42:24 AM train 000 9.208611e-01 71.875000 98.437500\n","01/05 07:42:54 AM train (72.46, 0.8229686771392822)\n","01/05 07:42:54 AM train 000 8.503277e-01 70.312500 100.000000\n"],"name":"stdout"},{"output_type":"stream","text":["Traceback (most recent call last):\n"],"name":"stderr"},{"output_type":"stream","text":["01/05 07:43:24 AM train (70.88, 0.8839634547233581)\n","01/05 07:43:25 AM train 000 7.302281e-01 71.875000 100.000000\n","01/05 07:43:55 AM train (71.66, 0.833221339893341)\n","01/05 07:43:56 AM train 000 9.663042e-01 64.062500 98.437500\n","01/05 07:44:26 AM train (67.98, 0.9267052713394165)\n","01/05 07:44:27 AM train 000 7.306847e-01 75.000000 100.000000\n","01/05 07:44:56 AM train (74.18, 0.7548819698810577)\n","01/05 07:44:57 AM train 000 6.776437e-01 71.875000 98.437500\n","01/05 07:45:27 AM train (72.4, 0.8199134660720825)\n","01/05 07:45:28 AM train 000 8.777978e-01 68.750000 98.437500\n","01/05 07:45:57 AM train (70.34, 0.8747456256866455)\n","01/05 07:45:58 AM train 000 8.639949e-01 65.625000 98.437500\n","01/05 07:46:28 AM train (70.22, 0.897371838760376)\n","01/05 07:46:29 AM train 000 6.373045e-01 81.250000 95.312500\n","01/05 07:46:58 AM train (72.28, 0.8154128858566284)\n","01/05 07:46:59 AM train 000 8.239660e-01 71.875000 95.312500\n","01/05 07:47:29 AM train (72.46, 0.8018887614250183)\n","01/05 07:47:29 AM train 000 9.139053e-01 67.187500 98.437500\n","01/05 07:48:00 AM train (70.34, 0.895623233127594)\n","01/05 07:48:00 AM train 000 7.370748e-01 70.312500 100.000000\n","01/05 07:48:31 AM train (71.22, 0.8505522129058838)\n","01/05 07:48:31 AM train 000 6.989266e-01 76.562500 98.437500\n","01/05 07:49:01 AM train (71.86, 0.8450935215950012)\n","01/05 07:49:01 AM train 000 8.966742e-01 73.437500 98.437500\n","01/05 07:49:32 AM train (68.8, 0.9255605714797973)\n","01/05 07:49:32 AM train 000 1.038711e+00 65.625000 98.437500\n","01/05 07:50:02 AM train (74.06, 0.7569841173171997)\n","01/05 07:50:02 AM valid 000 8.762297e-01 73.437500 98.437500\n","01/05 07:50:03 AM valid (75.8, 0.6935998182296753)\n","01/05 07:50:03 AM valid 000 9.669379e-01 73.437500 95.312500\n","01/05 07:50:04 AM valid (74.4, 0.7508242015838623)\n","01/05 07:50:04 AM valid 000 1.114003e+00 59.375000 96.875000\n","01/05 07:50:05 AM valid (65.0, 1.0227403111457825)\n","01/05 07:50:05 AM valid 000 1.229865e+00 65.625000 95.312500\n","01/05 07:50:05 AM valid (59.2, 1.1802654037475586)\n","01/05 07:50:06 AM valid 000 1.968374e+00 46.875000 85.937500\n","01/05 07:50:06 AM valid (41.5, 2.1075012397766115)\n","01/05 07:50:06 AM valid 000 1.252429e+00 65.625000 95.312500\n","01/05 07:50:07 AM valid (64.1, 1.1031958780288695)\n","01/05 07:50:07 AM valid 000 1.052432e+00 67.187500 98.437500\n","01/05 07:50:08 AM valid (69.6, 0.9136400194168091)\n","01/05 07:50:08 AM valid 000 1.072578e+00 60.937500 96.875000\n","01/05 07:50:09 AM valid (66.5, 0.9743006906509399)\n","01/05 07:50:09 AM valid 000 1.769754e+00 53.125000 90.625000\n","01/05 07:50:10 AM valid (52.4, 1.6614305276870727)\n","01/05 07:50:10 AM valid 000 2.686590e+00 35.937500 73.437500\n","01/05 07:50:10 AM valid (30.5, 3.012380765914917)\n","01/05 07:50:10 AM valid 000 8.565485e-01 70.312500 96.875000\n","01/05 07:50:11 AM valid (75.9, 0.66439297914505)\n","01/05 07:50:11 AM valid 000 9.659221e-01 70.312500 95.312500\n","01/05 07:50:12 AM valid (73.9, 0.7604459652900696)\n","01/05 07:50:12 AM valid 000 1.274305e+00 53.125000 96.875000\n","01/05 07:50:13 AM valid (58.6, 1.1874752645492554)\n","01/05 07:50:13 AM valid 000 3.589099e+00 23.437500 76.562500\n","01/05 07:50:14 AM valid (22.4, 3.9927736339569093)\n","01/05 07:50:14 AM valid 000 2.018189e+00 46.875000 85.937500\n","01/05 07:50:14 AM valid (41.2, 2.1464070510864257)\n","01/05 07:50:15 AM valid 000 1.140163e+00 65.625000 95.312500\n","01/05 07:50:15 AM valid (65.4, 1.070167667388916)\n","01/05 07:50:15 AM valid 000 8.865195e-01 65.625000 98.437500\n","01/05 07:50:16 AM valid (65.1, 0.973322334766388)\n","01/05 07:50:16 AM valid 000 1.763543e+00 56.250000 92.187500\n","01/05 07:50:17 AM valid (55.6, 1.5910616054534912)\n","01/05 07:50:17 AM valid 000 1.818602e+00 51.562500 90.625000\n","01/05 07:50:18 AM valid (50.1, 1.7354293508529663)\n","01/05 07:50:18 AM valid 000 2.686590e+00 35.937500 73.437500\n","01/05 07:50:19 AM valid (30.5, 3.012380765914917)\n","01/05 07:50:19 AM valid 000 8.565485e-01 70.312500 96.875000\n","01/05 07:50:19 AM valid (75.9, 0.66439297914505)\n","{'avg': 1.1599615221977233, 'std': 0.4298767808806626, 'min': 0.66439297914505, 'max': 2.1464070510864257}\n","01/05 07:50:21 AM {'test': (75.9, 0.66439297914505), 'train': (74.18, 0.7548819698810577), 'edge': 6}\n","01/05 07:50:22 AM {'test': (73.9, 0.7604459652900696), 'train': (72.4, 0.8199134660720825), 'edge': 11}\n","01/05 07:50:22 AM {'test': (66.5, 0.9743006906509399), 'train': (70.88, 0.8839634547233581), 'edge': 7}\n","01/05 07:50:23 AM {'test': (59.2, 1.1802654037475586), 'train': (71.24, 0.8271937100410461), 'edge': 8}\n","01/05 07:50:24 AM {'test': (65.4, 1.070167667388916), 'train': (72.46, 0.8018887614250183), 'edge': 11}\n","01/05 07:50:25 AM {'test': (69.6, 0.9136400194168091), 'train': (72.46, 0.8229686771392822), 'edge': 11}\n","01/05 07:50:25 AM {'test': (66.5, 0.9743006906509399), 'train': (70.88, 0.8839634547233581), 'edge': 7}\n","01/05 07:50:26 AM {'test': (41.2, 2.1464070510864257), 'train': (72.28, 0.8154128858566284), 'edge': 9}\n","01/05 07:50:27 AM {'test': (50.1, 1.7354293508529663), 'train': (71.86, 0.8450935215950012), 'edge': 17}\n","01/05 07:50:28 AM {'test': (59.2, 1.1802654037475586), 'train': (71.24, 0.8271937100410461), 'edge': 8}\n","01/05 07:50:28 AM generation 10\n","01/05 07:50:28 AM train 000 4.900763e-01 79.687500 100.000000\n","01/05 07:50:42 AM train 100 5.589969e-01 79.919554 99.133663\n","01/05 07:50:56 AM train weight (80.0, 0.5603426660823823)\n","01/05 07:50:56 AM train 000 5.399651e-01 81.250000 98.437500\n","01/05 07:51:27 AM train (75.74, 0.7237976099014283)\n","01/05 07:51:27 AM train 000 7.467665e-01 75.000000 96.875000\n","01/05 07:51:57 AM train (74.04, 0.7548007066726684)\n","01/05 07:51:58 AM train 000 9.378700e-01 71.875000 98.437500\n","01/05 07:52:28 AM train (73.4, 0.7886398015022278)\n","01/05 07:52:29 AM train 000 1.190093e+00 57.812500 93.750000\n","01/05 07:52:59 AM train (72.58, 0.7823648700714111)\n","01/05 07:53:00 AM train 000 8.404098e-01 64.062500 98.437500\n","01/05 07:53:30 AM train (72.74, 0.7810048847198486)\n","01/05 07:53:30 AM train 000 6.772568e-01 75.000000 100.000000\n","01/05 07:54:00 AM train (75.12, 0.7420873703002929)\n","01/05 07:54:01 AM train 000 5.152808e-01 78.125000 98.437500\n","01/05 07:54:31 AM train (73.44, 0.7902574535369873)\n","01/05 07:54:32 AM train 000 1.021854e+00 65.625000 95.312500\n","01/05 07:55:02 AM train (73.84, 0.7623544649124145)\n","01/05 07:55:02 AM train 000 6.996483e-01 76.562500 98.437500\n","01/05 07:55:32 AM train (72.9, 0.7982291795730591)\n","01/05 07:55:33 AM train 000 1.105182e+00 54.687500 95.312500\n","01/05 07:56:03 AM train (72.54, 0.7824236161708832)\n","01/05 07:56:03 AM train 000 7.428710e-01 73.437500 98.437500\n","01/05 07:56:34 AM train (75.28, 0.7333418117523194)\n","01/05 07:56:34 AM train 000 8.953860e-01 73.437500 100.000000\n","01/05 07:57:04 AM train (73.92, 0.7577905768871307)\n","01/05 07:57:05 AM train 000 9.943094e-01 68.750000 98.437500\n","01/05 07:57:35 AM train (73.38, 0.7681661554336547)\n","01/05 07:57:36 AM train 000 1.098767e+00 60.937500 98.437500\n","01/05 07:58:06 AM train (73.54, 0.7882914174079895)\n","01/05 07:58:06 AM train 000 5.445737e-01 82.812500 100.000000\n","01/05 07:58:36 AM train (73.08, 0.7774274024963379)\n","01/05 07:58:37 AM train 000 1.101644e+00 62.500000 96.875000\n","01/05 07:59:07 AM train (74.54, 0.7586554008483887)\n","01/05 07:59:07 AM train 000 7.689901e-01 76.562500 96.875000\n","01/05 07:59:38 AM train (70.74, 0.8340029870986938)\n","01/05 07:59:38 AM train 000 9.051847e-01 71.875000 96.875000\n","01/05 08:00:09 AM train (73.7, 0.7830163986206055)\n","01/05 08:00:10 AM train 000 5.416083e-01 76.562500 100.000000\n","01/05 08:00:40 AM train (72.88, 0.8019660999298096)\n","01/05 08:00:41 AM train 000 8.704036e-01 73.437500 96.875000\n","01/05 08:01:10 AM train (72.54, 0.7809423083305359)\n","01/05 08:01:11 AM train 000 8.135206e-01 73.437500 96.875000\n","01/05 08:01:41 AM train (75.1, 0.7292489255905151)\n","01/05 08:01:42 AM valid 000 7.979373e-01 70.312500 96.875000\n","01/05 08:01:42 AM valid (79.7, 0.5973741188049316)\n","01/05 08:01:42 AM valid 000 7.940627e-01 73.437500 96.875000\n","01/05 08:01:43 AM valid (76.8, 0.6399139065742493)\n","01/05 08:01:43 AM valid 000 8.611361e-01 75.000000 95.312500\n","01/05 08:01:44 AM valid (71.7, 0.7779543175697327)\n","01/05 08:01:44 AM valid 000 9.949854e-01 67.187500 95.312500\n","01/05 08:01:45 AM valid (69.2, 0.8936324062347412)\n","01/05 08:01:45 AM valid 000 9.190431e-01 67.187500 95.312500\n","01/05 08:01:45 AM valid (71.7, 0.8152323164939881)\n","01/05 08:01:46 AM valid 000 8.472948e-01 71.875000 98.437500\n","01/05 08:01:46 AM valid (74.5, 0.7038222126960755)\n","01/05 08:01:46 AM valid 000 8.611361e-01 75.000000 95.312500\n","01/05 08:01:47 AM valid (71.7, 0.7779543175697327)\n","01/05 08:01:47 AM valid 000 1.518365e+00 54.687500 92.187500\n","01/05 08:01:48 AM valid (52.6, 1.4305934047698974)\n","01/05 08:01:48 AM valid 000 1.460865e+00 53.125000 93.750000\n","01/05 08:01:49 AM valid (54.9, 1.3876099319458008)\n","01/05 08:01:49 AM valid 000 9.949854e-01 67.187500 95.312500\n","01/05 08:01:50 AM valid (69.2, 0.8936324062347412)\n","01/05 08:01:50 AM valid 000 7.979373e-01 70.312500 96.875000\n","01/05 08:01:50 AM valid (79.7, 0.5973741188049316)\n","01/05 08:01:51 AM valid 000 7.940627e-01 73.437500 96.875000\n","01/05 08:01:51 AM valid (76.8, 0.6399139065742493)\n","01/05 08:01:51 AM valid 000 2.385347e+00 32.812500 76.562500\n","01/05 08:01:52 AM valid (28.9, 2.6890000019073486)\n","01/05 08:01:52 AM valid 000 1.761225e+00 46.875000 89.062500\n","01/05 08:01:53 AM valid (52.0, 1.6413254222869873)\n","01/05 08:01:53 AM valid 000 9.190431e-01 67.187500 95.312500\n","01/05 08:01:54 AM valid (71.7, 0.8152323164939881)\n","01/05 08:01:54 AM valid 000 8.472948e-01 71.875000 98.437500\n","01/05 08:01:54 AM valid (74.5, 0.7038222126960755)\n","01/05 08:01:55 AM valid 000 2.617530e+00 28.125000 76.562500\n","01/05 08:01:55 AM valid (27.8, 2.8938263511657714)\n","01/05 08:01:55 AM valid 000 1.282873e+00 59.375000 93.750000\n","01/05 08:01:56 AM valid (62.4, 1.1797497668266297)\n","01/05 08:01:56 AM valid 000 1.250884e+00 51.562500 93.750000\n","01/05 08:01:57 AM valid (61.1, 1.148767391204834)\n","01/05 08:01:57 AM valid 000 9.949854e-01 67.187500 95.312500\n","01/05 08:01:58 AM valid (69.2, 0.8936324062347412)\n","01/05 08:01:58 AM valid 000 7.979373e-01 70.312500 96.875000\n","01/05 08:01:59 AM valid (79.7, 0.5973741188049316)\n","{'avg': 0.8917719338893889, 'std': 0.2744787187123534, 'min': 0.5973741188049316, 'max': 1.4305934047698974}\n","01/05 08:01:59 AM {'test': (79.7, 0.5973741188049316), 'train': (75.74, 0.7237976099014283), 'edge': 6}\n","01/05 08:02:00 AM {'test': (76.8, 0.6399139065742493), 'train': (74.04, 0.7548007066726684), 'edge': 11}\n","01/05 08:02:01 AM {'test': (71.7, 0.7779543175697327), 'train': (73.4, 0.7886398015022278), 'edge': 7}\n","01/05 08:02:02 AM {'test': (69.2, 0.8936324062347412), 'train': (72.58, 0.7823648700714111), 'edge': 8}\n","01/05 08:02:02 AM {'test': (71.7, 0.8152323164939881), 'train': (72.74, 0.7810048847198486), 'edge': 11}\n","01/05 08:02:03 AM {'test': (52.6, 1.4305934047698974), 'train': (73.84, 0.7623544649124145), 'edge': 9}\n","01/05 08:02:04 AM {'test': (71.7, 0.7779543175697327), 'train': (73.4, 0.7886398015022278), 'edge': 7}\n","01/05 08:02:05 AM {'test': (54.9, 1.3876099319458008), 'train': (72.9, 0.7982291795730591), 'edge': 16}\n","01/05 08:02:05 AM {'test': (74.5, 0.7038222126960755), 'train': (75.12, 0.7420873703002929), 'edge': 11}\n","01/05 08:02:06 AM {'test': (69.2, 0.8936324062347412), 'train': (72.58, 0.7823648700714111), 'edge': 8}\n","01/05 08:02:06 AM generation 11\n","01/05 08:02:07 AM train 000 4.883794e-01 84.375000 100.000000\n","01/05 08:02:21 AM train 100 5.325013e-01 81.311881 99.149134\n","01/05 08:02:34 AM train weight (81.184, 0.5370746831607819)\n","01/05 08:02:35 AM train 000 9.518923e-01 67.187500 95.312500\n","01/05 08:03:05 AM train (74.1, 0.7399512738227845)\n","01/05 08:03:05 AM train 000 1.027886e+00 62.500000 100.000000\n","01/05 08:03:36 AM train (73.58, 0.7722475593566894)\n","01/05 08:03:37 AM train 000 7.051374e-01 71.875000 98.437500\n","01/05 08:04:07 AM train (73.76, 0.7890924043655395)\n","01/05 08:04:08 AM train 000 7.967962e-01 73.437500 96.875000\n","01/05 08:04:38 AM train (73.0, 0.7781854888916016)\n","01/05 08:04:39 AM train 000 7.814012e-01 70.312500 100.000000\n","01/05 08:05:09 AM train (72.54, 0.799132473564148)\n","01/05 08:05:09 AM train 000 7.187909e-01 70.312500 98.437500\n","01/05 08:05:40 AM train (73.06, 0.7646786926269531)\n","01/05 08:05:40 AM train 000 1.015414e+00 65.625000 98.437500\n","01/05 08:06:11 AM train (73.7, 0.7921368232727051)\n","01/05 08:06:11 AM train 000 1.110862e+00 64.062500 96.875000\n","01/05 08:06:42 AM train (71.54, 0.8287366723060607)\n","01/05 08:06:42 AM train 000 5.765358e-01 76.562500 100.000000\n","01/05 08:07:13 AM train (74.68, 0.7625278591156006)\n","01/05 08:07:13 AM train 000 7.644860e-01 79.687500 98.437500\n","01/05 08:07:43 AM train (72.62, 0.7807508359909058)\n","01/05 08:07:44 AM train 000 9.500865e-01 73.437500 96.875000\n","01/05 08:08:14 AM train (74.92, 0.7405160369873047)\n","01/05 08:08:15 AM train 000 8.014123e-01 70.312500 98.437500\n"],"name":"stdout"},{"output_type":"stream","text":["Traceback (most recent call last):\n","  File \"/usr/lib/python3.6/multiprocessing/queues.py\", line 240, in _feed\n","    send_bytes(obj)\n"],"name":"stderr"},{"output_type":"stream","text":["01/05 08:08:45 AM train (73.64, 0.742895547580719)\n","01/05 08:08:46 AM train 000 8.069111e-01 75.000000 96.875000\n","01/05 08:09:16 AM train (73.44, 0.7908657167434693)\n","01/05 08:09:17 AM train 000 9.030744e-01 71.875000 96.875000\n","01/05 08:09:47 AM train (73.48, 0.7756228448867798)\n","01/05 08:09:48 AM train 000 7.213029e-01 78.125000 96.875000\n","01/05 08:10:18 AM train (73.9, 0.7607159911155701)\n","01/05 08:10:18 AM train 000 1.077814e+00 59.375000 96.875000\n","01/05 08:10:49 AM train (73.6, 0.77371383228302)\n","01/05 08:10:49 AM train 000 7.176098e-01 79.687500 100.000000\n","01/05 08:11:20 AM train (73.44, 0.7844437700271606)\n","01/05 08:11:20 AM train 000 6.874749e-01 75.000000 100.000000\n","01/05 08:11:51 AM train (72.58, 0.790436556148529)\n","01/05 08:11:51 AM train 000 6.151835e-01 76.562500 100.000000\n","01/05 08:12:22 AM train (73.54, 0.7825641918182373)\n","01/05 08:12:22 AM train 000 6.034923e-01 79.687500 100.000000\n","01/05 08:12:52 AM train (73.74, 0.7784202970504761)\n","01/05 08:12:53 AM train 000 6.075330e-01 76.562500 100.000000\n","01/05 08:13:23 AM train (75.34, 0.7205573708534241)\n","01/05 08:13:24 AM valid 000 8.034586e-01 73.437500 95.312500\n","01/05 08:13:24 AM valid (77.9, 0.6003473286628723)\n","01/05 08:13:24 AM valid 000 7.954473e-01 76.562500 96.875000\n","01/05 08:13:25 AM valid (78.1, 0.670210949420929)\n","01/05 08:13:25 AM valid 000 9.232147e-01 70.312500 95.312500\n","01/05 08:13:26 AM valid (71.4, 0.8313312177658081)\n","01/05 08:13:26 AM valid 000 1.034395e+00 73.437500 95.312500\n","01/05 08:13:27 AM valid (68.3, 0.9412676038742065)\n","01/05 08:13:27 AM valid 000 9.970070e-01 73.437500 93.750000\n","01/05 08:13:27 AM valid (71.6, 0.8666219258308411)\n","01/05 08:13:28 AM valid 000 1.534356e+00 54.687500 92.187500\n","01/05 08:13:28 AM valid (53.6, 1.4560513067245484)\n","01/05 08:13:28 AM valid 000 9.232147e-01 70.312500 95.312500\n","01/05 08:13:29 AM valid (71.4, 0.8313312177658081)\n","01/05 08:13:29 AM valid 000 1.606011e+00 54.687500 93.750000\n","01/05 08:13:30 AM valid (52.9, 1.5107426776885986)\n","01/05 08:13:30 AM valid 000 8.859283e-01 68.750000 96.875000\n","01/05 08:13:31 AM valid (73.0, 0.7812841610908509)\n","01/05 08:13:31 AM valid 000 1.034395e+00 73.437500 95.312500\n","01/05 08:13:32 AM valid (68.3, 0.9412676038742065)\n","01/05 08:13:32 AM valid 000 7.819299e-01 73.437500 95.312500\n","01/05 08:13:33 AM valid (77.9, 0.653614673614502)\n","01/05 08:13:33 AM valid 000 8.080521e-01 75.000000 96.875000\n","01/05 08:13:34 AM valid (77.5, 0.623029263496399)\n","01/05 08:13:34 AM valid 000 9.232147e-01 70.312500 95.312500\n","01/05 08:13:34 AM valid (71.4, 0.8313312177658081)\n","01/05 08:13:35 AM valid 000 1.135965e+00 71.875000 95.312500\n","01/05 08:13:35 AM valid (64.8, 1.0552744159698486)\n","01/05 08:13:35 AM valid 000 9.442009e-01 73.437500 95.312500\n","01/05 08:13:36 AM valid (73.1, 0.812521611213684)\n","01/05 08:13:36 AM valid 000 1.534356e+00 54.687500 92.187500\n","01/05 08:13:37 AM valid (53.6, 1.4560513067245484)\n","01/05 08:13:37 AM valid 000 8.138341e-01 75.000000 93.750000\n","01/05 08:13:38 AM valid (74.0, 0.7374369072914123)\n","01/05 08:13:38 AM valid 000 1.731460e+00 53.125000 90.625000\n","01/05 08:13:39 AM valid (49.7, 1.711156925201416)\n","01/05 08:13:39 AM valid 000 1.268517e+00 62.500000 92.187500\n","01/05 08:13:40 AM valid (61.1, 1.2114010381698608)\n","01/05 08:13:40 AM valid 000 9.367808e-01 71.875000 95.312500\n","01/05 08:13:40 AM valid (72.2, 0.830398768901825)\n","01/05 08:13:41 AM valid 000 7.876405e-01 73.437500 96.875000\n","01/05 08:13:41 AM valid (79.4, 0.591566611289978)\n","{'avg': 0.9567556346416474, 'std': 0.3397741459427692, 'min': 0.591566611289978, 'max': 1.711156925201416}\n","01/05 08:13:42 AM {'test': (79.4, 0.591566611289978), 'train': (75.34, 0.7205573708534241), 'edge': 6}\n","01/05 08:13:43 AM {'test': (78.1, 0.670210949420929), 'train': (73.58, 0.7722475593566894), 'edge': 12}\n","01/05 08:13:43 AM {'test': (71.4, 0.8313312177658081), 'train': (73.76, 0.7890924043655395), 'edge': 7}\n","01/05 08:13:44 AM {'test': (71.6, 0.8666219258308411), 'train': (72.54, 0.799132473564148), 'edge': 12}\n","01/05 08:13:46 AM {'test': (64.8, 1.0552744159698486), 'train': (73.48, 0.7756228448867798), 'edge': 9}\n","01/05 08:13:47 AM {'test': (74.0, 0.7374369072914123), 'train': (73.44, 0.7844437700271606), 'edge': 12}\n","01/05 08:13:48 AM {'test': (73.0, 0.7812841610908509), 'train': (74.68, 0.7625278591156006), 'edge': 11}\n","01/05 08:13:48 AM {'test': (53.6, 1.4560513067245484), 'train': (73.06, 0.7646786926269531), 'edge': 9}\n","01/05 08:13:49 AM {'test': (71.6, 0.8666219258308411), 'train': (72.54, 0.799132473564148), 'edge': 12}\n","01/05 08:13:50 AM {'test': (49.7, 1.711156925201416), 'train': (72.58, 0.790436556148529), 'edge': 9}\n","01/05 08:13:50 AM generation 12\n","01/05 08:13:51 AM train 000 5.696020e-01 76.562500 100.000000\n","01/05 08:14:05 AM train 100 5.201513e-01 81.528465 99.288366\n","01/05 08:14:18 AM train weight (82.184, 0.5080774955558777)\n","01/05 08:14:19 AM train 000 7.664148e-01 76.562500 100.000000\n","01/05 08:14:49 AM train (75.8, 0.69762671585083)\n","01/05 08:14:50 AM train 000 1.111268e+00 64.062500 98.437500\n","01/05 08:15:20 AM train (74.5, 0.7587668077468872)\n","01/05 08:15:21 AM train 000 6.410373e-01 79.687500 96.875000\n","01/05 08:15:51 AM train (73.78, 0.7876439960479736)\n","01/05 08:15:52 AM train 000 4.610093e-01 84.375000 100.000000\n","01/05 08:16:23 AM train (73.1, 0.7976372251510621)\n","01/05 08:16:23 AM train 000 9.204478e-01 65.625000 98.437500\n","01/05 08:16:54 AM train (73.06, 0.7685149047851563)\n","01/05 08:16:55 AM train 000 9.292554e-01 68.750000 100.000000\n","01/05 08:17:25 AM train (74.64, 0.7461101757049561)\n","01/05 08:17:26 AM train 000 8.073682e-01 71.875000 98.437500\n","01/05 08:17:56 AM train (75.54, 0.7194929825782775)\n","01/05 08:17:57 AM train 000 1.103550e+00 64.062500 100.000000\n","01/05 08:18:27 AM train (74.42, 0.7392380199432373)\n","01/05 08:18:28 AM train 000 8.500846e-01 78.125000 93.750000\n","01/05 08:18:59 AM train (73.78, 0.7745263852119446)\n","01/05 08:18:59 AM train 000 6.824163e-01 78.125000 98.437500\n","01/05 08:19:30 AM train (73.5, 0.763912675857544)\n","01/05 08:19:30 AM train 000 5.584189e-01 81.250000 100.000000\n","01/05 08:20:00 AM train (76.26, 0.681509684753418)\n","01/05 08:20:01 AM train 000 6.839021e-01 79.687500 98.437500\n","01/05 08:20:31 AM train (74.8, 0.7519374109268189)\n","01/05 08:20:31 AM train 000 8.570250e-01 70.312500 100.000000\n","01/05 08:21:01 AM train (73.64, 0.7952372133255005)\n","01/05 08:21:02 AM train 000 6.959571e-01 71.875000 98.437500\n","01/05 08:21:32 AM train (73.18, 0.7955934371948242)\n","01/05 08:21:32 AM train 000 6.894363e-01 78.125000 100.000000\n","01/05 08:22:03 AM train (74.24, 0.7670008939743042)\n","01/05 08:22:03 AM train 000 7.003691e-01 75.000000 100.000000\n","01/05 08:22:33 AM train (73.5, 0.7770556043624878)\n","01/05 08:22:34 AM train 000 8.917394e-01 65.625000 96.875000\n","01/05 08:23:04 AM train (72.0, 0.8182499526977539)\n","01/05 08:23:04 AM train 000 6.459754e-01 81.250000 96.875000\n","01/05 08:23:35 AM train (76.82, 0.6897957095146179)\n","01/05 08:23:35 AM train 000 6.327863e-01 76.562500 98.437500\n","01/05 08:24:05 AM train (73.58, 0.7799189083576202)\n","01/05 08:24:06 AM train 000 7.541113e-01 76.562500 98.437500\n","01/05 08:24:36 AM train (74.6, 0.7514517142295838)\n","01/05 08:24:37 AM train 000 7.254824e-01 76.562500 98.437500\n","01/05 08:25:07 AM train (76.0, 0.7067795866966248)\n","01/05 08:25:07 AM valid 000 7.635565e-01 78.125000 96.875000\n","01/05 08:25:08 AM valid (79.4, 0.5864813466072083)\n","01/05 08:25:08 AM valid 000 7.957489e-01 71.875000 96.875000\n","01/05 08:25:08 AM valid (76.1, 0.6831536045074463)\n","01/05 08:25:09 AM valid 000 8.623271e-01 71.875000 95.312500\n","01/05 08:25:09 AM valid (70.3, 0.8264809465408325)\n","01/05 08:25:09 AM valid 000 9.748316e-01 68.750000 96.875000\n","01/05 08:25:10 AM valid (67.8, 0.9591863260269166)\n","01/05 08:25:10 AM valid 000 1.004018e+00 73.437500 95.312500\n","01/05 08:25:11 AM valid (66.2, 0.985401982307434)\n","01/05 08:25:11 AM valid 000 7.338904e-01 76.562500 96.875000\n","01/05 08:25:12 AM valid (74.0, 0.7263049583435058)\n","01/05 08:25:12 AM valid 000 8.708854e-01 73.437500 98.437500\n","01/05 08:25:12 AM valid (72.8, 0.7949725728034973)\n","01/05 08:25:13 AM valid 000 1.726394e+00 46.875000 93.750000\n","01/05 08:25:13 AM valid (44.8, 1.7970364246368409)\n","01/05 08:25:14 AM valid 000 1.016818e+00 68.750000 95.312500\n","01/05 08:25:14 AM valid (66.8, 1.0037561221122742)\n","01/05 08:25:14 AM valid 000 1.851606e+00 45.312500 87.500000\n","01/05 08:25:15 AM valid (46.4, 1.9218381175994872)\n","01/05 08:25:15 AM valid 000 7.635565e-01 78.125000 96.875000\n","01/05 08:25:16 AM valid (79.4, 0.5864813466072083)\n","01/05 08:25:16 AM valid 000 7.957489e-01 71.875000 96.875000\n","01/05 08:25:17 AM valid (76.1, 0.6831536045074463)\n","01/05 08:25:17 AM valid 000 1.016874e+00 65.625000 95.312500\n","01/05 08:25:17 AM valid (63.9, 1.0712583599090577)\n","01/05 08:25:18 AM valid 000 1.126450e+00 65.625000 93.750000\n","01/05 08:25:18 AM valid (65.9, 1.0995842733383179)\n","01/05 08:25:18 AM valid 000 9.508535e-01 67.187500 95.312500\n","01/05 08:25:19 AM valid (71.6, 0.811304832458496)\n","01/05 08:25:19 AM valid 000 1.108007e+00 67.187500 95.312500\n","01/05 08:25:20 AM valid (58.0, 1.277344259262085)\n","01/05 08:25:20 AM valid 000 1.541334e+00 53.125000 93.750000\n","01/05 08:25:21 AM valid (53.3, 1.537204873085022)\n","01/05 08:25:21 AM valid 000 1.002615e+00 68.750000 96.875000\n","01/05 08:25:21 AM valid (71.1, 0.8433351783752442)\n","01/05 08:25:22 AM valid 000 1.016818e+00 68.750000 95.312500\n","01/05 08:25:22 AM valid (66.8, 1.0037561221122742)\n","01/05 08:25:22 AM valid 000 1.902126e+00 46.875000 87.500000\n","01/05 08:25:23 AM valid (45.6, 1.971927936553955)\n","01/05 08:25:23 AM valid 000 7.635565e-01 78.125000 96.875000\n","01/05 08:25:24 AM valid (79.4, 0.5864813466072083)\n","{'avg': 0.8238086255550385, 'std': 0.13952289036996335, 'min': 0.5864813466072083, 'max': 0.985401982307434}\n","01/05 08:25:25 AM {'test': (79.4, 0.5864813466072083), 'train': (75.8, 0.69762671585083), 'edge': 6}\n","01/05 08:25:25 AM {'test': (76.1, 0.6831536045074463), 'train': (74.5, 0.7587668077468872), 'edge': 12}\n","01/05 08:25:26 AM {'test': (70.3, 0.8264809465408325), 'train': (73.78, 0.7876439960479736), 'edge': 7}\n","01/05 08:25:27 AM {'test': (66.2, 0.985401982307434), 'train': (73.06, 0.7685149047851563), 'edge': 10}\n","01/05 08:25:28 AM {'test': (67.8, 0.9591863260269166), 'train': (73.1, 0.7976372251510621), 'edge': 11}\n","01/05 08:25:28 AM {'test': (74.0, 0.7263049583435058), 'train': (74.64, 0.7461101757049561), 'edge': 12}\n","01/05 08:25:29 AM {'test': (71.1, 0.8433351783752442), 'train': (76.82, 0.6897957095146179), 'edge': 5}\n","01/05 08:25:30 AM {'test': (67.8, 0.9591863260269166), 'train': (73.1, 0.7976372251510621), 'edge': 11}\n","01/05 08:25:31 AM {'test': (66.2, 0.985401982307434), 'train': (73.06, 0.7685149047851563), 'edge': 10}\n","01/05 08:25:31 AM {'test': (76.1, 0.6831536045074463), 'train': (74.5, 0.7587668077468872), 'edge': 12}\n","01/05 08:25:32 AM generation 13\n","01/05 08:25:32 AM train 000 4.638491e-01 84.375000 100.000000\n","01/05 08:25:46 AM train 100 4.705671e-01 83.508663 99.427599\n","01/05 08:25:59 AM train weight (83.568, 0.46836080865859986)\n","01/05 08:26:00 AM train 000 7.847483e-01 73.437500 98.437500\n","01/05 08:26:30 AM train (74.54, 0.7469190698623657)\n","01/05 08:26:30 AM train 000 1.120175e+00 67.187500 95.312500\n","01/05 08:27:01 AM train (74.5, 0.7730237090110779)\n","01/05 08:27:01 AM train 000 1.014126e+00 68.750000 96.875000\n","01/05 08:27:31 AM train (74.56, 0.7622008547782898)\n","01/05 08:27:32 AM train 000 1.014220e+00 64.062500 96.875000\n","01/05 08:28:02 AM train (72.24, 0.8025603456497192)\n","01/05 08:28:03 AM train 000 7.347846e-01 78.125000 98.437500\n","01/05 08:28:33 AM train (73.22, 0.7999442054748536)\n","01/05 08:28:33 AM train 000 5.894865e-01 78.125000 98.437500\n","01/05 08:29:03 AM train (74.5, 0.7806394356727601)\n","01/05 08:29:04 AM train 000 7.621604e-01 73.437500 98.437500\n","01/05 08:29:34 AM train (75.04, 0.7250466907978058)\n","01/05 08:29:35 AM train 000 7.676654e-01 68.750000 100.000000\n","01/05 08:30:05 AM train (72.46, 0.8110620666503906)\n","01/05 08:30:06 AM train 000 5.963458e-01 78.125000 98.437500\n","01/05 08:30:36 AM train (72.44, 0.7998625622272492)\n","01/05 08:30:36 AM train 000 6.282105e-01 75.000000 100.000000\n","01/05 08:31:06 AM train (73.64, 0.7937297199249268)\n","01/05 08:31:07 AM train 000 5.530213e-01 84.375000 98.437500\n","01/05 08:31:37 AM train (74.96, 0.7516480993270874)\n","01/05 08:31:38 AM train 000 8.253036e-01 75.000000 95.312500\n","01/05 08:32:08 AM train (73.82, 0.7767692619323731)\n","01/05 08:32:08 AM train 000 5.242532e-01 82.812500 100.000000\n","01/05 08:32:39 AM train (73.8, 0.7862363008499146)\n","01/05 08:32:39 AM train 000 8.784019e-01 75.000000 96.875000\n","01/05 08:33:09 AM train (73.14, 0.7978236570358276)\n","01/05 08:33:10 AM train 000 6.045145e-01 81.250000 100.000000\n","01/05 08:33:40 AM train (74.16, 0.766935408115387)\n","01/05 08:33:41 AM train 000 6.950414e-01 76.562500 100.000000\n","01/05 08:34:11 AM train (74.7, 0.7710624313354493)\n","01/05 08:34:11 AM train 000 9.643105e-01 73.437500 98.437500\n","01/05 08:34:42 AM train (75.56, 0.7219298515319824)\n","01/05 08:34:42 AM train 000 7.915096e-01 68.750000 98.437500\n","01/05 08:35:12 AM train (75.38, 0.7387065916061402)\n","01/05 08:35:13 AM train 000 9.095049e-01 70.312500 95.312500\n","01/05 08:35:43 AM train (72.18, 0.793699165725708)\n","01/05 08:35:43 AM train 000 7.234760e-01 68.750000 98.437500\n","01/05 08:36:14 AM train (73.98, 0.7738762910842896)\n","01/05 08:36:14 AM train 000 7.954332e-01 78.125000 98.437500\n","01/05 08:36:44 AM train (74.68, 0.7370096092224121)\n","01/05 08:36:44 AM valid 000 7.655474e-01 76.562500 95.312500\n","01/05 08:36:45 AM valid (77.6, 0.6240659332275391)\n","01/05 08:36:45 AM valid 000 7.597615e-01 75.000000 98.437500\n","01/05 08:36:46 AM valid (75.5, 0.713600652217865)\n","01/05 08:36:46 AM valid 000 8.220354e-01 71.875000 96.875000\n","01/05 08:36:46 AM valid (71.1, 0.8130417642593384)\n","01/05 08:36:47 AM valid 000 9.898885e-01 71.875000 96.875000\n","01/05 08:36:47 AM valid (67.0, 0.9230334897041321)\n","01/05 08:36:47 AM valid 000 8.645194e-01 71.875000 95.312500\n","01/05 08:36:48 AM valid (73.7, 0.8003898057937622)\n","01/05 08:36:48 AM valid 000 8.368252e-01 75.000000 93.750000\n","01/05 08:36:49 AM valid (71.3, 0.8572258501052856)\n","01/05 08:36:49 AM valid 000 9.438859e-01 70.312500 95.312500\n","01/05 08:36:50 AM valid (74.8, 0.7730982775688171)\n","01/05 08:36:50 AM valid 000 8.645194e-01 71.875000 95.312500\n","01/05 08:36:50 AM valid (73.7, 0.8003898057937622)\n","01/05 08:36:51 AM valid 000 9.898885e-01 71.875000 96.875000\n","01/05 08:36:51 AM valid (67.0, 0.9230334897041321)\n","01/05 08:36:51 AM valid 000 7.597615e-01 75.000000 98.437500\n","01/05 08:36:52 AM valid (75.5, 0.713600652217865)\n","01/05 08:36:52 AM valid 000 8.051118e-01 73.437500 95.312500\n","01/05 08:36:53 AM valid (74.1, 0.7200500187873841)\n","01/05 08:36:53 AM valid 000 8.486800e-01 70.312500 93.750000\n","01/05 08:36:54 AM valid (74.0, 0.7524588232040406)\n","01/05 08:36:54 AM valid 000 8.220354e-01 71.875000 96.875000\n","01/05 08:36:54 AM valid (71.1, 0.8130417642593384)\n","01/05 08:36:55 AM valid 000 9.898885e-01 71.875000 96.875000\n","01/05 08:36:55 AM valid (67.0, 0.9230334897041321)\n","01/05 08:36:55 AM valid 000 1.677657e+00 56.250000 90.625000\n","01/05 08:36:56 AM valid (51.9, 1.684485767364502)\n","01/05 08:36:56 AM valid 000 1.161971e+00 64.062500 95.312500\n","01/05 08:36:57 AM valid (58.6, 1.2947181034088135)\n","01/05 08:36:57 AM valid 000 9.430049e-01 70.312500 95.312500\n","01/05 08:36:58 AM valid (72.2, 0.8187751927375794)\n","01/05 08:36:58 AM valid 000 7.815794e-01 73.437500 96.875000\n","01/05 08:36:58 AM valid (75.2, 0.6956443123817444)\n","01/05 08:36:59 AM valid 000 9.102407e-01 65.625000 96.875000\n","01/05 08:36:59 AM valid (71.3, 0.8153986206054687)\n","01/05 08:36:59 AM valid 000 1.353799e+00 59.375000 93.750000\n","01/05 08:37:00 AM valid (58.4, 1.3423295917510987)\n","01/05 08:37:00 AM valid 000 7.655474e-01 76.562500 95.312500\n","01/05 08:37:01 AM valid (77.6, 0.6240659332275391)\n","{'avg': 0.7882411142349243, 'std': 0.09458430660690165, 'min': 0.6240659332275391, 'max': 0.9230334897041321}\n","01/05 08:37:02 AM {'test': (77.6, 0.6240659332275391), 'train': (74.54, 0.7469190698623657), 'edge': 6}\n","01/05 08:37:02 AM {'test': (75.5, 0.713600652217865), 'train': (74.5, 0.7730237090110779), 'edge': 12}\n","01/05 08:37:03 AM {'test': (71.1, 0.8130417642593384), 'train': (74.56, 0.7622008547782898), 'edge': 7}\n","01/05 08:37:04 AM {'test': (67.0, 0.9230334897041321), 'train': (72.24, 0.8025603456497192), 'edge': 10}\n","01/05 08:37:05 AM {'test': (73.7, 0.8003898057937622), 'train': (73.22, 0.7999442054748536), 'edge': 11}\n","01/05 08:37:05 AM {'test': (71.3, 0.8572258501052856), 'train': (74.5, 0.7806394356727601), 'edge': 12}\n","01/05 08:37:06 AM {'test': (72.2, 0.8187751927375794), 'train': (75.56, 0.7219298515319824), 'edge': 13}\n","01/05 08:37:07 AM {'test': (75.2, 0.6956443123817444), 'train': (75.38, 0.7387065916061402), 'edge': 5}\n","01/05 08:37:08 AM {'test': (67.0, 0.9230334897041321), 'train': (72.24, 0.8025603456497192), 'edge': 10}\n","01/05 08:37:08 AM {'test': (75.5, 0.713600652217865), 'train': (74.5, 0.7730237090110779), 'edge': 12}\n","01/05 08:37:09 AM generation 14\n","01/05 08:37:09 AM train 000 3.736221e-01 85.937500 100.000000\n","01/05 08:37:23 AM train 100 4.458895e-01 84.204827 99.474010\n","01/05 08:37:36 AM train weight (84.296, 0.4485449244117737)\n","01/05 08:37:37 AM train 000 6.528810e-01 76.562500 98.437500\n"],"name":"stdout"},{"output_type":"stream","text":["Traceback (most recent call last):\n"],"name":"stderr"},{"output_type":"stream","text":["01/05 08:38:07 AM train (76.76, 0.6991744176387786)\n","01/05 08:38:08 AM train 000 5.994915e-01 75.000000 100.000000\n","01/05 08:38:38 AM train (74.92, 0.7575964071273804)\n","01/05 08:38:39 AM train 000 6.708825e-01 76.562500 100.000000\n","01/05 08:39:09 AM train (74.14, 0.7856560647964478)\n","01/05 08:39:10 AM train 000 5.928392e-01 82.812500 95.312500\n","01/05 08:39:40 AM train (72.94, 0.7879031390190124)\n","01/05 08:39:41 AM train 000 8.726709e-01 73.437500 96.875000\n","01/05 08:40:11 AM train (72.5, 0.8091290130615234)\n","01/05 08:40:12 AM train 000 7.465899e-01 75.000000 100.000000\n","01/05 08:40:42 AM train (73.68, 0.7684847085475922)\n","01/05 08:40:43 AM train 000 7.399271e-01 76.562500 98.437500\n","01/05 08:41:13 AM train (75.38, 0.7148163101196289)\n","01/05 08:41:13 AM train 000 6.626895e-01 75.000000 100.000000\n","01/05 08:41:44 AM train (75.58, 0.714370786857605)\n","01/05 08:41:44 AM train 000 1.101524e+00 64.062500 96.875000\n","01/05 08:42:15 AM train (73.9, 0.7629159048080444)\n","01/05 08:42:15 AM train 000 7.749673e-01 75.000000 100.000000\n","01/05 08:42:46 AM train (74.18, 0.7713108722686768)\n","01/05 08:42:47 AM train 000 5.435196e-01 81.250000 98.437500\n","01/05 08:43:17 AM train (74.8, 0.7481132306575775)\n","01/05 08:43:18 AM train 000 7.038716e-01 78.125000 95.312500\n","01/05 08:43:48 AM train (75.72, 0.7299021797180176)\n","01/05 08:43:48 AM train 000 4.781822e-01 79.687500 100.000000\n","01/05 08:44:18 AM train (74.9, 0.7546924701690674)\n","01/05 08:44:19 AM train 000 6.706172e-01 76.562500 98.437500\n","01/05 08:44:49 AM train (73.06, 0.7897349064350128)\n","01/05 08:44:50 AM train 000 7.608827e-01 75.000000 100.000000\n","01/05 08:45:20 AM train (76.14, 0.7106078807353974)\n","01/05 08:45:21 AM train 000 8.423695e-01 68.750000 96.875000\n","01/05 08:45:51 AM train (70.1, 0.912254479598999)\n","01/05 08:45:51 AM train 000 8.171881e-01 70.312500 96.875000\n","01/05 08:46:22 AM train (74.52, 0.7532834021568299)\n","01/05 08:46:22 AM train 000 7.040881e-01 75.000000 96.875000\n","01/05 08:46:52 AM train (75.8, 0.7186043537139892)\n","01/05 08:46:53 AM train 000 1.022912e+00 71.875000 96.875000\n","01/05 08:47:23 AM train (73.02, 0.7975583296775818)\n","01/05 08:47:24 AM train 000 4.497072e-01 85.937500 100.000000\n","01/05 08:47:54 AM train (75.18, 0.7299813409805298)\n","01/05 08:47:55 AM train 000 7.793684e-01 73.437500 98.437500\n","01/05 08:48:25 AM train (76.16, 0.7018873231887818)\n","01/05 08:48:26 AM valid 000 7.005218e-01 76.562500 95.312500\n","01/05 08:48:26 AM valid (81.5, 0.5448311614990234)\n","01/05 08:48:26 AM valid 000 6.983949e-01 79.687500 98.437500\n","01/05 08:48:27 AM valid (76.5, 0.6929754991531372)\n","01/05 08:48:27 AM valid 000 9.603662e-01 70.312500 93.750000\n","01/05 08:48:28 AM valid (70.7, 0.85306884765625)\n","01/05 08:48:28 AM valid 000 9.343436e-01 76.562500 95.312500\n","01/05 08:48:29 AM valid (70.3, 0.8487840919494629)\n","01/05 08:48:29 AM valid 000 7.658279e-01 73.437500 95.312500\n","01/05 08:48:29 AM valid (74.8, 0.7317329621315003)\n","01/05 08:48:30 AM valid 000 7.835326e-01 75.000000 95.312500\n","01/05 08:48:30 AM valid (71.9, 0.7807559595108032)\n","01/05 08:48:30 AM valid 000 7.841840e-01 71.875000 95.312500\n","01/05 08:48:31 AM valid (76.6, 0.6382144546508789)\n","01/05 08:48:31 AM valid 000 7.433512e-01 75.000000 98.437500\n","01/05 08:48:32 AM valid (78.1, 0.6381540584564209)\n","01/05 08:48:32 AM valid 000 8.982054e-01 76.562500 95.312500\n","01/05 08:48:33 AM valid (70.6, 0.8121055417060852)\n","01/05 08:48:33 AM valid 000 6.983949e-01 79.687500 98.437500\n","01/05 08:48:34 AM valid (76.5, 0.6929754991531372)\n","01/05 08:48:34 AM valid 000 7.394872e-01 76.562500 98.437500\n","01/05 08:48:34 AM valid (76.7, 0.709548991203308)\n","01/05 08:48:35 AM valid 000 7.695138e-01 81.250000 96.875000\n","01/05 08:48:35 AM valid (78.5, 0.6200092711448669)\n","01/05 08:48:35 AM valid 000 8.750756e-01 73.437500 95.312500\n","01/05 08:48:36 AM valid (73.6, 0.7790158052444458)\n","01/05 08:48:36 AM valid 000 8.982054e-01 76.562500 95.312500\n","01/05 08:48:37 AM valid (70.6, 0.8121055417060852)\n","01/05 08:48:37 AM valid 000 8.165926e-01 73.437500 95.312500\n","01/05 08:48:38 AM valid (79.9, 0.6355853323936462)\n","01/05 08:48:38 AM valid 000 1.479656e+00 56.250000 92.187500\n","01/05 08:48:38 AM valid (50.3, 1.733599822998047)\n","01/05 08:48:39 AM valid 000 8.139554e-01 73.437500 98.437500\n","01/05 08:48:39 AM valid (75.6, 0.7043581504821778)\n","01/05 08:48:39 AM valid 000 8.665187e-01 67.187500 95.312500\n","01/05 08:48:40 AM valid (74.6, 0.744478271484375)\n","01/05 08:48:40 AM valid 000 1.339133e+00 56.250000 93.750000\n","01/05 08:48:41 AM valid (59.8, 1.2642358064651489)\n","01/05 08:48:41 AM valid 000 9.214725e-01 67.187500 95.312500\n","01/05 08:48:42 AM valid (71.9, 0.8188581109046936)\n","01/05 08:48:42 AM valid 000 7.005218e-01 76.562500 95.312500\n","01/05 08:48:42 AM valid (81.5, 0.5448311614990234)\n","{'avg': 0.7119367951869965, 'std': 0.10608295222641921, 'min': 0.5448311614990234, 'max': 0.85306884765625}\n","01/05 08:48:43 AM {'test': (81.5, 0.5448311614990234), 'train': (76.76, 0.6991744176387786), 'edge': 6}\n","01/05 08:48:44 AM {'test': (76.5, 0.6929754991531372), 'train': (74.92, 0.7575964071273804), 'edge': 12}\n","01/05 08:48:45 AM {'test': (79.9, 0.6355853323936462), 'train': (76.14, 0.7106078807353974), 'edge': 9}\n","01/05 08:48:45 AM {'test': (70.3, 0.8487840919494629), 'train': (72.94, 0.7879031390190124), 'edge': 8}\n","01/05 08:48:47 AM {'test': (70.7, 0.85306884765625), 'train': (74.14, 0.7856560647964478), 'edge': 7}\n","01/05 08:48:48 AM {'test': (76.6, 0.6382144546508789), 'train': (75.38, 0.7148163101196289), 'edge': 14}\n","01/05 08:48:49 AM {'test': (78.1, 0.6381540584564209), 'train': (75.58, 0.714370786857605), 'edge': 5}\n","01/05 08:48:50 AM {'test': (70.3, 0.8487840919494629), 'train': (72.94, 0.7879031390190124), 'edge': 8}\n","01/05 08:48:50 AM {'test': (71.9, 0.7807559595108032), 'train': (73.68, 0.7684847085475922), 'edge': 12}\n","01/05 08:48:51 AM {'test': (76.6, 0.6382144546508789), 'train': (75.38, 0.7148163101196289), 'edge': 14}\n","01/05 08:48:52 AM generation 15\n","01/05 08:48:52 AM train 000 6.289487e-01 79.687500 100.000000\n","01/05 08:49:06 AM train 100 4.326813e-01 85.024752 99.582302\n","01/05 08:49:19 AM train weight (84.616, 0.4415700980949402)\n","01/05 08:49:19 AM train 000 1.003541e+00 65.625000 95.312500\n","01/05 08:49:50 AM train (76.02, 0.7111675686836243)\n","01/05 08:49:51 AM train 000 9.531026e-01 68.750000 96.875000\n","01/05 08:50:21 AM train (75.1, 0.7465915448188781)\n","01/05 08:50:22 AM train 000 9.936497e-01 70.312500 98.437500\n","01/05 08:50:53 AM train (74.46, 0.7539346948623658)\n","01/05 08:50:53 AM train 000 5.720364e-01 79.687500 100.000000\n","01/05 08:51:24 AM train (73.74, 0.7727558458328248)\n","01/05 08:51:24 AM train 000 5.893124e-01 79.687500 98.437500\n","01/05 08:51:55 AM train (73.7, 0.8010024689674378)\n","01/05 08:51:55 AM train 000 8.582988e-01 78.125000 98.437500\n","01/05 08:52:26 AM train (74.88, 0.7359564971923828)\n","01/05 08:52:26 AM train 000 6.696244e-01 76.562500 100.000000\n","01/05 08:52:57 AM train (75.46, 0.7230639039993286)\n","01/05 08:52:57 AM train 000 7.980431e-01 68.750000 100.000000\n","01/05 08:53:28 AM train (73.62, 0.7588641262054443)\n","01/05 08:53:28 AM train 000 7.560080e-01 71.875000 100.000000\n","01/05 08:53:59 AM train (74.02, 0.7811798147201539)\n","01/05 08:54:00 AM train 000 6.878562e-01 75.000000 100.000000\n","01/05 08:54:30 AM train (75.46, 0.7213483310699463)\n","01/05 08:54:31 AM train 000 5.105214e-01 84.375000 98.437500\n","01/05 08:55:01 AM train (76.34, 0.6980297674179077)\n","01/05 08:55:02 AM train 000 6.325507e-01 79.687500 98.437500\n","01/05 08:55:33 AM train (75.36, 0.7612921022415161)\n","01/05 08:55:33 AM train 000 7.683011e-01 73.437500 100.000000\n","01/05 08:56:04 AM train (75.5, 0.7324292240142822)\n","01/05 08:56:04 AM train 000 7.662521e-01 75.000000 100.000000\n","01/05 08:56:35 AM train (73.6, 0.7758572085380554)\n","01/05 08:56:36 AM train 000 9.082459e-01 68.750000 96.875000\n","01/05 08:57:06 AM train (74.16, 0.7951345245361328)\n","01/05 08:57:07 AM train 000 7.530271e-01 73.437500 100.000000\n","01/05 08:57:38 AM train (74.56, 0.7364695288658142)\n","01/05 08:57:38 AM train 000 8.443294e-01 68.750000 100.000000\n","01/05 08:58:09 AM train (74.44, 0.734286346244812)\n","01/05 08:58:09 AM train 000 7.445604e-01 75.000000 100.000000\n","01/05 08:58:40 AM train (75.1, 0.7420677545547485)\n","01/05 08:58:40 AM train 000 8.608459e-01 71.875000 96.875000\n","01/05 08:59:11 AM train (74.28, 0.7777741565704346)\n","01/05 08:59:12 AM train 000 1.095436e+00 71.875000 95.312500\n","01/05 08:59:42 AM train (74.44, 0.78153089427948)\n","01/05 08:59:43 AM train 000 6.354778e-01 78.125000 100.000000\n","01/05 09:00:13 AM train (75.74, 0.7050100313186646)\n","01/05 09:00:13 AM valid 000 7.827306e-01 71.875000 95.312500\n","01/05 09:00:14 AM valid (79.7, 0.5842687878608703)\n","01/05 09:00:14 AM valid 000 7.332882e-01 76.562500 96.875000\n","01/05 09:00:15 AM valid (78.8, 0.6561190700531006)\n","01/05 09:00:15 AM valid 000 8.690936e-01 75.000000 95.312500\n","01/05 09:00:16 AM valid (78.8, 0.6893852944374085)\n","01/05 09:00:16 AM valid 000 1.137790e+00 70.312500 95.312500\n","01/05 09:00:17 AM valid (66.9, 1.0223157024383545)\n","01/05 09:00:17 AM valid 000 1.022770e+00 65.625000 95.312500\n","01/05 09:00:17 AM valid (70.5, 0.8845185041427612)\n","01/05 09:00:18 AM valid 000 9.482170e-01 70.312500 95.312500\n","01/05 09:00:18 AM valid (73.8, 0.7539482798576355)\n","01/05 09:00:19 AM valid 000 8.141828e-01 73.437500 96.875000\n","01/05 09:00:19 AM valid (79.1, 0.6778748922348022)\n","01/05 09:00:19 AM valid 000 1.254605e+00 62.500000 93.750000\n","01/05 09:00:20 AM valid (62.6, 1.1740030612945556)\n","01/05 09:00:20 AM valid 000 8.637542e-01 76.562500 92.187500\n","01/05 09:00:21 AM valid (73.5, 0.8205307540893555)\n","01/05 09:00:21 AM valid 000 9.482170e-01 70.312500 95.312500\n","01/05 09:00:22 AM valid (73.8, 0.7539482798576355)\n","01/05 09:00:22 AM valid 000 7.827306e-01 71.875000 95.312500\n","01/05 09:00:23 AM valid (79.7, 0.5842687878608703)\n","01/05 09:00:23 AM valid 000 7.332882e-01 76.562500 96.875000\n","01/05 09:00:23 AM valid (78.8, 0.6561190700531006)\n","01/05 09:00:24 AM valid 000 8.655185e-01 75.000000 95.312500\n","01/05 09:00:24 AM valid (78.6, 0.6858181247711181)\n","01/05 09:00:24 AM valid 000 1.137790e+00 70.312500 95.312500\n","01/05 09:00:25 AM valid (66.9, 1.0223157024383545)\n","01/05 09:00:25 AM valid 000 1.041804e+00 68.750000 93.750000\n","01/05 09:00:26 AM valid (66.0, 1.0416109342575073)\n","01/05 09:00:26 AM valid 000 8.932844e-01 73.437500 95.312500\n","01/05 09:00:27 AM valid (73.5, 0.7750095324516296)\n","01/05 09:00:27 AM valid 000 7.402883e-01 76.562500 95.312500\n","01/05 09:00:27 AM valid (75.4, 0.6811022963523865)\n","01/05 09:00:28 AM valid 000 1.607760e+00 53.125000 84.375000\n","01/05 09:00:28 AM valid (52.7, 1.6868365411758424)\n","01/05 09:00:28 AM valid 000 2.177227e+00 45.312500 82.812500\n","01/05 09:00:29 AM valid (44.4, 2.1523449363708496)\n","01/05 09:00:29 AM valid 000 1.544656e+00 53.125000 95.312500\n","01/05 09:00:30 AM valid (60.9, 1.333194465637207)\n","01/05 09:00:30 AM valid 000 7.827306e-01 71.875000 95.312500\n","01/05 09:00:31 AM valid (79.7, 0.5842687878608703)\n","{'avg': 0.8080900376319885, 'std': 0.1736571864874737, 'min': 0.5842687878608703, 'max': 1.1740030612945556}\n","01/05 09:00:31 AM {'test': (79.7, 0.5842687878608703), 'train': (76.02, 0.7111675686836243), 'edge': 6}\n","01/05 09:00:32 AM {'test': (78.8, 0.6561190700531006), 'train': (75.1, 0.7465915448188781), 'edge': 12}\n","01/05 09:00:33 AM {'test': (78.8, 0.6893852944374085), 'train': (74.46, 0.7539346948623658), 'edge': 11}\n","01/05 09:00:34 AM {'test': (66.9, 1.0223157024383545), 'train': (73.74, 0.7727558458328248), 'edge': 8}\n","01/05 09:00:34 AM {'test': (70.5, 0.8845185041427612), 'train': (73.7, 0.8010024689674378), 'edge': 9}\n","01/05 09:00:35 AM {'test': (73.8, 0.7539482798576355), 'train': (74.88, 0.7359564971923828), 'edge': 14}\n","01/05 09:00:36 AM {'test': (79.1, 0.6778748922348022), 'train': (75.46, 0.7230639039993286), 'edge': 5}\n","01/05 09:00:37 AM {'test': (62.6, 1.1740030612945556), 'train': (73.62, 0.7588641262054443), 'edge': 8}\n","01/05 09:00:37 AM {'test': (70.5, 0.8845185041427612), 'train': (73.7, 0.8010024689674378), 'edge': 9}\n","01/05 09:00:38 AM {'test': (73.8, 0.7539482798576355), 'train': (74.88, 0.7359564971923828), 'edge': 14}\n","01/05 09:00:39 AM generation 16\n","01/05 09:00:39 AM train 000 4.906112e-01 82.812500 98.437500\n","01/05 09:00:53 AM train 100 4.134835e-01 85.473391 99.628713\n","01/05 09:01:06 AM train weight (85.816, 0.41276242610931396)\n","01/05 09:01:07 AM train 000 8.407552e-01 68.750000 98.437500\n","01/05 09:01:38 AM train (76.56, 0.7025034467697143)\n","01/05 09:01:38 AM train 000 1.017444e+00 70.312500 95.312500\n","01/05 09:02:09 AM train (74.18, 0.7872662315368653)\n","01/05 09:02:10 AM train 000 1.034524e+00 73.437500 96.875000\n","01/05 09:02:41 AM train (75.7, 0.7182450603485108)\n","01/05 09:02:41 AM train 000 5.334226e-01 84.375000 100.000000\n","01/05 09:03:12 AM train (74.74, 0.7288551104545593)\n","01/05 09:03:12 AM train 000 1.519533e+00 57.812500 100.000000\n","01/05 09:03:43 AM train (74.0, 0.8163516792297363)\n","01/05 09:03:44 AM train 000 5.162249e-01 82.812500 100.000000\n","01/05 09:04:15 AM train (75.76, 0.7213582329750061)\n","01/05 09:04:15 AM train 000 7.142015e-01 75.000000 100.000000\n","01/05 09:04:46 AM train (76.3, 0.725283470916748)\n","01/05 09:04:47 AM train 000 5.042096e-01 82.812500 100.000000\n","01/05 09:05:17 AM train (75.2, 0.7388684522628785)\n","01/05 09:05:18 AM train 000 8.961499e-01 73.437500 96.875000\n","01/05 09:05:49 AM train (74.66, 0.799190225982666)\n","01/05 09:05:50 AM train 000 6.045213e-01 81.250000 100.000000\n","01/05 09:06:21 AM train (75.7, 0.7105676976442337)\n","01/05 09:06:21 AM train 000 7.071195e-01 79.687500 98.437500\n","01/05 09:06:52 AM train (76.24, 0.7073866908073425)\n","01/05 09:06:53 AM train 000 5.735582e-01 76.562500 98.437500\n","01/05 09:07:24 AM train (74.12, 0.7931524967193604)\n","01/05 09:07:24 AM train 000 6.010898e-01 78.125000 100.000000\n","01/05 09:07:55 AM train (76.56, 0.717942596244812)\n","01/05 09:07:56 AM train 000 7.609808e-01 71.875000 100.000000\n","01/05 09:08:27 AM train (74.44, 0.7646670063972473)\n","01/05 09:08:27 AM train 000 7.461028e-01 73.437500 100.000000\n","01/05 09:08:58 AM train (74.62, 0.8153097707748413)\n","01/05 09:08:59 AM train 000 8.247557e-01 67.187500 98.437500\n","01/05 09:09:30 AM train (75.08, 0.7214545224189758)\n","01/05 09:09:30 AM train 000 7.346329e-01 76.562500 98.437500\n","01/05 09:10:01 AM train (74.7, 0.7474613868713379)\n","01/05 09:10:01 AM train 000 8.022184e-01 78.125000 96.875000\n","01/05 09:10:32 AM train (74.84, 0.7578729633331299)\n","01/05 09:10:33 AM train 000 7.676021e-01 75.000000 98.437500\n","01/05 09:11:04 AM train (74.04, 0.8042636901855469)\n","01/05 09:11:05 AM train 000 5.883197e-01 79.687500 100.000000\n","01/05 09:11:36 AM train (75.62, 0.7250924822568894)\n","01/05 09:11:36 AM train 000 4.896561e-01 84.375000 100.000000\n","01/05 09:12:07 AM train (75.94, 0.7192550209999085)\n","01/05 09:12:07 AM valid 000 7.579869e-01 75.000000 95.312500\n","01/05 09:12:08 AM valid (80.9, 0.5836417791843415)\n","01/05 09:12:08 AM valid 000 7.374232e-01 76.562500 98.437500\n","01/05 09:12:09 AM valid (76.3, 0.7505486536026001)\n","01/05 09:12:09 AM valid 000 8.313679e-01 76.562500 96.875000\n","01/05 09:12:10 AM valid (79.5, 0.6728206620216369)\n","01/05 09:12:10 AM valid 000 1.069800e+00 67.187500 96.875000\n","01/05 09:12:11 AM valid (67.2, 0.954994333267212)\n","01/05 09:12:11 AM valid 000 1.108414e+00 67.187500 92.187500\n","01/05 09:12:11 AM valid (66.4, 1.058782525062561)\n","01/05 09:12:12 AM valid 000 8.781594e-01 71.875000 96.875000\n","01/05 09:12:12 AM valid (74.2, 0.7604341192245483)\n","01/05 09:12:12 AM valid 000 8.542793e-01 76.562500 96.875000\n","01/05 09:12:13 AM valid (74.4, 0.7840867533683776)\n","01/05 09:12:13 AM valid 000 1.096501e+00 70.312500 96.875000\n","01/05 09:12:14 AM valid (65.8, 1.0155806198120116)\n","01/05 09:12:14 AM valid 000 1.108414e+00 67.187500 92.187500\n","01/05 09:12:15 AM valid (66.4, 1.058782525062561)\n","01/05 09:12:15 AM valid 000 9.026057e-01 71.875000 96.875000\n","01/05 09:12:16 AM valid (74.2, 0.7578488965034484)\n","01/05 09:12:16 AM valid 000 7.579869e-01 75.000000 95.312500\n","01/05 09:12:16 AM valid (80.9, 0.5836417791843415)\n","01/05 09:12:17 AM valid 000 7.684956e-01 76.562500 98.437500\n","01/05 09:12:17 AM valid (75.9, 0.7363133287429809)\n","01/05 09:12:17 AM valid 000 9.680201e-01 68.750000 96.875000\n","01/05 09:12:18 AM valid (70.4, 0.8810831637382507)\n","01/05 09:12:18 AM valid 000 1.977409e+00 42.187500 89.062500\n","01/05 09:12:19 AM valid (44.6, 1.9131007251739502)\n","01/05 09:12:19 AM valid 000 1.205286e+00 59.375000 93.750000\n","01/05 09:12:20 AM valid (63.8, 1.1673740129470824)\n","01/05 09:12:20 AM valid 000 9.026057e-01 71.875000 96.875000\n","01/05 09:12:21 AM valid (74.2, 0.7578488965034484)\n","01/05 09:12:21 AM valid 000 1.500899e+00 54.687500 92.187500\n","01/05 09:12:21 AM valid (53.5, 1.523459035873413)\n","01/05 09:12:22 AM valid 000 8.565581e-01 76.562500 96.875000\n","01/05 09:12:22 AM valid (71.2, 0.8642145929336548)\n","01/05 09:12:22 AM valid 000 1.108414e+00 67.187500 92.187500\n","01/05 09:12:23 AM valid (66.4, 1.058782525062561)\n","01/05 09:12:23 AM valid 000 8.994249e-01 73.437500 96.875000\n","01/05 09:12:24 AM valid (74.5, 0.7640822868347168)\n","01/05 09:12:24 AM valid 000 7.579869e-01 75.000000 95.312500\n","01/05 09:12:25 AM valid (80.9, 0.5836417791843415)\n","{'avg': 0.8743767866849899, 'std': 0.19541089060913278, 'min': 0.5836417791843415, 'max': 1.1673740129470824}\n","01/05 09:12:26 AM {'test': (80.9, 0.5836417791843415), 'train': (76.56, 0.7025034467697143), 'edge': 6}\n","01/05 09:12:26 AM {'test': (75.9, 0.7363133287429809), 'train': (74.12, 0.7931524967193604), 'edge': 10}\n","01/05 09:12:27 AM {'test': (79.5, 0.6728206620216369), 'train': (75.7, 0.7182450603485108), 'edge': 11}\n","01/05 09:12:28 AM {'test': (65.8, 1.0155806198120116), 'train': (75.2, 0.7388684522628785), 'edge': 7}\n","01/05 09:12:29 AM {'test': (74.2, 0.7604341192245483), 'train': (75.76, 0.7213582329750061), 'edge': 14}\n","01/05 09:12:29 AM {'test': (63.8, 1.1673740129470824), 'train': (74.62, 0.8153097707748413), 'edge': 9}\n","01/05 09:12:30 AM {'test': (71.2, 0.8642145929336548), 'train': (74.84, 0.7578729633331299), 'edge': 10}\n","01/05 09:12:31 AM {'test': (63.8, 1.1673740129470824), 'train': (74.62, 0.8153097707748413), 'edge': 9}\n","01/05 09:12:32 AM {'test': (74.2, 0.7604341192245483), 'train': (75.76, 0.7213582329750061), 'edge': 14}\n","01/05 09:12:32 AM {'test': (65.8, 1.0155806198120116), 'train': (75.2, 0.7388684522628785), 'edge': 7}\n","01/05 09:12:33 AM generation 17\n","01/05 09:12:33 AM train 000 5.063389e-01 87.500000 98.437500\n","01/05 09:12:47 AM train 100 4.038014e-01 85.705446 99.721535\n","01/05 09:13:01 AM train weight (85.84, 0.4071791502189636)\n","01/05 09:13:01 AM train 000 8.144599e-01 76.562500 98.437500\n","01/05 09:13:33 AM train (77.02, 0.6554814394950866)\n","01/05 09:13:33 AM train 000 1.085273e+00 64.062500 98.437500\n","01/05 09:14:05 AM train (76.38, 0.7271172832489013)\n","01/05 09:14:05 AM train 000 8.410705e-01 67.187500 96.875000\n","01/05 09:14:37 AM train (75.6, 0.7236742702484131)\n","01/05 09:14:38 AM train 000 5.433187e-01 82.812500 100.000000\n","01/05 09:15:09 AM train (75.94, 0.7098165548324585)\n","01/05 09:15:10 AM train 000 1.025692e+00 71.875000 95.312500\n","01/05 09:15:42 AM train (76.08, 0.7004652033805847)\n","01/05 09:15:42 AM train 000 3.926003e-01 87.500000 100.000000\n","01/05 09:16:14 AM train (75.28, 0.7830593633651733)\n","01/05 09:16:14 AM train 000 7.306201e-01 76.562500 98.437500\n","01/05 09:16:45 AM train (75.28, 0.7391134063720703)\n","01/05 09:16:45 AM train 000 7.751704e-01 75.000000 98.437500\n","01/05 09:17:16 AM train (75.48, 0.7613724838256836)\n","01/05 09:17:17 AM train 000 4.271747e-01 89.062500 100.000000\n"],"name":"stdout"},{"output_type":"stream","text":["Traceback (most recent call last):\n"],"name":"stderr"},{"output_type":"stream","text":["01/05 09:17:48 AM train (76.68, 0.7036623676300049)\n","01/05 09:17:49 AM train 000 5.590777e-01 81.250000 100.000000\n","01/05 09:18:20 AM train (75.6, 0.7129726930618286)\n","01/05 09:18:21 AM train 000 5.591938e-01 81.250000 100.000000\n","01/05 09:18:53 AM train (77.86, 0.6561803415298462)\n","01/05 09:18:53 AM train 000 7.626523e-01 73.437500 96.875000\n","01/05 09:19:24 AM train (75.26, 0.7386764039993287)\n","01/05 09:19:25 AM train 000 4.880184e-01 82.812500 98.437500\n","01/05 09:19:56 AM train (76.6, 0.6818442673683166)\n","01/05 09:19:57 AM train 000 8.219652e-01 71.875000 98.437500\n","01/05 09:20:27 AM train (76.58, 0.691133388710022)\n","01/05 09:20:28 AM train 000 6.842934e-01 75.000000 100.000000\n","01/05 09:20:59 AM train (76.1, 0.6862288135528565)\n","01/05 09:21:00 AM train 000 8.214347e-01 75.000000 100.000000\n","01/05 09:21:30 AM train (75.04, 0.7745832345962524)\n","01/05 09:21:31 AM train 000 6.643898e-01 78.125000 100.000000\n","01/05 09:22:02 AM train (75.52, 0.7352288595199585)\n","01/05 09:22:02 AM train 000 9.978250e-01 68.750000 93.750000\n","01/05 09:22:33 AM train (75.1, 0.7768568486213684)\n","01/05 09:22:33 AM train 000 6.080140e-01 79.687500 100.000000\n","01/05 09:23:04 AM train (76.52, 0.6977412239074707)\n","01/05 09:23:05 AM train 000 5.607105e-01 78.125000 100.000000\n","01/05 09:23:36 AM train (76.2, 0.7092622638225555)\n","01/05 09:23:36 AM train 000 7.992201e-01 68.750000 96.875000\n","01/05 09:24:07 AM train (77.58, 0.6654055637359619)\n","01/05 09:24:07 AM valid 000 8.139303e-01 75.000000 95.312500\n","01/05 09:24:08 AM valid (81.7, 0.548713225364685)\n","01/05 09:24:08 AM valid 000 8.520925e-01 73.437500 95.312500\n","01/05 09:24:09 AM valid (79.9, 0.652356876373291)\n","01/05 09:24:09 AM valid 000 8.538221e-01 71.875000 95.312500\n","01/05 09:24:10 AM valid (78.7, 0.6283615498542786)\n","01/05 09:24:10 AM valid 000 1.189484e+00 70.312500 96.875000\n","01/05 09:24:10 AM valid (66.1, 1.05546381855011)\n","01/05 09:24:11 AM valid 000 1.000262e+00 68.750000 95.312500\n","01/05 09:24:11 AM valid (75.6, 0.7437192726135254)\n","01/05 09:24:11 AM valid 000 1.148102e+00 67.187500 93.750000\n","01/05 09:24:12 AM valid (65.6, 1.023506911277771)\n","01/05 09:24:12 AM valid 000 8.947043e-01 76.562500 96.875000\n","01/05 09:24:13 AM valid (73.1, 0.8090396585464478)\n","01/05 09:24:13 AM valid 000 1.148102e+00 67.187500 93.750000\n","01/05 09:24:14 AM valid (65.6, 1.023506911277771)\n","01/05 09:24:14 AM valid 000 9.281600e-01 70.312500 95.312500\n","01/05 09:24:15 AM valid (76.4, 0.7052583894729614)\n","01/05 09:24:15 AM valid 000 1.263332e+00 68.750000 95.312500\n","01/05 09:24:15 AM valid (64.0, 1.152417251586914)\n","01/05 09:24:16 AM valid 000 8.139303e-01 75.000000 95.312500\n","01/05 09:24:16 AM valid (81.7, 0.548713225364685)\n","01/05 09:24:16 AM valid 000 8.607414e-01 73.437500 96.875000\n","01/05 09:24:17 AM valid (78.2, 0.6615170130729675)\n","01/05 09:24:17 AM valid 000 2.248385e+00 43.750000 85.937500\n","01/05 09:24:18 AM valid (43.3, 2.3841408672332762)\n","01/05 09:24:18 AM valid 000 8.961986e-01 71.875000 95.312500\n","01/05 09:24:19 AM valid (78.1, 0.6736810407638549)\n","01/05 09:24:19 AM valid 000 9.281600e-01 70.312500 95.312500\n","01/05 09:24:19 AM valid (76.4, 0.7052583894729614)\n","01/05 09:24:20 AM valid 000 1.148102e+00 67.187500 93.750000\n","01/05 09:24:20 AM valid (65.6, 1.023506911277771)\n","01/05 09:24:20 AM valid 000 8.947043e-01 76.562500 96.875000\n","01/05 09:24:21 AM valid (73.1, 0.8090396585464478)\n","01/05 09:24:21 AM valid 000 1.148102e+00 67.187500 93.750000\n","01/05 09:24:22 AM valid (65.6, 1.023506911277771)\n","01/05 09:24:22 AM valid 000 9.281600e-01 70.312500 95.312500\n","01/05 09:24:23 AM valid (76.4, 0.7052583894729614)\n","01/05 09:24:23 AM valid 000 1.263332e+00 68.750000 95.312500\n","01/05 09:24:24 AM valid (64.0, 1.152417251586914)\n","01/05 09:24:24 AM valid 000 8.139303e-01 75.000000 95.312500\n","01/05 09:24:24 AM valid (81.7, 0.548713225364685)\n","{'avg': 0.7880744372844696, 'std': 0.17503393712812604, 'min': 0.548713225364685, 'max': 1.05546381855011}\n","01/05 09:24:25 AM {'test': (81.7, 0.548713225364685), 'train': (77.02, 0.6554814394950866), 'edge': 6}\n","01/05 09:24:26 AM {'test': (79.9, 0.652356876373291), 'train': (76.38, 0.7271172832489013), 'edge': 11}\n","01/05 09:24:27 AM {'test': (78.7, 0.6283615498542786), 'train': (75.6, 0.7236742702484131), 'edge': 11}\n","01/05 09:24:27 AM {'test': (75.6, 0.7437192726135254), 'train': (76.08, 0.7004652033805847), 'edge': 13}\n","01/05 09:24:28 AM {'test': (66.1, 1.05546381855011), 'train': (75.94, 0.7098165548324585), 'edge': 7}\n","01/05 09:24:29 AM {'test': (65.6, 1.023506911277771), 'train': (75.28, 0.7830593633651733), 'edge': 9}\n","01/05 09:24:30 AM {'test': (73.1, 0.8090396585464478), 'train': (75.28, 0.7391134063720703), 'edge': 10}\n","01/05 09:24:30 AM {'test': (75.6, 0.7437192726135254), 'train': (76.08, 0.7004652033805847), 'edge': 13}\n","01/05 09:24:31 AM {'test': (65.6, 1.023506911277771), 'train': (75.28, 0.7830593633651733), 'edge': 9}\n","01/05 09:24:32 AM {'test': (79.9, 0.652356876373291), 'train': (76.38, 0.7271172832489013), 'edge': 11}\n","01/05 09:24:32 AM generation 18\n","01/05 09:24:33 AM train 000 3.763807e-01 87.500000 100.000000\n","01/05 09:24:47 AM train 100 3.866639e-01 86.262376 99.690594\n","01/05 09:25:00 AM train weight (86.632, 0.38302826545238494)\n","01/05 09:25:01 AM train 000 8.231885e-01 76.562500 98.437500\n","01/05 09:25:32 AM train (77.64, 0.6874093381881714)\n","01/05 09:25:32 AM train 000 7.636854e-01 73.437500 98.437500\n","01/05 09:26:04 AM train (76.54, 0.7205176866054535)\n","01/05 09:26:04 AM train 000 7.188693e-01 81.250000 98.437500\n","01/05 09:26:36 AM train (76.74, 0.6881732036590577)\n","01/05 09:26:36 AM train 000 7.769623e-01 75.000000 96.875000\n","01/05 09:27:07 AM train (76.96, 0.6854109644889832)\n","01/05 09:27:08 AM train 000 6.651644e-01 75.000000 100.000000\n","01/05 09:27:38 AM train (75.7, 0.7157768383026123)\n","01/05 09:27:39 AM train 000 5.041231e-01 79.687500 100.000000\n","01/05 09:28:09 AM train (74.9, 0.7885712950706482)\n","01/05 09:28:10 AM train 000 4.003997e-01 85.937500 100.000000\n","01/05 09:28:40 AM train (75.96, 0.7461129979133606)\n","01/05 09:28:41 AM train 000 8.788457e-01 73.437500 96.875000\n","01/05 09:29:11 AM train (76.5, 0.6939733043670654)\n","01/05 09:29:12 AM train 000 5.751032e-01 76.562500 100.000000\n","01/05 09:29:43 AM train (75.04, 0.7692917894363404)\n","01/05 09:29:43 AM train 000 6.749465e-01 79.687500 96.875000\n","01/05 09:30:14 AM train (76.02, 0.7377554944038391)\n","01/05 09:30:15 AM train 000 7.152135e-01 81.250000 98.437500\n","01/05 09:30:46 AM train (76.8, 0.7134208417892456)\n","01/05 09:30:46 AM train 000 6.256903e-01 78.125000 96.875000\n","01/05 09:31:17 AM train (77.18, 0.6837721366882324)\n","01/05 09:31:17 AM train 000 5.213245e-01 81.250000 100.000000\n","01/05 09:31:48 AM train (77.04, 0.6889548767089844)\n","01/05 09:31:48 AM train 000 5.817807e-01 82.812500 96.875000\n","01/05 09:32:19 AM train (77.1, 0.6947353915214538)\n","01/05 09:32:20 AM train 000 4.524418e-01 81.250000 100.000000\n","01/05 09:32:50 AM train (75.72, 0.7533445213317871)\n","01/05 09:32:50 AM train 000 6.493795e-01 75.000000 98.437500\n","01/05 09:33:21 AM train (74.44, 0.7600773927688599)\n","01/05 09:33:21 AM train 000 6.906046e-01 73.437500 100.000000\n","01/05 09:33:52 AM train (76.44, 0.7198099355697631)\n","01/05 09:33:52 AM train 000 7.739608e-01 73.437500 96.875000\n","01/05 09:34:23 AM train (76.5, 0.6970260847091675)\n","01/05 09:34:24 AM train 000 1.088096e+00 68.750000 95.312500\n","01/05 09:34:54 AM train (77.2, 0.7397398337364197)\n","01/05 09:34:55 AM train 000 7.894411e-01 75.000000 95.312500\n","01/05 09:35:25 AM train (74.6, 0.7699679569244384)\n","01/05 09:35:26 AM train 000 5.665207e-01 75.000000 100.000000\n","01/05 09:35:57 AM train (77.58, 0.6720763269424439)\n","01/05 09:35:57 AM valid 000 8.305975e-01 73.437500 95.312500\n","01/05 09:35:58 AM valid (81.2, 0.5574476201534271)\n","01/05 09:35:58 AM valid 000 8.476341e-01 71.875000 95.312500\n","01/05 09:35:59 AM valid (78.5, 0.6602041406631469)\n","01/05 09:35:59 AM valid 000 8.269198e-01 75.000000 93.750000\n","01/05 09:35:59 AM valid (80.2, 0.618403037071228)\n","01/05 09:36:00 AM valid 000 9.824692e-01 71.875000 96.875000\n","01/05 09:36:00 AM valid (75.8, 0.7525136051177979)\n","01/05 09:36:00 AM valid 000 1.118230e+00 67.187500 95.312500\n","01/05 09:36:01 AM valid (67.0, 1.0126861805915832)\n","01/05 09:36:01 AM valid 000 1.172088e+00 65.625000 93.750000\n","01/05 09:36:02 AM valid (66.2, 1.015532952785492)\n","01/05 09:36:02 AM valid 000 9.167006e-01 78.125000 93.750000\n","01/05 09:36:03 AM valid (72.7, 0.8628419389724732)\n","01/05 09:36:03 AM valid 000 9.875783e-01 70.312500 96.875000\n","01/05 09:36:04 AM valid (75.5, 0.7264676389694213)\n","01/05 09:36:04 AM valid 000 1.172088e+00 65.625000 93.750000\n","01/05 09:36:04 AM valid (66.2, 1.015532952785492)\n","01/05 09:36:05 AM valid 000 8.476341e-01 71.875000 95.312500\n","01/05 09:36:05 AM valid (78.5, 0.6602041406631469)\n","01/05 09:36:05 AM valid 000 8.245631e-01 79.687500 95.312500\n","01/05 09:36:06 AM valid (77.9, 0.6820327100753785)\n","01/05 09:36:06 AM valid 000 9.303121e-01 73.437500 95.312500\n","01/05 09:36:07 AM valid (80.0, 0.6097222900390625)\n","01/05 09:36:07 AM valid 000 8.269198e-01 75.000000 93.750000\n","01/05 09:36:08 AM valid (80.2, 0.618403037071228)\n","01/05 09:36:08 AM valid 000 9.824692e-01 71.875000 96.875000\n","01/05 09:36:09 AM valid (75.8, 0.7525136051177979)\n","01/05 09:36:09 AM valid 000 7.332918e-01 76.562500 98.437500\n","01/05 09:36:09 AM valid (74.8, 0.7406839628219605)\n","01/05 09:36:10 AM valid 000 1.246920e+00 60.937500 92.187500\n","01/05 09:36:10 AM valid (62.8, 1.1918133287429808)\n","01/05 09:36:10 AM valid 000 9.167006e-01 78.125000 93.750000\n","01/05 09:36:11 AM valid (72.7, 0.8628419389724732)\n","01/05 09:36:11 AM valid 000 9.824692e-01 71.875000 96.875000\n","01/05 09:36:12 AM valid (75.8, 0.7525136051177979)\n","01/05 09:36:12 AM valid 000 1.762341e+00 45.312500 92.187500\n","01/05 09:36:13 AM valid (58.3, 1.524836869239807)\n","01/05 09:36:13 AM valid 000 1.558170e+00 60.937500 93.750000\n","01/05 09:36:14 AM valid (57.7, 1.563424108505249)\n","01/05 09:36:14 AM valid 000 8.305975e-01 73.437500 95.312500\n","01/05 09:36:14 AM valid (81.2, 0.5574476201534271)\n","{'avg': 0.7760066399812697, 'std': 0.18530831642283138, 'min': 0.5574476201534271, 'max': 1.1918133287429808}\n","01/05 09:36:17 AM {'test': (81.2, 0.5574476201534271), 'train': (77.64, 0.6874093381881714), 'edge': 6}\n","01/05 09:36:18 AM {'test': (78.5, 0.6602041406631469), 'train': (76.54, 0.7205176866054535), 'edge': 11}\n","01/05 09:36:18 AM {'test': (80.2, 0.618403037071228), 'train': (76.74, 0.6881732036590577), 'edge': 11}\n","01/05 09:36:19 AM {'test': (74.8, 0.7406839628219605), 'train': (75.72, 0.7533445213317871), 'edge': 8}\n","01/05 09:36:20 AM {'test': (75.5, 0.7264676389694213), 'train': (76.5, 0.6939733043670654), 'edge': 14}\n","01/05 09:36:21 AM {'test': (62.8, 1.1918133287429808), 'train': (74.44, 0.7600773927688599), 'edge': 6}\n","01/05 09:36:21 AM {'test': (72.7, 0.8628419389724732), 'train': (75.96, 0.7461129979133606), 'edge': 10}\n","01/05 09:36:22 AM {'test': (75.5, 0.7264676389694213), 'train': (76.5, 0.6939733043670654), 'edge': 14}\n","01/05 09:36:23 AM {'test': (66.2, 1.015532952785492), 'train': (74.9, 0.7885712950706482), 'edge': 9}\n","01/05 09:36:24 AM {'test': (78.5, 0.6602041406631469), 'train': (76.54, 0.7205176866054535), 'edge': 11}\n","01/05 09:36:24 AM generation 19\n","01/05 09:36:24 AM train 000 2.893534e-01 89.062500 100.000000\n","01/05 09:36:39 AM train 100 3.479395e-01 87.871287 99.767946\n","01/05 09:36:52 AM train weight (87.448, 0.36250625435829165)\n","01/05 09:36:52 AM train 000 6.059473e-01 79.687500 98.437500\n","01/05 09:37:23 AM train (77.7, 0.6690860410690308)\n","01/05 09:37:24 AM train 000 5.674582e-01 78.125000 100.000000\n","01/05 09:37:55 AM train (75.96, 0.7474964702606202)\n","01/05 09:37:56 AM train 000 1.028633e+00 68.750000 95.312500\n","01/05 09:38:27 AM train (76.46, 0.7022953402519226)\n","01/05 09:38:28 AM train 000 6.861261e-01 76.562500 100.000000\n","01/05 09:38:59 AM train (75.42, 0.7769053163528442)\n","01/05 09:39:00 AM train 000 5.045886e-01 79.687500 100.000000\n","01/05 09:39:30 AM train (76.42, 0.696747192454338)\n","01/05 09:39:31 AM train 000 1.089306e+00 70.312500 93.750000\n","01/05 09:40:02 AM train (74.86, 0.7386575988769531)\n","01/05 09:40:02 AM train 000 9.400629e-01 67.187500 96.875000\n","01/05 09:40:33 AM train (74.98, 0.7365165197372436)\n","01/05 09:40:34 AM train 000 5.888894e-01 79.687500 98.437500\n","01/05 09:41:05 AM train (77.02, 0.6881091339111328)\n","01/05 09:41:05 AM train 000 7.843673e-01 81.250000 98.437500\n","01/05 09:41:36 AM train (74.38, 0.8165882958412171)\n","01/05 09:41:37 AM train 000 7.741486e-01 73.437500 100.000000\n","01/05 09:42:08 AM train (75.44, 0.760292000579834)\n","01/05 09:42:09 AM train 000 7.168332e-01 73.437500 98.437500\n","01/05 09:42:40 AM train (77.08, 0.6808310606956481)\n","01/05 09:42:41 AM train 000 8.986372e-01 70.312500 100.000000\n","01/05 09:43:11 AM train (75.98, 0.7604485763549804)\n","01/05 09:43:12 AM train 000 9.807945e-01 68.750000 96.875000\n","01/05 09:43:43 AM train (75.64, 0.7304280572891235)\n","01/05 09:43:44 AM train 000 7.892280e-01 79.687500 96.875000\n","01/05 09:44:14 AM train (75.86, 0.766718356513977)\n","01/05 09:44:15 AM train 000 5.192022e-01 78.125000 100.000000\n","01/05 09:44:46 AM train (75.82, 0.7138379261016846)\n","01/05 09:44:46 AM train 000 6.365246e-01 82.812500 95.312500\n","01/05 09:45:17 AM train (74.72, 0.7599998710632324)\n","01/05 09:45:18 AM train 000 8.367285e-01 70.312500 95.312500\n","01/05 09:45:49 AM train (75.76, 0.7286726613044738)\n","01/05 09:45:49 AM train 000 5.197365e-01 81.250000 100.000000\n","01/05 09:46:20 AM train (76.94, 0.6963095190048217)\n","01/05 09:46:21 AM train 000 5.823237e-01 79.687500 100.000000\n","01/05 09:46:52 AM train (76.92, 0.706823243522644)\n","01/05 09:46:52 AM train 000 4.953840e-01 78.125000 100.000000\n","01/05 09:47:23 AM train (73.62, 0.819155387878418)\n","01/05 09:47:23 AM train 000 5.193794e-01 85.937500 100.000000\n","01/05 09:47:54 AM train (77.58, 0.6717586170196533)\n","01/05 09:47:55 AM valid 000 8.082690e-01 79.687500 95.312500\n","01/05 09:47:55 AM valid (82.8, 0.5543142795562744)\n","01/05 09:47:55 AM valid 000 8.128209e-01 75.000000 95.312500\n","01/05 09:47:56 AM valid (78.6, 0.6665174608230591)\n","01/05 09:47:56 AM valid 000 8.152486e-01 76.562500 95.312500\n","01/05 09:47:57 AM valid (80.0, 0.6319440975189209)\n","01/05 09:47:57 AM valid 000 7.386891e-01 73.437500 98.437500\n","01/05 09:47:58 AM valid (75.7, 0.7150505442619324)\n","01/05 09:47:58 AM valid 000 9.030803e-01 78.125000 95.312500\n","01/05 09:47:58 AM valid (77.2, 0.6576283535957337)\n","01/05 09:47:59 AM valid 000 1.540485e+00 54.687500 93.750000\n","01/05 09:47:59 AM valid (57.4, 1.3966657943725587)\n","01/05 09:47:59 AM valid 000 9.250581e-01 73.437500 95.312500\n","01/05 09:48:00 AM valid (71.2, 0.894694465637207)\n","01/05 09:48:00 AM valid 000 9.354700e-01 73.437500 95.312500\n","01/05 09:48:01 AM valid (76.3, 0.6840442814826966)\n","01/05 09:48:01 AM valid 000 1.137173e+00 65.625000 95.312500\n","01/05 09:48:02 AM valid (65.6, 1.0374818806648254)\n","01/05 09:48:02 AM valid 000 8.670359e-01 75.000000 95.312500\n","01/05 09:48:03 AM valid (77.3, 0.7085270056724549)\n","01/05 09:48:03 AM valid 000 8.032106e-01 82.812500 95.312500\n","01/05 09:48:03 AM valid (82.4, 0.5679407801628112)\n","01/05 09:48:04 AM valid 000 8.128209e-01 75.000000 95.312500\n","01/05 09:48:04 AM valid (78.6, 0.6665174608230591)\n","01/05 09:48:04 AM valid 000 1.345861e+00 62.500000 95.312500\n","01/05 09:48:05 AM valid (66.4, 1.0869404764175414)\n","01/05 09:48:05 AM valid 000 1.882431e+00 51.562500 93.750000\n","01/05 09:48:06 AM valid (51.9, 1.9553296041488648)\n","01/05 09:48:06 AM valid 000 9.541150e-01 73.437500 95.312500\n","01/05 09:48:07 AM valid (77.3, 0.6873118243217469)\n","01/05 09:48:07 AM valid 000 1.540485e+00 54.687500 93.750000\n","01/05 09:48:08 AM valid (57.4, 1.3966657943725587)\n","01/05 09:48:08 AM valid 000 9.250581e-01 73.437500 95.312500\n","01/05 09:48:08 AM valid (71.2, 0.894694465637207)\n","01/05 09:48:09 AM valid 000 9.030803e-01 78.125000 95.312500\n","01/05 09:48:09 AM valid (77.2, 0.6576283535957337)\n","01/05 09:48:09 AM valid 000 1.067325e+00 73.437500 96.875000\n","01/05 09:48:10 AM valid (74.1, 0.8931452941894531)\n","01/05 09:48:10 AM valid 000 1.262297e+00 53.125000 95.312500\n","01/05 09:48:11 AM valid (59.4, 1.221768584728241)\n","01/05 09:48:11 AM valid 000 7.935243e-01 79.687500 95.312500\n","01/05 09:48:12 AM valid (83.1, 0.552568267583847)\n","{'avg': 0.7974805622339248, 'std': 0.23881419328013023, 'min': 0.552568267583847, 'max': 1.3966657943725587}\n","01/05 09:48:12 AM {'test': (83.1, 0.552568267583847), 'train': (77.58, 0.6717586170196533), 'edge': 6}\n","01/05 09:48:13 AM {'test': (78.6, 0.6665174608230591), 'train': (75.96, 0.7474964702606202), 'edge': 11}\n","01/05 09:48:14 AM {'test': (76.3, 0.6840442814826966), 'train': (77.02, 0.6881091339111328), 'edge': 16}\n","01/05 09:48:15 AM {'test': (75.7, 0.7150505442619324), 'train': (75.42, 0.7769053163528442), 'edge': 8}\n","01/05 09:48:16 AM {'test': (80.0, 0.6319440975189209), 'train': (76.46, 0.7022953402519226), 'edge': 11}\n","01/05 09:48:16 AM {'test': (57.4, 1.3966657943725587), 'train': (74.86, 0.7386575988769531), 'edge': 6}\n","01/05 09:48:17 AM {'test': (77.3, 0.6873118243217469), 'train': (75.82, 0.7138379261016846), 'edge': 15}\n","01/05 09:48:18 AM {'test': (71.2, 0.894694465637207), 'train': (74.98, 0.7365165197372436), 'edge': 10}\n","01/05 09:48:19 AM {'test': (65.6, 1.0374818806648254), 'train': (74.38, 0.8165882958412171), 'edge': 9}\n","01/05 09:48:19 AM {'test': (77.3, 0.7085270056724549), 'train': (75.44, 0.760292000579834), 'edge': 10}\n","01/05 09:48:20 AM book\n","gen\tavg     \tstd      \tmin     \tmax     \n","0  \t1.68635 \t0.391335 \t1.22985 \t2.47091 \n","1  \t1.8479  \t0.758455 \t0.997727\t3.37344 \n","2  \t1.77828 \t0.582455 \t0.925991\t2.76635 \n","3  \t1.29213 \t0.478732 \t0.786337\t2.21116 \n","4  \t1.55185 \t0.920878 \t0.776085\t3.44951 \n","5  \t1.49039 \t0.768336 \t0.750202\t2.68949 \n","6  \t1.17003 \t0.486188 \t0.67173 \t2.36698 \n","7  \t1.07308 \t0.455691 \t0.667099\t2.17804 \n","8  \t1.07918 \t0.516121 \t0.640729\t2.39111 \n","9  \t1.15996 \t0.429877 \t0.664393\t2.14641 \n","10 \t0.891772\t0.274479 \t0.597374\t1.43059 \n","11 \t0.956756\t0.339774 \t0.591567\t1.71116 \n","12 \t0.823809\t0.139523 \t0.586481\t0.985402\n","13 \t0.788241\t0.0945843\t0.624066\t0.923033\n","14 \t0.711937\t0.106083 \t0.544831\t0.853069\n","15 \t0.80809 \t0.173657 \t0.584269\t1.174   \n","16 \t0.874377\t0.195411 \t0.583642\t1.16737 \n","17 \t0.788074\t0.175034 \t0.548713\t1.05546 \n","18 \t0.776007\t0.185308 \t0.557448\t1.19181 \n","19 \t0.797481\t0.238814 \t0.552568\t1.39667 \n"],"name":"stdout"}]}]}